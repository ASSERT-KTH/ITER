bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	50	1	add
2	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	50	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	50	1	add
4	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	50	1	add
5	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  StepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepStart  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  StepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    StepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	50	None	add
6	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepEnd  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepEnd  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	50	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepStart  =  Math.min(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
8	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepStart  =  Math.min(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepSize  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepSize  =  Math.min(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
10	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepSize  =  Math.min(stepStart,  stepHandlers.size());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepSize  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepSize  =  Math.min(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepStart  =  Math.min(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
12	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepSize,  stepHandlers.size());  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepStart  =  Math.min(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
13	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  StepHandler  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [CE]  no  suitable  method  found  for  min(StepHandler,int)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  StepHandler  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    StepHandler  stepStart  =  Math.min(stepStart,  stepHandlers.size());	  	non-compiled	[CE]  no  suitable  method  found  for  min(StepHandler,int)	128	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepSize  =  Math.min(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepSize  =  Math.min(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
15	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepSize  =  Math.min(stepSize,  stepHandlers.size());  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepSize  =  Math.min(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepSize  =  Math.min(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
16	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  [CE]  cannot  find  symbol  hasLastStep  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	32	None	replace
17	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    hasLastStep    =    true;    	non-compiled	[CE]  incompatible  types	32	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepStart    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	51	1	replace
19	[BUG]  [BUGGY]  stepStart  =  Double.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepStart    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	51	1	replace
20	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [CE]  cannot  find  symbol  areLastStep  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    areLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  areLastStep	33	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    areLastStep    =    true;    	compilable	  [FE]  AssertionError  	33	1	replace
22	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    areLastStep    =    true;    	compilable	  [FE]  AssertionError  	33	1	replace
23	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    areLastStep    =    true;    	non-compiled	[CE]  incompatible  types	33	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	22	1	add
25	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	22	1	add
26	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
27	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
28	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [CE]  '('  or  '['  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>	  	non-compiled	[CE]  '('  or  '['  expected	22	None	add
29	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [CE]  '('  or  '['  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new	  	non-compiled	[CE]  '('  or  '['  expected	22	None	add
30	[BUG]  [BUGGY]  stepHandlers.add(this.eventsStates,  name);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.eventsStates,  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.eventsStates,  name);	  stepHandlers.add(this.eventsStates);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	41	None	replace
31	[BUG]  [BUGGY]  stepHandlers.add(this.eventsStates,  this.size);  [CE]  cannot  find  symbol  size  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.eventsStates,  this.size);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.eventsStates,  this.size);	  stepHandlers.add(this.eventsStates);    	non-compiled	[CE]  cannot  find  symbol  size	41	None	replace
32	[BUG]  [BUGGY]  stepHandlers.add(this.eventsStates,  this.stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.eventsStates,  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.eventsStates,  this.stepStart);	  stepHandlers.add(this.eventsStates);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	41	None	replace
33	[BUG]  [BUGGY]  stepHandlers.add(this.eventsStates,  this.expr);  [CE]  cannot  find  symbol  expr  [FE]                          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.eventsStates,  this.expr);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.eventsStates,  this.expr);	  stepHandlers.add(this.eventsStates);    	non-compiled	[CE]  cannot  find  symbol  expr	41	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
35	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	13	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	13	1	add
37	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	13	1	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	13	1	add
39	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	13	1	add
40	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	13	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
42	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
44	[BUG]  [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
45	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepSize));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepSize));	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	92	None	replace
46	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart));	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	92	None	replace
47	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart);	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	92	None	replace
48	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize));	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	92	None	replace
49	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize),  name);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize),  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize),  name);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	123	None	replace
50	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  this.stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  this.stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart),  this.stepSize);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	123	None	replace
51	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize),  this.stepStart);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize),  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize),  this.stepStart);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	123	None	replace
52	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  name,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  name,  isLastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart),  name,  isLastStep);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	123	None	replace
53	[BUG]  [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  This	85	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	73	1	replace
55	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	73	1	replace
56	[BUG]  [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  TreeMap  <  StepHandler>();	  stepHandlers    =    new    LinkedList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
57	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name),  stepSize);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name),  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name),  stepSize);	  stepHandlers.add(new    StepHandler(name),    stepStart);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	97	None	replace
58	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  stepSize),  stepStart);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  stepSize),  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  stepSize),  stepStart);	  stepHandlers.add(new    StepHandler(name),    stepStart);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	97	None	replace
59	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	12	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(1);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>(1);	  stepHandlers    =    new    ArrayList    <    StepHandler>(2);    	compilable	  [FE]  AssertionError  	133	1	replace
61	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(1);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(1);	  stepHandlers    =    new    ArrayList    <    StepHandler>(2);    	compilable	  [FE]  AssertionError  	133	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Math.max(stepSize,  stepHandlers.size());	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
63	[BUG]  [BUGGY]  stepStart  =  Math.max(stepSize,  stepHandlers.size());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepSize,  stepHandlers.size());	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Math.min(stepSize,  stepHandlers.size());	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
65	[BUG]  [BUGGY]  stepStart  =  Math.min(stepSize,  stepHandlers.size());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.min(stepSize,  stepHandlers.size());	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepHandlers.size(),  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Math.max(stepHandlers.size(),  stepStart);	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
67	[BUG]  [BUGGY]  stepStart  =  Math.max(stepHandlers.size(),  stepStart);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepHandlers.size(),  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepHandlers.size(),  stepStart);	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepHandlers.size(),  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Math.min(stepHandlers.size(),  stepStart);	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
69	[BUG]  [BUGGY]  stepStart  =  Math.min(stepHandlers.size(),  stepStart);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepHandlers.size(),  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.min(stepHandlers.size(),  stepStart);	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
70	[BUG]  [BUGGY]  StepStart  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepstart    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepstart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	125	1	replace
72	[BUG]  [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepstart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	125	1	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
74	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
76	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	56	1	add
78	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	56	1	add
79	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	56	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	56	1	add
81	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	56	1	add
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NaN;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NaN;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	56	1	add
83	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NaN;  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NaN;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NaN;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	56	1	add
84	[BUG]  [BUGGY]  stepHandlers.addAll(statesInitialized);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(statesInitialized);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(statesInitialized);	  stepHandlers.addAll(events);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	43	None	replace
85	[BUG]  [BUGGY]  stepHandlers.addAll(expr);  [CE]  cannot  find  symbol  expr  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(expr);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(expr);	  stepHandlers.addAll(events);    	non-compiled	[CE]  cannot  find  symbol  expr	43	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	53	1	add
87	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	53	1	add
88	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  StepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  StepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    StepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	53	None	add
89	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepEnd  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepEnd  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepEnd  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepEnd  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	53	None	add
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	53	1	add
91	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepSize  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	53	1	add
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	107	1	add
93	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	107	1	add
94	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	107	None	add
95	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepsInitialized  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	107	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	107	1	add
97	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	107	1	add
98	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  evaluations);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  evaluations);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  evaluations);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	42	None	replace
99	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  isLastStep);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  isLastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  isLastStep);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	42	None	replace
100	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  evaluates);  [CE]  cannot  find  symbol  evaluates  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  evaluates);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  evaluates);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  evaluates	42	None	replace
101	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  this.expr);  [CE]  cannot  find  symbol  expr  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  this.expr);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  this.expr);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  expr	42	None	replace
102	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	9	None	replace
103	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  StepHandlers  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	9	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	9	1	replace
105	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	9	1	replace
106	[BUG]  [BUGGY]  isLastStep  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	106	None	replace
107	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
108	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepEnd  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepEnd  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  stepEnd  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepEnd    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	59	None	replace
109	[BUG]  [BUGGY]  StepStart  stepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  stepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  stepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepEnd    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	isLastStep  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	76	1	replace
111	[BUG]  [BUGGY]  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	76	1	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	48	1	add
113	[BUG]  [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	48	1	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	48	1	add
115	[BUG]  [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	48	1	add
116	[BUG]  [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  This	48	None	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	48	1	add
118	[BUG]  [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	48	1	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	93	1	add
120	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	93	1	add
121	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  StepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  StepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    StepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	93	None	add
122	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepEnd  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepEnd  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    stepEnd  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	93	None	add
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	62	1	add
124	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	62	1	add
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	62	1	add
126	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	62	1	add
127	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    StepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	62	None	add
128	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  StepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  StepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    StepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	62	None	add
129	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	105	None	replace
130	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	steps  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	105	None	replace
131	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  steps  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	105	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	66	1	add
133	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	66	1	add
134	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    StepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	66	None	add
135	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    stepEnd  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	66	None	add
136	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  phaseStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  phaseStart  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  phaseStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    phaseStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  phaseStart	66	None	add
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepStart  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepStart  =  Double.POSITIVE_INFINITY  -  1;	  	compilable	  [FE]  AssertionError  	36	1	add
138	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepStart  =  Double.POSITIVE_INFINITY  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepStart  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepStart  =  Double.POSITIVE_INFINITY  -  1;	  	compilable	  [FE]  AssertionError  	36	1	add
139	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  StepStart  =  Double.POSITIVE_INFINITY  -  1;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  StepStart  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    StepStart  =  Double.POSITIVE_INFINITY  -  1;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	36	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepSize  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepSize  =  Double.POSITIVE_INFINITY  -  1;	  	compilable	  [FE]  AssertionError  	36	1	add
141	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepSize  =  Double.POSITIVE_INFINITY  -  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepSize  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepSize  =  Double.POSITIVE_INFINITY  -  1;	  	compilable	  [FE]  AssertionError  	36	1	add
142	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepEnd  =  Double.POSITIVE_INFINITY  -  1;  [CE]  cannot  find  symbol  stepEnd  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepEnd  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepEnd  =  Double.POSITIVE_INFINITY  -  1;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	36	None	add
143	[BUG]  [BUGGY]  StepStart  stepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepStart    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepStart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	63	1	replace
145	[BUG]  [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepStart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	63	1	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	18	1	add
147	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	18	1	add
148	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	18	None	add
149	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  '('  or  '['  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  '('  or  '['  expected	18	None	add
150	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  not  a  statement	18	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	compilable	  [FE]  AssertionError  	118	1	add
152	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	compilable	  [FE]  AssertionError  	118	1	add
153	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  This.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  This.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    This.stepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	non-compiled	[CE]  cannot  find  symbol  This	118	None	add
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  	compilable	  [FE]  AssertionError  	118	1	add
155	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(4);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  	compilable	  [FE]  AssertionError  	118	1	add
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
157	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
159	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
161	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
162	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name,  stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name,  stepStart),  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name,  stepStart),  stepSize);	  stepHandlers.add(new    Integer(name,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	2	None	replace
163	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize,  stepStart));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize,  stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize,  stepStart));	  stepHandlers.add(new    Integer(name,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	2	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	79	1	add
165	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	79	1	add
166	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  If(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  If(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    If(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	non-compiled	[CE]  ';'  expected	79	None	add
167	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isFirstStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isFirstStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isFirstStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	79	None	add
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	89	1	add
169	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	89	1	add
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	89	1	add
171	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	89	1	add
172	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	89	None	add
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	89	1	add
174	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	89	1	add
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.NaN  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  isLastStep?  Double.NaN  :  Double.POSITIVE_INFINITY;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	94	1	replace
176	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.NaN  :  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.NaN  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  isLastStep?  Double.NaN  :  Double.POSITIVE_INFINITY;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	94	1	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	94	1	replace
178	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	94	1	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
180	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
182	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
184	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
185	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	24	None	add
186	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
187	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  Il  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	24	None	add
188	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]          IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	24	None	add
189	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepStart  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepStart  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	34	1	add
191	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepStart  =  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepStart  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepStart  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	34	1	add
192	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  StepStart  =  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  StepStart  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    +    1;    StepStart  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	34	None	add
193	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepSize  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepSize  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	34	1	add
194	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepSize  =  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepSize  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepSize  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	34	1	add
195	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepEnd  =  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepEnd  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepEnd  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepEnd  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	34	None	add
196	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	30	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	109	1	add
198	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	109	1	add
199	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	109	None	add
200	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	109	None	add
201	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepsInitialized  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	109	None	add
202	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name),  stepStart,  stepSize);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name),  stepStart,  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name),  stepStart,  stepSize);	  stepHandlers.add(new    Integer(name),    stepSize);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	4	None	replace
203	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name),  stepSize,  isLastStep);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name),  stepSize,  isLastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name),  stepSize,  isLastStep);	  stepHandlers.add(new    Integer(name),    stepSize);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	4	None	replace
204	[BUG]  [BUGGY]  stepHandlers.add(this.exp);  [CE]  cannot  find  symbol  exp  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.exp);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.exp);	  stepHandlers.add(this.expr);    	non-compiled	[CE]  cannot  find  symbol  exp	114	None	replace
205	[BUG]  [BUGGY]  stepHandlers.add(this.expansion);  [CE]  cannot  find  symbol  expansion  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.expansion);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.expansion);	  stepHandlers.add(this.expr);    	non-compiled	[CE]  cannot  find  symbol  expansion	114	None	replace
206	[BUG]  [BUGGY]  stepHandlers.add(this.stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepStart);	  stepHandlers.add(this.expr);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	114	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
208	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
209	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name),  stepSize,  stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name),  stepSize,  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name),  stepSize,  stepStart);	  stepHandlers.add(new    Integer(name),    stepStart);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	1	None	replace
210	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name),  stepStart,  isLastStep);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name),  stepStart,  isLastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name),  stepStart,  isLastStep);	  stepHandlers.add(new    Integer(name),    stepStart);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	1	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	29	1	add
212	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	29	1	add
213	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	29	None	add
214	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	29	None	add
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	29	1	add
216	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	29	1	add
217	[BUG]  [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.POSITIVE_INFINITY;  StepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    StepStart    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	64	None	replace
218	[BUG]  [BUGGY]  StepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    StepStart    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	64	None	replace
219	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	25	1	replace
220	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	25	1	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	108	1	replace
222	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	108	1	replace
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	108	1	replace
224	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	108	1	replace
225	[BUG]  [BUGGY]  stepStart  =  Math.max(stepSize,  stepHandlers.length);  [CE]  cannot  find  symbol  length  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepSize,  stepHandlers.length);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepSize,  stepHandlers.length);	          stepStart    =    Math.max(stepStart,    stepHandlers.length);    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
226	[BUG]  [BUGGY]  stepStart  =  Math.max(stepHandlers.length,  stepStart);  [CE]  cannot  find  symbol  length  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepHandlers.length,  stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepHandlers.length,  stepStart);	          stepStart    =    Math.max(stepStart,    stepHandlers.length);    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
227	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.length  -  1);  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.length  -  1);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepStart,  stepHandlers.length  -  1);	          stepStart    =    Math.max(stepStart,    stepHandlers.length);    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepStart  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	87	1	add
229	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepStart  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	87	1	add
230	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  StepStart  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  StepStart  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    StepStart  =  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	87	None	add
231	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepSize  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepSize  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	87	1	add
232	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepSize  =  Double.NEGATIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepSize  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepSize  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	87	1	add
233	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepEnd  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepEnd  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepEnd  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepEnd  =  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	87	None	add
234	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepSize,  this.stepStart));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepSize,  this.stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepSize,  this.stepStart));	  stepHandlers.add(new    StepHandler(this.stepStart,    this.stepSize));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	122	None	replace
235	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.expr);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.expr);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.expr);	  stepHandlers.add(new    StepHandler(this.stepStart,    this.stepSize));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	122	None	replace
236	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.lastStep);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.lastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.lastStep);	  stepHandlers.add(new    StepHandler(this.stepStart,    this.stepSize));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	122	None	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	84	1	add
238	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	84	1	add
239	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  If(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  If(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    If(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	non-compiled	[CE]  ';'  expected	84	None	add
240	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  this.stepSize));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  this.stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.name,  this.stepSize));	  stepHandlers.add(new    StepHandler(this.name));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	98	None	replace
241	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  this.stepStart));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  this.stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.name,  this.stepStart));	  stepHandlers.add(new    StepHandler(this.name));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	98	None	replace
242	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  steps.addAll(stepHandlers);  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  steps.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  steps.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    steps.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  steps	117	None	replace
243	[BUG]  [BUGGY]  steps.addAll(stepHandlers);  [CE]  cannot  find  symbol  steps  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  steps.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	steps.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    steps.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  steps	117	None	replace
244	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  steps.addAll(stepHandlers);  }  [CE]  cannot  find  symbol  steps  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  steps.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  steps.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    steps.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  steps	117	None	replace
245	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  stepSize));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.name,  stepSize));	  stepHandlers.add(new    StepHandler(name,    stepSize));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	28	None	replace
246	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize));	  stepHandlers.add(new    Integer(this.stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	124	None	replace
247	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize,  this.stepStart));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize,  this.stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize,  this.stepStart));	  stepHandlers.add(new    Integer(this.stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	124	None	replace
248	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart,  this.stepSize));	  stepHandlers.add(new    Integer(this.stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	124	None	replace
249	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  StepHandlerList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandlers  stepHandlers  =  new  StepHandlerList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandlers  stepHandlers  =  new  StepHandlerList  <  StepHandler>();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =    new    StepHandlerList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
250	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandlerList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandlerList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandlerList  <  StepHandler>();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =    new    StepHandlerList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	20	1	add
252	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	20	1	add
253	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	20	None	add
254	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	20	None	add
255	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
256	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
257	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	112	None	add
258	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	112	None	add
259	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	112	None	add
260	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	112	None	add
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    stepHandlers  =  new  ArrayList  <  StepHandler>(2);	  	compilable	  [FE]  AssertionError  	132	1	add
262	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    stepHandlers  =  new  ArrayList  <  StepHandler>(2);	  	compilable	  [FE]  AssertionError  	132	1	add
263	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  StepHandlers  =  new  ArrayList  <  StepHandler>(2);  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  StepHandlers  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    StepHandlers  =  new  ArrayList  <  StepHandler>(2);	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	132	None	add
264	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepsInitialized  =  new  ArrayList  <  StepHandler>(2);  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepsInitialized  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    stepsInitialized  =  new  ArrayList  <  StepHandler>(2);	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	132	None	add
265	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepHandlers  =  new  ArrayList  <  StepHandler>(3);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    stepHandlers  =  new  ArrayList  <  StepHandler>(3);	  	compilable	  [FE]  AssertionError  	132	1	add
266	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepHandlers  =  new  ArrayList  <  StepHandler>(3);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  stepHandlers  =  new  ArrayList  <  StepHandler>(3);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    stepHandlers  =  new  ArrayList  <  StepHandler>(3);	  	compilable	  [FE]  AssertionError  	132	1	add
267	[BUG]  [BUGGY]  stepsInitialized.addAll(stepHandlers);  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepsInitialized.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepsInitialized.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    stepsInitialized.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	72	None	replace
268	[BUG]  [BUGGY]  stepHandlers.addAll(stepSize);  stepsInitialized.addAll(stepHandlers);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(stepSize);  stepsInitialized.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(stepSize);  stepsInitialized.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    stepsInitialized.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	72	None	replace
269	[BUG]  [BUGGY]  stepHandlers.addAll(stepStart);  stepsInitialized.addAll(stepHandlers);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(stepStart);  stepsInitialized.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(stepStart);  stepsInitialized.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    stepsInitialized.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	72	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	102	1	replace
271	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	102	1	replace
272	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  ';'  expected	102	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	102	1	replace
274	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	102	1	replace
275	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  AssertionError>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  LinkedList  <  AssertionError>();	          this.stepHandlers    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
276	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  AssertionError>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  AssertionError>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  TreeSet  <  AssertionError>();	          this.stepHandlers    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  incompatible  types	46	None	replace
277	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeMap  <  AssertionError>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeMap  <  AssertionError>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  TreeMap  <  AssertionError>();	          this.stepHandlers    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
279	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
281	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    this.stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
283	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    this.stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    this.stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
285	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    this.stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
286	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
287	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    this.stepSize  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
288	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.events);  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.events);	  stepHandlers.add(this.name);    	non-compiled	[CE]  cannot  find  symbol  events	40	None	replace
289	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.stepStart);	  stepHandlers.add(this.name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	40	None	replace
290	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.eventsStates);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.eventsStates);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.eventsStates);	  stepHandlers.add(this.name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	40	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
292	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
293	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	16	1	add
294	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	16	1	add
295	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
296	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
297	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	16	None	add
298	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();  isLastStep  =  true;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
299	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  steps	14	None	replace
300	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	31	None	replace
301	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name,  stepSize),  stepStart);  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name,  stepSize),  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name,  stepSize),  stepStart);	  stepHandlers.add(new    Integer(name,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	3	None	replace
302	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name,  stepStart,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(String,double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name,  stepStart,  stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name,  stepStart,  stepSize));	  stepHandlers.add(new    Integer(name,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double,double)	3	None	replace
303	[BUG]  [BUGGY]  isLastStep  =  null;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  null;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep  =  null;	  isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	78	None	replace
304	[BUG]  [BUGGY]  isLastStep  = " ";  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  = " ";  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep  = " ";	  isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	78	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY  /  1;	  stepStart    =    Double.POSITIVE_INFINITY    -    1;    	compilable	  [FE]  AssertionError  	37	1	replace
306	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  /  1;	  stepStart    =    Double.POSITIVE_INFINITY    -    1;    	compilable	  [FE]  AssertionError  	37	1	replace
307	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  false;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  false;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	49	1	replace
309	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	49	1	replace
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(1);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>(1);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
311	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(1);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(1);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>(2);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
313	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(2);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
314	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  Integer>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  Integer>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  LinkedList  <  Integer>();	          this.stepHandlers    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
315	[BUG]  [BUGGY]  this.stepHandlers  =  new  java.util.ArrayList  <  Integer>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  java.util.ArrayList  <  Integer>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  java.util.ArrayList  <  Integer>();	          this.stepHandlers    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  incompatible  types	47	None	replace
316	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  Integer>();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  Integer>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  TreeSet  <  Integer>();	          this.stepHandlers    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  incompatible  types	47	None	replace
317	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	compilable	  [FE]  AssertionError  	23	1	replace
318	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	compilable	  [FE]  AssertionError  	23	1	replace
319	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
320	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incompatible  types	23	None	replace
321	[BUG]  [BUGGY]  stepHandlers.add(name,  this.name);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(name,  this.name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(name,  this.name);	  stepHandlers.add(this.name,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	39	None	replace
322	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.stepStart,  name);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.stepStart,  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.stepStart,  name);	  stepHandlers.add(this.name,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	39	None	replace
323	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.stepSize,  name);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.stepSize,  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.stepSize,  name);	  stepHandlers.add(this.name,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	39	None	replace
324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers.addAll(this.stepHandlers);    stepHandlers.addAll(this.stepHandlers);	  	compilable	  [FE]  AssertionError  	44	1	add
325	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    stepHandlers.addAll(this.stepHandlers);	  	compilable	  [FE]  AssertionError  	44	1	add
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(this.stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers.addAll(this.stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers.addAll(this.stepHandlers);  }	  	compilable	  [FE]  AssertionError  	44	1	add
327	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(this.stepHandlers);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(this.stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers.addAll(this.stepHandlers);  }	  	compilable	  [FE]  AssertionError  	44	1	add
328	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers.addAll(this.stepHandlers);  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers.addAll(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    StepHandlers.addAll(this.stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	44	None	add
329	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  AssertionError>();  }  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  AssertionError>();  }	  	non-compiled	[CE]  incompatible  types	44	None	add
330	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  this.stepHandlers.addAll(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers.addAll(this.stepHandlers);    stepHandlers.addAll(this.stepHandlers);  this.stepHandlers.addAll(this.stepHandlers);	  	compilable	  [FE]  AssertionError  	44	1	add
331	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  this.stepHandlers.addAll(this.stepHandlers);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  this.stepHandlers.addAll(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    stepHandlers.addAll(this.stepHandlers);  this.stepHandlers.addAll(this.stepHandlers);	  	compilable	  [FE]  AssertionError  	44	1	add
332	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  expandable);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  expandable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  isLastStep),  expandable);	  stepHandlers.add(new    StepHandler(name,    isLastStep));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	27	None	replace
333	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  expansionable);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  expansionable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  isLastStep),  expansionable);	  stepHandlers.add(new    StepHandler(name,    isLastStep));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	27	None	replace
334	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep  +  1));  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep  +  1));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  isLastStep  +  1));	  stepHandlers.add(new    StepHandler(name,    isLastStep));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	27	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	60	1	add
336	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	60	1	add
337	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    StepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	60	None	add
338	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	60	1	add
339	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NaN;  stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	60	1	add
340	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    stepEnd  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	60	None	add
341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
342	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
343	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
344	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;	  	compilable	  [FE]  AssertionError  	95	1	add
346	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;	  	compilable	  [FE]  AssertionError  	95	1	add
347	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  StepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  cannot  find  symbol  StepStart  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  StepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    StepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepStart	95	None	add
348	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepEnd  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  cannot  find  symbol  stepEnd  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepEnd  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    stepEnd  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	95	None	add
349	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY  /  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY    |    Double.NaN;    	compilable	  [FE]  AssertionError  	121	1	replace
350	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  /  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY    |    Double.NaN;    	compilable	  [FE]  AssertionError  	121	1	replace
351	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  &  Double.NaN;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  &  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  &  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY    |    Double.NaN;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	121	None	replace
352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY  -  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY    |    Double.NaN;    	compilable	  [FE]  AssertionError  	121	1	replace
353	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  Double.NaN;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  -  Double.NaN;	  stepStart    =    Double.POSITIVE_INFINITY    |    Double.NaN;    	compilable	  [FE]  AssertionError  	121	1	replace
354	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name,  this.stepStart));  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name,  this.stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name,  this.stepStart));	  stepHandlers.add(new    Integer(this.stepStart,    name));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	115	None	replace
355	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.stepSize,  name));  [CE]  no  suitable  constructor  found  for  Integer(double,double,String)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.stepSize,  name));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart,  this.stepSize,  name));	  stepHandlers.add(new    Integer(this.stepStart,    name));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,String)	115	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    stepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	compilable	  [FE]  AssertionError  	130	1	add
357	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    stepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	compilable	  [FE]  AssertionError  	130	1	add
358	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  StepHandlers  =  new  ArrayList  <  StepHandler>(4);  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  StepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    StepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	130	None	add
359	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepsInitialized  =  new  ArrayList  <  StepHandler>(4);  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepsInitialized  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    stepsInitialized  =  new  ArrayList  <  StepHandler>(4);	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	130	None	add
360	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepsHandlers  =  new  ArrayList  <  StepHandler>(4);  [CE]  cannot  find  symbol  stepsHandlers  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepsHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    stepsHandlers  =  new  ArrayList  <  StepHandler>(4);	  	non-compiled	[CE]  cannot  find  symbol  stepsHandlers	130	None	add
361	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	19	1	replace
362	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	19	1	replace
363	[BUG]  [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  unexpected  type  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  unexpected  type	19	None	replace
364	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.MAX_VALUE;  [CE]  cannot  find  symbol  stepEnd  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepEnd    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	55	None	replace
365	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepEnd  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepEnd    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	55	None	replace
366	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepEnd  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepEnd  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepEnd  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  stepEnd  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepEnd    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	55	None	replace
367	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  /  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY  /  1;	  stepStart    =    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	88	1	replace
368	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  /  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY  /  1;	  stepStart    =    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	88	1	replace
369	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY  +  2;	  stepStart    =    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	88	1	replace
370	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY  +  2;	  stepStart    =    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	88	1	replace
371	[BUG]  [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	This.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  This	111	None	replace
372	[BUG]  [BUGGY]  Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	111	None	replace
373	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name,  this.stepStart));  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name,  this.stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name,  this.stepStart));	  stepHandlers.add(new    Integer(this.name));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	116	None	replace
374	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name,  this.stepSize));  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name,  this.stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name,  this.stepSize));	  stepHandlers.add(new    Integer(this.name));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	116	None	replace
375	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.name));  [CE]  no  suitable  constructor  found  for  Integer(double,String)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.name));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart,  this.name));	  stepHandlers.add(new    Integer(this.name));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,String)	116	None	replace
376	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name),  stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name),  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name),  stepStart);	  stepHandlers.add(new    Integer(this.name));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	116	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	isLastStep    =    true;    isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
378	[BUG]  [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
379	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
380	[BUG]  [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
381	[BUG]  [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  AssertionError>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  AssertionError>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  AssertionError>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	77	None	add
382	[BUG]  [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  Integer>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  Integer>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  Integer>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	77	None	add
383	[BUG]  [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  AssertionError>();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  AssertionError>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  AssertionError>();	  	non-compiled	[CE]  incompatible  types	77	None	add
384	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	7	1	add
385	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	7	1	add
386	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
387	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  StepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  StepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    StepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	7	None	add
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	7	1	add
389	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	7	1	add
390	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>  [CE]  '('  or  '['  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>	  	non-compiled	[CE]  '('  or  '['  expected	7	None	add
391	[BUG]  [BUGGY]  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	99	None	replace
392	[BUG]  [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	99	None	replace
393	[BUG]  [BUGGY]  StepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	99	None	replace
394	[BUG]  [BUGGY]  stepStart  =  true;  stepHandlers.addAll(stepHandlers);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  true;  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  true;  stepHandlers.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  incompatible  types	71	None	replace
395	[BUG]  [BUGGY]  stepsInitialized  =  true;  stepsInitialized.addAll(stepsInitialized);  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepsInitialized  =  true;  stepsInitialized.addAll(stepsInitialized);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepsInitialized  =  true;  stepsInitialized.addAll(stepsInitialized);	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	71	None	replace
396	[BUG]  [BUGGY]  stepsInitialized  =  true;  stepsInitialized.addAll(stepHandlers);  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepsInitialized  =  true;  stepsInitialized.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepsInitialized  =  true;  stepsInitialized.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	71	None	replace
397	[BUG]  [BUGGY]  StepStart  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepStart  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    StepStart    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepStart	52	None	replace
398	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepsInitialized  =  Double.MAX_VALUE;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepsInitialized  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepsInitialized  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepsInitialized    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	135	None	replace
399	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepsInitialized  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepsInitialized  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepsInitialized  =  Double.NaN;	  stepStart    =    Double.MIN_VALUE;    stepsInitialized    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	135	None	replace
400	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepsInitialized  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepsInitialized  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  stepsInitialized  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepsInitialized    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	135	None	replace
401	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	75	1	add
402	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	75	1	add
403	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    StepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	75	None	add
404	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	75	1	add
405	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	75	1	add
406	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepsInitialized  =  false;  isLastStep  =  false;  [CE]  cannot  find  symbol  stepsInitialized  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepsInitialized  =  false;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    stepsInitialized  =  false;  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	75	None	add
407	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	10	None	replace
408	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	10	None	replace
409	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	10	None	replace
410	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =(StepHandler)stepHandlers.clone();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
411	[BUG]  [BUGGY]  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)this.stepHandlers.clone();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)this.stepHandlers.clone();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)this.stepHandlers.clone();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =(StepHandler)stepHandlers.clone();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
412	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	compilable	  [FE]  AssertionError  	82	1	add
413	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	compilable	  [FE]  AssertionError  	82	1	add
414	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }	  	compilable	  [FE]  AssertionError  	82	1	add
415	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }	  	compilable	  [FE]  AssertionError  	82	1	add
416	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	82	1	add
417	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	82	1	add
418	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  This.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  This.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    This.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol  This	82	None	add
419	[BUG]  [BUGGY]  stepHandlers.add(this.stepStart,  this.name,  stepSize);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepStart,  this.name,  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepStart,  this.name,  stepSize);	  stepHandlers.add(this.stepStart,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	38	None	replace
420	[BUG]  [BUGGY]  stepHandlers.add(name,  this.stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(name,  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(name,  this.stepStart);	  stepHandlers.add(this.stepStart,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	38	None	replace
421	[BUG]  [BUGGY]  stepHandlers.add(this.stepStart,  this.stepSize,  name);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepStart,  this.stepSize,  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepStart,  this.stepSize,  name);	  stepHandlers.add(this.stepStart,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	38	None	replace
422	[BUG]  [BUGGY]  stepHandlers.add(this.stepStart,  this.value,  name);  [CE]  cannot  find  symbol  value  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepStart,  this.value,  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepStart,  this.value,  name);	  stepHandlers.add(this.stepStart,    name);    	non-compiled	[CE]  cannot  find  symbol  value	38	None	replace
423	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	68	1	add
424	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	68	1	add
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	  	compilable	  [FE]  AssertionError  	68	1	add
426	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	  	compilable	  [FE]  AssertionError  	68	1	add
427	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  AssertionError>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  AssertionError>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  AssertionError>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }	  	non-compiled	[CE]  incompatible  types	68	None	add
428	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  StepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  StepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    StepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	68	None	add
429	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	68	1	add
430	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	68	1	add
431	[BUG]  [BUGGY]  StepHandlers.addAll(stepHandlers);  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandlers.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    StepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	70	None	replace
432	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>(stepHandlers);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>(stepHandlers);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
433	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers,  stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(Collection<StepHandler>,double)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers,  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers,  stepSize);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Collection<StepHandler>,double)	83	None	replace
434	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  >  expected	21	None	replace
435	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
436	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	81	1	replace
437	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	81	1	replace
438	[BUG]  [BUGGY]  StepStart  stepStart  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  stepStart  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  stepStart  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepEnd    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
439	[BUG]  [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.POSITIVE_INFINITY;  stepEnd  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepEnd    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	65	None	replace
440	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	74	None	replace
441	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	74	None	replace
442	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	74	None	replace
443	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	5	1	add
444	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	5	1	add
445	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	5	None	add
446	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	5	None	add
447	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    steps  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	5	None	add
448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
449	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NaN;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
451	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NaN;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
452	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
453	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
455	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
456	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
457	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isFirstStep  =  true;  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isFirstStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isFirstStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	11	None	add
458	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
459	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
460	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!stepHandlers.contains(name))  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(!stepHandlers.contains(name))  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
461	[BUG]  [BUGGY]  if(!stepHandlers.contains(name))  {  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!stepHandlers.contains(name))  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(!stepHandlers.contains(name))  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
462	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
463	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  }  else  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
464	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY  +  2;	  stepStart    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	35	1	replace
465	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  +  2;	  stepStart    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	35	1	replace
466	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
467	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  true;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
468	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
469	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
470	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  false;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
471	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  false;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  false;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
472	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
473	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
474	[BUG]  [BUGGY]  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
476	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
477	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NaN;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
478	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
479	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NaN;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
480	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NaN;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	101	1	replace
481	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  TreeList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
482	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
483	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
484	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
485	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepSize);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepSize);	  stepHandlers.addAll(this.stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	45	None	replace
486	[BUG]  [BUGGY]  stepHandlers.add(this.stepHandlers);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepHandlers);	  stepHandlers.addAll(this.stepHandlers);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	45	None	replace
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepStart  =  Math.max(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
488	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepStart  =  Math.max(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
489	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepSize  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepSize  =  Math.max(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
490	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepSize  =  Math.max(stepStart,  stepHandlers.size());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepSize  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepSize  =  Math.max(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
491	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepSize  =  Math.max(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepSize  =  Math.max(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
492	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepSize  =  Math.max(stepSize,  stepHandlers.size());  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepSize  =  Math.max(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepSize  =  Math.max(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
493	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  StepHandler  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [CE]  no  suitable  method  found  for  max(StepHandler,int)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  StepHandler  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    StepHandler  stepStart  =  Math.max(stepStart,  stepHandlers.size());	  	non-compiled	[CE]  no  suitable  method  found  for  max(StepHandler,int)	126	None	add
494	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepStart  =  Math.max(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
495	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepSize,  stepHandlers.size());  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepSize,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepStart  =  Math.max(stepSize,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
496	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepSize));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepSize));	  stepHandlers.add(new    StepHandler(this.stepStart));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	120	None	replace
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    	compilable	  [FE]  AssertionError  	96	1	replace
498	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN  +  1;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    	compilable	  [FE]  AssertionError  	96	1	replace
499	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  stepStart),  stepSize);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  stepStart),  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  stepStart),  stepSize);	  stepHandlers.add(new    StepHandler(name,    stepStart));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	26	None	replace
500	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  stepStart));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.name,  stepStart));	  stepHandlers.add(new    StepHandler(name,    stepStart));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	26	None	replace
501	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	8	None	replace
502	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incompatible  types	8	None	replace
503	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers.addAll(this.stepHandlers);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers.addAll(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    StepHandlers  stepHandlers.addAll(this.stepHandlers);	  	non-compiled	[CE]  ';'  expected	44	None	add
504	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(this.stepHandlers);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(this.stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    StepHandlers  stepHandlers  =  new  StepHandler(this.stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
505	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	compilable	  [FE]  AssertionError  	8	1	replace
506	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	compilable	  [FE]  AssertionError  	8	1	replace
507	[BUG]  [BUGGY]  StepStart  stepStart  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  stepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepStart    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
508	[BUG]  [BUGGY]  stepStart  =  Math.min(stepHandlers.length,  stepStart.size());  [CE]  cannot  find  symbol  length  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepHandlers.length,  stepStart.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.min(stepHandlers.length,  stepStart.size());	  stepStart    =    Math.min(stepStart,    stepHandlers.size());    	non-compiled	[CE]  cannot  find  symbol  length	129	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
510	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
511	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [CE]  cannot  find  symbol  StepHandler  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>(2);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(2);    StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>(2);	  	non-compiled	[CE]  cannot  find  symbol  StepHandler	132	None	add
512	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
513	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
514	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
515	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
516	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
517	[BUG]  [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	113	1	replace
518	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers,  stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(Collection<StepHandler>,double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers,  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers,  stepStart);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Collection<StepHandler>,double)	83	None	replace
519	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	10	None	replace
520	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  else  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  else  {  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  else  {	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
521	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.expable);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.expable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize),  this.expable);	  stepHandlers.add(new    StepHandler(this.stepStart,    this.stepSize));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	122	None	replace
522	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize  -  1));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize  -  1));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepStart,  this.stepSize  -  1));	  stepHandlers.add(new    StepHandler(this.stepStart,    this.stepSize));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	122	None	replace
523	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	9	None	replace
524	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name,  stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name,  stepSize));	  stepHandlers.add(new    Integer(name,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	3	None	replace
525	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    areLastStep    =    true;    	non-compiled	[CE]  incompatible  types	33	None	replace
526	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  areLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    areLastStep    =    true;    	non-compiled	[CE]  incompatible  types	33	None	replace
527	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol  steps	23	None	replace
528	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepState>();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepState>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepSize  =  new  ArrayList  <  StepState>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
529	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	18	1	add
530	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	18	1	add
531	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHidlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepHidlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHidlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHidlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepHidlers	18	None	add
532	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [CE]  cannot  find  symbol  StepHandler  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>(4);	  	non-compiled	[CE]  cannot  find  symbol  StepHandler	130	None	add
533	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  	compilable	  [FE]  AssertionError  	130	1	add
534	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(4);  stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>(4);    stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  	compilable	  [FE]  AssertionError  	130	1	add
535	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	12	None	replace
536	[BUG]  [BUGGY]  stepHandlers.addAll(stepSize);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(stepSize);	          stepHandlers.addAll(stepHandlers);    steps.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	117	None	replace
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }	  stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	76	1	replace
538	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  }	  stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	compilable	  [FE]  AssertionError  	76	1	replace
539	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name),  this.stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name),  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name),  this.stepStart);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	123	None	replace
540	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.stepSize),  name);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  this.stepSize),  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart,  this.stepSize),  name);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	123	None	replace
541	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE	  	non-compiled	[CE]  ';'  expected	50	None	add
542	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  cannot  find  symbol  StepHandlers  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	29	None	add
543	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize,  name));  [CE]  no  suitable  constructor  found  for  Integer(double,String)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize,  name));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize,  name));	  stepHandlers.add(new    Integer(this.stepStart,    name));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,String)	115	None	replace
544	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	19	1	replace
545	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	19	1	replace
546	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	19	1	replace
547	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	19	1	replace
548	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  IllegalArgumentException  	19	1	replace
549	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  IllegalArgumentException  	19	1	replace
550	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepSsize  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepSsize  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.MIN_VALUE;  stepSsize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepSsize  =  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  stepSsize	53	None	add
551	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	22	1	add
552	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	22	1	add
553	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	22	None	add
554	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
555	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE;  stepEnd  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  POSITIVE  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE;  stepEnd  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE;  stepEnd  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepEnd    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  POSITIVE	65	None	replace
556	[BUG]  [BUGGY]  stepHandlers.add(new  ExpandableStatefulODE(name));  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  ExpandableStatefulODE(name));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  ExpandableStatefulODE(name));	  stepHandlers.add(this.expr);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	114	None	replace
557	[BUG]  [BUGGY]  stepHandlers.add(this.events);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.events);	  stepHandlers.add(this.expr);    	non-compiled	[CE]  cannot  find  symbol  events	114	None	replace
558	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	20	1	add
559	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	20	1	add
560	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
561	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
562	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
563	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name),  stepSize);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name),  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name),  stepSize);	  stepHandlers.add(new    Integer(name),    stepSize);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	4	None	replace
564	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  steps	75	None	add
565	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	75	1	add
566	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	75	1	add
567	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE;  stepEnd  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  NEGATIVE  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE;  stepEnd  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE;  stepEnd  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepEnd    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	59	None	replace
568	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
569	[BUG]  [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
570	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
571	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
572	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	5	None	add
573	[BUG]  [BUGGY]  StepStart  stepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
574	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	32	None	replace
575	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    hasLastStep    =    true;    	non-compiled	[CE]  incompatible  types	32	None	replace
576	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    hasLastStep    =    true;    	non-compiled	[CE]  incompatible  types	32	None	replace
577	[BUG]  [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	99	None	replace
578	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	99	1	replace
579	[BUG]  [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	99	1	replace
580	[BUG]  [BUGGY]  stepHandlers.addAll(stepSize);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(stepSize);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(stepSize);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =(StepHandler)stepHandlers.clone();    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	103	None	replace
581	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =(StepHandler)stepHandlers.clone();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
582	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  wasLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  wasLastStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  wasLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  wasLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  wasLastStep	90	None	replace
583	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
584	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
585	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name),  stepStart,  isLastStep);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name),  stepStart,  isLastStep);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name),  stepStart,  isLastStep);	  stepHandlers.add(new    StepHandler(name),    stepStart);    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	97	None	replace
586	[BUG]  [BUGGY]  stepsInitialized  =  true;  stepHandlers.addAll(stepHandlers);  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepsInitialized  =  true;  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepsInitialized  =  true;  stepHandlers.addAll(stepHandlers);	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	71	None	replace
587	[BUG]  [BUGGY]  stepSize  =  true;  stepHandlers.addAll(stepSize);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepSize  =  true;  stepHandlers.addAll(stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepSize  =  true;  stepHandlers.addAll(stepSize);	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  incompatible  types	71	None	replace
588	[BUG]  [BUGGY]  stepStart  =  true;  stepHandlers.addAll(stepStart);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  true;  stepHandlers.addAll(stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  true;  stepHandlers.addAll(stepStart);	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  incompatible  types	71	None	replace
589	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  StepStart  =  Math.min(stepStart,  stepHandlers.size());  [CE]  cannot  find  symbol  StepStart  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  StepStart  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    StepStart  =  Math.min(stepStart,  stepHandlers.size());	  	non-compiled	[CE]  cannot  find  symbol  StepStart	128	None	add
590	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.size));  [CE]  cannot  find  symbol  size  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart,  this.size));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepStart,  this.size));	  stepHandlers.add(new    StepHandler(this.stepStart));    	non-compiled	[CE]  cannot  find  symbol  size	120	None	replace
591	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepsInitialized  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsInitialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepsInitialized  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepsInitialized  =  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	87	None	add
592	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.expable);  [CE]  cannot  find  symbol  expable  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.expable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.expable);	  stepHandlers.add(this.name);    	non-compiled	[CE]  cannot  find  symbol  expable	40	None	replace
593	[BUG]  [BUGGY]  stepHandlers.add(this.name,  this.expr);  [CE]  cannot  find  symbol  expr  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  this.expr);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  this.expr);	  stepHandlers.add(this.name);    	non-compiled	[CE]  cannot  find  symbol  expr	40	None	replace
594	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionError  	25	1	replace
595	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionError  	25	1	replace
596	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name,  stepStart));  [CE]  no  suitable  constructor  found  for  Integer(String,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name,  stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name,  stepStart));	  stepHandlers.add(new    Integer(name,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(String,double)	2	None	replace
597	[BUG]  [BUGGY]  stepHandlers.add(this.name,  name,  stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  name,  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  name,  stepStart);	  stepHandlers.add(this.name,    name);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	39	None	replace
598	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	30	1	replace
599	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	30	1	replace
600	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	30	None	replace
601	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name,  this.size));  [CE]  cannot  find  symbol  size  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name,  this.size));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name,  this.size));	  stepHandlers.add(new    Integer(this.name));    	non-compiled	[CE]  cannot  find  symbol  size	116	None	replace
602	[BUG]  [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(steps  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  else  {	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
603	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	107	None	add
604	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	107	1	add
605	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	107	1	add
606	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  else  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  else  {  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  else  {	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  ';'  expected	102	None	replace
607	[BUG]  [BUGGY]  stepHandlers.add(this.stepHandler);  [CE]  cannot  find  symbol  stepHandler  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepHandler);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepHandler);	  stepHandlers.addAll(this.stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepHandler	45	None	replace
608	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  Integer>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  Integer>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  ArrayList  <  Integer>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);	  	non-compiled	[CE]  incompatible  types	68	None	add
609	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  AssertionError>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  AssertionError>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  ArrayList  <  AssertionError>();  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);	  	non-compiled	[CE]  incompatible  types	68	None	add
610	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
611	[BUG]  [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(!isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
612	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	110	None	replace
613	[BUG]  [BUGGY]  hasLastStep  =  false;  [CE]  cannot  find  symbol  hasLastStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  hasLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	hasLastStep  =  false;	  isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	78	None	replace
614	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
615	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  isLastStep  =  true;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	17	1	replace
616	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepH  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepH  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepH	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  >  expected	21	None	replace
617	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	93	None	add
618	[BUG]  [BUGGY]  this.stepHandlers  =  new  ObjectList  <  Integer>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ObjectList  <  Integer>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ObjectList  <  Integer>();	          this.stepHandlers    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
619	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY  -  2;	  stepStart    =    Double.POSITIVE_INFINITY    -    1;    	compilable	  [FE]  AssertionError  	37	1	replace
620	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  -  2;	  stepStart    =    Double.POSITIVE_INFINITY    -    1;    	compilable	  [FE]  AssertionError  	37	1	replace
621	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  *  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY  *  1;	  stepStart    =    Double.POSITIVE_INFINITY    -    1;    	compilable	  [FE]  AssertionError  	37	1	replace
622	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  *  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  *  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  *  1;	  stepStart    =    Double.POSITIVE_INFINITY    -    1;    	compilable	  [FE]  AssertionError  	37	1	replace
623	[BUG]  [BUGGY]  stepHandlers.add(this.stepStart,  name,  this.expable);  [CE]  cannot  find  symbol  expable  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepStart,  name,  this.expable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepStart,  name,  this.expable);	  stepHandlers.add(this.stepStart,    name);    	non-compiled	[CE]  cannot  find  symbol  expable	38	None	replace
624	[BUG]  [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
625	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  else  {  stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
626	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  StepStart  =  Math.max(stepStart,  stepHandlers.size());  [CE]  cannot  find  symbol  StepStart  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  StepStart  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    StepStart  =  Math.max(stepStart,  stepHandlers.size());	  	non-compiled	[CE]  cannot  find  symbol  StepStart	126	None	add
627	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepStart  =  Math.min(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
628	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepStart  =  Math.min(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepStart  =  Math.min(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	126	1	add
629	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
630	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    this.stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  this.stepSize  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	100	1	add
631	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NaN;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
632	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.NaN;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
633	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
634	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
635	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  this.stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.POSITIVE_INFINITY;  this.stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepstart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	125	1	replace
636	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  this.stepStart  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  this.stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY;  this.stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepstart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	125	1	replace
637	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepHandlersInitialized  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  stepHandlersInitialized  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepHandlersInitialized  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepHandlersInitialized  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepsInitialized    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepHandlersInitialized	135	None	replace
638	[BUG]  [BUGGY]  stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	94	None	replace
639	[BUG]  [BUGGY]  stepStart  =  Math.max(stepHandlers,  stepStart.length);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepHandlers,  stepStart.length);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepHandlers,  stepStart.length);	          stepStart    =    Math.max(stepStart,    stepHandlers.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
640	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  isLastStep));  [CE]  no  suitable  constructor  found  for  Integer(double,boolean)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  isLastStep));  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepStart,  isLastStep));	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,boolean)	92	None	replace
641	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  isLastStep);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepStart),  isLastStep);	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	92	None	replace
642	[BUG]  [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  false;  [CE]  cannot  find  symbol  hasLastStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  false;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	48	None	add
643	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
644	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
645	[BUG]  [BUGGY]  stepHandlers.add(this.eventsStates,  this.expable);  [CE]  cannot  find  symbol  expable  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.eventsStates,  this.expable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.eventsStates,  this.expable);	  stepHandlers.add(this.eventsStates);    	non-compiled	[CE]  cannot  find  symbol  expable	41	None	replace
646	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  |  Double.NaN  +  1;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  |  Double.NaN  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY  |  Double.NaN  +  1;	  stepStart    =    Double.POSITIVE_INFINITY    |    Double.NaN;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	121	None	replace
647	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	112	None	add
648	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep  ==  false)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep  ==  false)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	31	1	replace
649	[BUG]  [BUGGY]  if(isLastStep  ==  false)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep  ==  false)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep  ==  false)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	31	1	replace
650	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  isLastStep));  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.name,  isLastStep));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.name,  isLastStep));	  stepHandlers.add(new    StepHandler(name,    isLastStep));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	27	None	replace
651	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  StepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  StepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  StepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	58	None	replace
652	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	16	1	add
653	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	16	1	add
654	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
655	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    isLastStep  =  true;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        isLastStep    =    true;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	16	1	add
656	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.MIN_VALUE;    stepEnd    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	55	None	replace
657	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
658	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepH  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepH  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepH	  	non-compiled	[CE]  >  expected	7	None	add
659	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  incompatible  types	7	None	add
660	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  StepHandler  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  StepHandler  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    StepHandler  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  incompatible  types	62	None	add
661	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  if(isLastStep)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	80	1	replace
662	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  if(isLastStep)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    	compilable	  [FE]  AssertionError  	80	1	replace
663	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  Double(Double.POSITIVE_INFINITY);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  new  Double(Double.POSITIVE_INFINITY);	  stepStart    =    Double.POSITIVE_INFINITY;    stepStart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	63	1	replace
664	[BUG]  [BUGGY]  stepStart  =  new  Double(Double.POSITIVE_INFINITY);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  Double(Double.POSITIVE_INFINITY);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  Double(Double.POSITIVE_INFINITY);	  stepStart    =    Double.POSITIVE_INFINITY;    stepStart    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	63	1	replace
665	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	109	1	add
666	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	109	1	add
667	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	109	1	add
668	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	109	1	add
669	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
670	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MAX_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
671	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    	non-compiled	[CE]  incompatible  types	106	None	replace
672	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	89	1	add
673	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	89	1	add
674	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.events  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  events  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.events  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.events  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  events	89	None	add
675	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepsInitialized  =  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  stepsInitialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepsInitialized  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepsInitialized  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	34	None	add
676	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isFirstStep  =  true;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isFirstStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isFirstStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	13	None	add
677	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
678	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
679	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	11	1	add
680	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	11	1	add
681	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
682	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
683	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
684	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepSize    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	67	1	replace
685	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  expandable);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  expandable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  expandable);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	42	None	replace
686	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  expansionable);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  expansionable);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  cannot  find  symbol  expansionable	42	None	replace
687	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  StepHandler  stepStart  =  Double.POSITIVE_INFINITY  -  1;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  StepHandler  stepStart  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    StepHandler  stepStart  =  Double.POSITIVE_INFINITY  -  1;	  	non-compiled	[CE]  incompatible  types	36	None	add
688	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  StepSize  =  Double.POSITIVE_INFINITY  -  1;  [CE]  cannot  find  symbol  StepSize  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  StepSize  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    StepSize  =  Double.POSITIVE_INFINITY  -  1;	  	non-compiled	[CE]  cannot  find  symbol  StepSize	36	None	add
689	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	131	1	replace
690	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(5);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(5);	  stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	131	1	replace
691	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
692	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
693	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
694	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  name);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepStart),  name);	  stepHandlers.add(new    Integer(name),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	1	None	replace
695	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.NaN;    stepStart  =  isFirstStep?  Double.POSITIVE_INFINITY  :  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	95	None	add
696	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isFirstStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isFirstStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	84	None	add
697	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  StepStart  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;  StepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    StepStart    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepStart	52	None	replace
698	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  StepStart  =  Double.MAX_VALUE;  [CE]  cannot  find  symbol  StepStart  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  StepStart  =  Double.MAX_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  StepStart  =  Double.MAX_VALUE;	  stepStart    =    Double.MIN_VALUE;    StepStart    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  StepStart	52	None	replace
699	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
700	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
701	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	77	1	add
702	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	77	1	add
703	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Integer>();  isLastStep  =  true;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers  =  new  ArrayList  <  Integer>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    stepHandlers  =  new  ArrayList  <  Integer>();  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	77	None	add
704	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers.add(new  Integer(name));  isLastStep  =  true;  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers.add(new  Integer(name));  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    stepHandlers.add(new  Integer(name));  isLastStep  =  true;	  	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	77	None	add
705	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size()  -  1);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Math.max(stepStart,  stepHandlers.size()  -  1);	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
706	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size()  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size()  -  1);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepStart,  stepHandlers.size()  -  1);	  stepStart    =    Math.max(stepStart,    stepHandlers.size());    	compilable	  [FE]  AssertionError  	127	1	replace
707	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size);  [CE]  cannot  find  symbol  size  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Math.max(stepStart,  stepHandlers.size);	          stepStart    =    Math.max(stepStart,    stepHandlers.length);    	non-compiled	[CE]  cannot  find  symbol  size	91	None	replace
708	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  false;  [CE]  cannot  find  symbol  hasLastStep  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  false;	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	75	None	add
709	[BUG]  [BUGGY]  stepHandlers.add(this.name,  name,  this.events);  [CE]  cannot  find  symbol  events  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.name,  name,  this.events);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.name,  name,  this.events);	  stepHandlers.add(this.name,    name);    	non-compiled	[CE]  cannot  find  symbol  events	39	None	replace
710	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	66	1	add
711	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.NaN;  stepSize  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	66	1	add
712	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  INFINITY  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepSize  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepSize    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.INFINITY;  stepSize  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  INFINITY	66	None	add
713	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
714	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;	  stepStart    =    Double.MIN_VALUE;    stepSize    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	54	1	replace
715	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers.addAll(this.stepHandlers);    stepHandlers.addAll(this.stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	44	1	add
716	[BUG]  [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(this.stepHandlers);  stepHandlers.addAll(this.stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(this.stepHandlers);    stepHandlers.addAll(this.stepHandlers);  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	44	1	add
717	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepStart  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepStart  =  Double.POSITIVE_INFINITY  -  2;	  	compilable	  [FE]  AssertionError  	36	1	add
718	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepStart  =  Double.POSITIVE_INFINITY  -  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  -  1;  stepStart  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    -    1;    stepStart  =  Double.POSITIVE_INFINITY  -  2;	  	compilable	  [FE]  AssertionError  	36	1	add
719	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  ';'  expected	102	None	replace
720	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  this.stepEnd  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepEnd  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  this.stepEnd  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.POSITIVE_INFINITY;  this.stepEnd  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepEnd    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	65	None	replace
721	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  stepStart);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  isLastStep),  stepStart);	  stepHandlers.add(new    StepHandler(name,    isLastStep));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	27	None	replace
722	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  stepsInitialized);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(name,  isLastStep),  stepsInitialized);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(name,  isLastStep),  stepsInitialized);	  stepHandlers.add(new    StepHandler(name,    isLastStep));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	27	None	replace
723	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
724	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);    	compilable	  [FE]  AssertionError  	69	1	replace
725	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  Integer>(stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  Integer>(stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  Integer>(stepStart);	          this.stepHandlers    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	47	None	replace
726	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  hasLastStep  =  true;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    hasLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  hasLastStep	32	None	replace
727	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers.addAll(stepHandlers);  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	isLastStep    =    true;    stepHandlers.addAll(stepHandlers);  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
728	[BUG]  [BUGGY]  isLastStep  =  true;  stepHandlers.addAll(stepHandlers);  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  isLastStep  =  true;  stepHandlers.addAll(stepHandlers);  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	isLastStep    =    true;    stepHandlers.addAll(stepHandlers);  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	77	1	add
729	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates,  statesInitialized);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(eventsStates,  statesInitialized);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(eventsStates,  statesInitialized);	  stepHandlers.addAll(eventsStates);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	42	None	replace
730	[BUG]  [BUGGY]  stepHandlers.addAll(stepStart);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.addAll(stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.addAll(stepStart);	          stepHandlers.addAll(stepHandlers);    StepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	70	None	replace
731	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(8);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>(8);	  stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	131	1	replace
732	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(8);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(8);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(8);	  stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	131	1	replace
733	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MAX_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MAX_VALUE;  stepStart  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	50	1	add
734	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MAX_VALUE;  stepStart  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MIN_VALUE;  stepStart  =  Double.MAX_VALUE;  stepStart  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepStart    =    Double.MIN_VALUE;    stepStart  =  Double.MAX_VALUE;  stepStart  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	50	1	add
735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
736	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
737	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  List  <  StepHandler>();  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  List  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  List  <  StepHandler>();	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	18	None	add
738	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
739	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	6	1	replace
740	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart),  this.stepSize);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.stepStart),  this.stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.stepStart),  this.stepSize);	  stepHandlers.add(new    StepHandler(this.stepStart));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	120	None	replace
741	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incompatible  types	23	None	replace
742	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	21	None	replace
743	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepH  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepH  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepH	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  not  a  statement	21	None	replace
744	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
745	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  INFINITY  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepSize    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.INFINITY;  stepSize  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  INFINITY	60	None	add
746	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepStart  =  Math.max(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
747	[BUG]  [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.min(stepStart,  stepHandlers.size());  stepStart  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.min(stepStart,    stepHandlers.size());    stepStart  =  Math.max(stepStart,  stepHandlers.size());	  	compilable	  [FE]  AssertionError  	128	1	add
748	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.expr));  [CE]  cannot  find  symbol  expr  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.expr));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.expr));	  stepHandlers.add(this.expr);    	non-compiled	[CE]  cannot  find  symbol  expr	114	None	replace
749	[BUG]  [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incompatible  types	8	None	replace
750	[BUG]  [BUGGY]  stepsInitialized  =  true;  stepsInitialized  =  true;  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepsInitialized  =  true;  stepsInitialized  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepsInitialized  =  true;  stepsInitialized  =  true;	          stepHandlers.addAll(stepHandlers);    stepsInitialized    =    true;    stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	71	None	replace
751	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize  +  1);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize  +  1);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize  +  1);	  stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	74	None	replace
752	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  stepSize);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart),  stepSize);	  stepHandlers.add(new    Integer(name),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	4	None	replace
753	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(name),  stepSize,  eventStates);  [CE]  cannot  find  symbol  eventStates  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(name),  stepSize,  eventStates);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(name),  stepSize,  eventStates);	  stepHandlers.add(new    Integer(name),    stepSize);    	non-compiled	[CE]  cannot  find  symbol  eventStates	4	None	replace
754	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.name),  this.stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.name),  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.name),  this.stepStart);	  stepHandlers.add(new    Integer(this.name));    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	116	None	replace
755	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepsInitialized.addAll(stepHandlers);  }  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepsInitialized.addAll(stepHandlers);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepsInitialized.addAll(stepHandlers);  }	          stepHandlers.addAll(stepHandlers);    stepsInitialized.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	72	None	replace
756	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(3);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>(3);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
757	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(3);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(3);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(3);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(4);    	compilable	  [FE]  AssertionError  	119	1	replace
758	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  false;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  isLastStep  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
759	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	steps  =  new  ArrayList  <  StepHandler>();  isLastStep  =  false;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    false;    	non-compiled	[CE]  cannot  find  symbol  steps	76	None	replace
760	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.MIN_VALUE;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  stepStart    =    Double.MIN_VALUE;    stepsInitialized    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	135	1	replace
761	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  stepStart    =    Double.MIN_VALUE;    stepsInitialized    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	135	1	replace
762	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  newList  <  StepHandler>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  }  if(isLastStep)  {  this.stepHandlers  =  newList  <  StepHandler>();  isLastStep  =  true;  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    }    if(isLastStep)  {  this.stepHandlers  =  newList  <  StepHandler>();  isLastStep  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
763	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	105	None	replace
764	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  stepStart));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  stepStart));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart,  stepStart));	  stepHandlers.add(new    Integer(name,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	2	None	replace
765	[BUG]  [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepEnd  =  Math.max(stepStart,  stepHandlers.size());  [CE]  cannot  find  symbol  stepEnd  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Math.max(stepStart,  stepHandlers.size());  stepEnd  =  Math.max(stepStart,  stepHandlers.size());  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Math.max(stepStart,    stepHandlers.size());    stepEnd  =  Math.max(stepStart,  stepHandlers.size());	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	126	None	add
766	[BUG]  [BUGGY]  stepHandlers.add(this.stepStart,  this.expr);  [CE]  cannot  find  symbol  expr  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(this.stepStart,  this.expr);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(this.stepStart,  this.expr);	  stepHandlers.add(this.stepStart,    name);    	non-compiled	[CE]  cannot  find  symbol  expr	38	None	replace
767	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	10	None	replace
768	[BUG]  [BUGGY]  StepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  =  Double.NEGATIVE_INFINITY;  stepEnd  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepEnd    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	59	None	replace
769	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  [CE]  '('  or  '['  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  stepHandlers  =  new	  	non-compiled	[CE]  '('  or  '['  expected	7	None	add
770	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	68	1	add
771	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  }  else  {  setMaxEvaluations(-1);  }	  	compilable	  [FE]  AssertionError  	68	1	add
772	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  HashSet  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  HashSet  <  StepHandler>();  stepHandlers.addAll(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                stepHandlers.addAll(stepHandlers);        stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  HashSet  <  StepHandler>();  stepHandlers.addAll(stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
773	[BUG]  [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.POSITIVE_INFINITY;        stepStart    =    Double.POSITIVE_INFINITY;    stepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY	  	non-compiled	[CE]  ';'  expected	62	None	add
774	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  this.stepSize,  name);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart),  this.stepSize,  name);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart),  this.stepSize,  name);	  stepHandlers.add(new    Integer(this.stepStart),    name);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	123	None	replace
775	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	53	1	add
776	[BUG]  [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.MIN_VALUE;    stepSize  =  Double.MIN_VALUE;  stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.MIN_VALUE;        stepSize    =    Double.MIN_VALUE;    stepStart  =  Double.NaN;  stepSize  =  Double.MIN_VALUE;	  	compilable	  [FE]  AssertionError  	53	1	add
777	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
778	[BUG]  [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(!isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
779	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
780	[BUG]  [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	90	1	replace
781	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  Double(Double.NEGATIVE_INFINITY);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  new  Double(Double.NEGATIVE_INFINITY);	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	99	1	replace
782	[BUG]  [BUGGY]  stepStart  =  new  Double(Double.NEGATIVE_INFINITY);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  new  Double(Double.NEGATIVE_INFINITY);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  new  Double(Double.NEGATIVE_INFINITY);	  stepStart    =    Double.NEGATIVE_INFINITY;    StepStart    =    Double.NEGATIVE_INFINITY;    stepStart    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	99	1	replace
783	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  steps.addAll(stepHandlers);  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  steps.addAll(stepHandlers);  }  else  {  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers!=  null)  {  stepHandlers.addAll(stepHandlers);  steps.addAll(stepHandlers);  }  else  {	          stepHandlers.addAll(stepHandlers);    steps.addAll(stepHandlers);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
784	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
785	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
786	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
787	[BUG]  [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(isLastStep)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  AssertionError  	110	1	replace
788	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.eventsStates  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    isLastStep    =    true;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.eventsStates  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        isLastStep        =        true;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.eventsStates  =  new  ArrayList  <  StepHandler>();  isLastStep  =  true;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	89	None	add
789	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  AssertionError>(stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  AssertionError>(stepStart);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  ArrayList  <  AssertionError>(stepStart);	          this.stepHandlers    =    new    ArrayList    <    AssertionError>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	46	None	replace
790	[BUG]  [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  INFINITY  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.NEGATIVE_INFINITY;  stepStart  =  Double.INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart        =        Double.NEGATIVE_INFINITY;        stepStart    =    Double.NEGATIVE_INFINITY;    stepStart  =  Double.INFINITY;  stepStart  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  INFINITY	56	None	add
791	[BUG]  [BUGGY]  StepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  StepStart  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepStart  =  Double.POSITIVE_INFINITY;  stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.POSITIVE_INFINITY;    stepstart    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  StepStart	125	None	replace
792	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
793	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NEGATIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepSize  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NEGATIVE_INFINITY;    stepSize    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	61	1	replace
794	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepStart  =  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepStart  =  Double.NEGATIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	87	1	add
795	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepStart  =  Double.NEGATIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY  +  1;  stepStart  =  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.NEGATIVE_INFINITY    +    1;    stepStart  =  Double.NEGATIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	87	1	add
796	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.NaN;  [CE]  cannot  find  symbol  stepEnd  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.NaN;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart  =  Double.MIN_VALUE;  stepEnd  =  Double.NaN;	  stepStart    =    Double.MIN_VALUE;    stepEnd    =    Double.MIN_VALUE;    	non-compiled	[CE]  cannot  find  symbol  stepEnd	55	None	replace
797	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
798	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  Il  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  Il	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	25	None	replace
799	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]        IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	25	None	replace
800	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	this.stepHandlers  =  new  TreeSet  <  StepHandler>();  isLastStep  =  true;	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	86	1	replace
801	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  isLastStep  =  true;  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();  isLastStep  =  true;	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    isLastStep    =    true;    	compilable	  [FE]  AssertionError  	86	1	replace
802	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	20	None	add
803	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	20	None	add
804	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	24	None	add
805	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	22	None	add
806	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepStart,  stepSize));  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepStart,  stepSize));	  stepHandlers.add(new    Integer(name,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	3	None	replace
807	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(this.stepSize),  stepStart);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(this.stepSize),  stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(this.stepSize),  stepStart);	  stepHandlers.add(new    Integer(name),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	1	None	replace
808	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  this.stepHandlers  =  new  TreeList  <  StepHandler>(stepHandlers);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepHandlers);  this.stepHandlers  =  new  TreeList  <  StepHandler>(stepHandlers);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepHandlers);    this.stepHandlers  =  new  TreeList  <  StepHandler>(stepHandlers);	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
809	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
810	[BUG]  [BUGGY]  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    TreeList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
811	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize);  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize);	          stepHandlers.add(new    Integer(stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	92	None	replace
812	[BUG]  [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepsInitialized  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  stepsInitialized  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  stepsInitialized  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    isLastStep?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    stepsInitialized  =  isLastStep?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	93	None	add
813	[BUG]  [BUGGY]  stepHandlers.add(new  StepHandler(this.name),  this.stepStart);  [CE]  StepHandler  is  abstract;  cannot  be  instantiated  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepHandlers.add(new  StepHandler(this.name),  this.stepStart);  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepHandlers.add(new  StepHandler(this.name),  this.stepStart);	  stepHandlers.add(new    StepHandler(this.name));    	non-compiled	[CE]  StepHandler  is  abstract;  cannot  be  instantiated	98	None	replace
814	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepStart  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	add	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepStart  =  Double.POSITIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	34	1	add
815	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepStart  =  Double.POSITIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY  +  1;  stepStart  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	stepStart    =    Double.POSITIVE_INFINITY    +    1;    stepStart  =  Double.POSITIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	34	1	add
816	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =(StepHandler)this.stepHandlers.clone();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();      [BUGGY]  StepHandlers  stepHandlers  =(StepHandler)this.stepHandlers.clone();  [BUGGY]      stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	88	88	1	replace	StepHandlers  stepHandlers  =(StepHandler)this.stepHandlers.clone();	          stepHandlers.addAll(stepHandlers);    StepHandlers    stepHandlers    =(StepHandler)stepHandlers.clone();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
