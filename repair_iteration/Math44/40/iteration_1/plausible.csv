33	[BUG]    [BUGGY]        Iterator    <    EventState>    iterator    =    eventsStates.iterator();    [FE]    AssertionError    [FE]        AssertionError    [CONTEXT]    double    previousT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getGlobalCurrentTime();    resetOccurred    =    false;    if    (!    statesInitialized)    {    for    (EventState    state    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    [BUGGY]        Iterator    <    EventState>    iterator    =    eventsStates.iterator();    [BUGGY]    statesInitialized    =    true;    }    final    int    orderingSign    =    interpolator.isForward()    ?    +1    :    -1;    SortedSet<EventState>    occuringEvents    =    new    TreeSet<EventState>(new    Comparator<EventState>()    {    public    int    compare(EventState    es0,    EventState    es1)    {    return    orderingSign    *    Double.compare(es0.getEventTime(),    es1.getEventTime());    }    [CLASS]    AbstractIntegrator    1    [METHOD]    acceptStep    [RETURN_TYPE]    double    AbstractStepInterpolator    interpolator    final    double[]    y    final    double[]    yDot    final    double    tEnd    [VARIABLES]    ExpandableStatefulODE    equations    expandable    expandableODE    EventState    currentEvent    es0    es1    state    double    convergence    currentT    eventT    maxCheckInterval    previousT    stepSize    stepStart    t    t0    tEnd    Incrementor    evaluations    StepHandler    handler    String    name    SortedSet    occuringEvents    int    orderingSign    boolean    isLastStep    resetOccurred    stateInitialized    statesInitialized    double[]    currentY    eventY    y    yDot    Iterator    iterator    Collection    eventsStates    stepHandlers    AbstractStepInterpolator    interpolator    	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	287	287	1	replace	Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();	      Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	plausible		7	0
