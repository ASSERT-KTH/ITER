projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292SortedSet<EventState>occuringEvents=newTreeSet<EventState>(newComparator<EventState>(){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292SortedSet<EventState>occuringEvents=newTreeSet<EventState>(orderingSign,newComparator<EventState>(){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292SortedSet<EventState>occuringEvents=newTreeSet<EventState>(orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292finalSortedSet<EventState>occuringEvents=newTreeSet<EventState>(newComparator<EventState>(){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292SortedSet<EventState>occuringEvents=newTreeSet<EventState>(newComparator<EventState>());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292Iterator<EventState>iterator=eventsStates.iterator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign!=null){if(!isLastStep){for(finalEventStatestate:eventsStates){event.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign!=null){if(!isLastStep){for(EventStatestate:eventsStates){event.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign!=null){if(!isLastStep){for(finalEventStatestate:eventsInitialized){event.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign!=null){if(!isLastStep){for(EventStatestate:eventsInitialized){event.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign==0){if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign==0){if(!isLastStep){for(EventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign==0){if(!isLastStep){for(finalEventStatestate:eventsStates){event.reinitializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign==0){if(!isLastStep){for(finalEventStatestate:eventsStates){state.initializeBegin(interpolator);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292SortedSet<EventState>occuringEvents=newTreeSet<EventState>(newComparator<EventState>(),orderingSign);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderedSign>0){for(finalEventStatestate:state.getSteps()){orderingSign+=state.getSteps().size();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderedSign>0){for(finalEventStatestate:state.getEventStates()){orderingSign+=state.getEventSigns().size();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign>0){for(finalEventStatestate:eventsStates){finalintstepStart=state.getStepStart();orderingSign+=state.getStepEnd();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java292if(orderingSign>0){for(finalEventStatestate:eventsStates){finalintstepStart=state.getStepStart();orderingSign*=state.getStepEnd();}
