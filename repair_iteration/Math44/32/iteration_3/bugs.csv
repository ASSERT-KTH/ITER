bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE));	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
2	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized,  expandableODE));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized,  expandableODE));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized,  expandableODE));	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
3	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  expandable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  expandable);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
4	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expansion));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expansion));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expansion));	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	13	1	add
6	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	13	1	add
7	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	13	1	add
9	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	13	1	add
10	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	13	None	add
11	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  false;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  false;  }	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	13	None	add
12	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	          this.statesInitialized    =    stateInitialized;    this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	9	1	add
16	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	9	1	add
17	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
18	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  This.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  This.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    This.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  This	9	None	add
19	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	9	None	add
20	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
21	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE),  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE),  stateInitialized);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized),    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
22	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  expandableODE);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(stateInitialized),  expandableODE);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized),    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
23	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE,  stateInitialized),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE,  stateInitialized),  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expandableODE,  stateInitialized),  stateInitialized);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized),    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
24	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expansion),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expansion),  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expansion),  stateInitialized);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized),    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
25	[BUG]  [BUGGY]  this.expandableODE  =  this.expandable.equals(isLastStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.expandable.equals(isLastStep);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandable.equals(isLastStep);	  this.expandableODE    =    isLastStep.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
26	[BUG]  [BUGGY]  this.eventsStates.add(new  Integer(stateInitialized  +  1));  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(new  Integer(stateInitialized  +  1));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(new  Integer(stateInitialized  +  1));	  this.eventsStates.add(new    Integer(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
27	[BUG]  [BUGGY]  this.eventsStates.add(new  Integer(isLastStep));  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(new  Integer(isLastStep));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(new  Integer(isLastStep));	  this.eventsStates.add(new    Integer(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
28	[BUG]  [BUGGY]  this.eventsStates.add(new  Integer(0));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(new  Integer(0));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(new  Integer(0));	  this.eventsStates.add(new    Integer(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	29	1	add
30	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	29	1	add
31	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	29	1	add
33	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	29	1	add
34	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  This.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  package  This  does  not  exist  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  This.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    This.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  package  This  does  not  exist	29	None	add
35	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  2;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  +  2;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  +  2;	  this.statesInitialized    =    stateInitialized    +    1;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
36	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  /  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  /  1;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  /  1;	  this.statesInitialized    =    stateInitialized    +    1;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
37	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  -  1;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  -  1;	  this.statesInitialized    =    stateInitialized    +    1;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
38	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(isLastStep);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.equals(isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(isLastStep);	  this.expandableODE    =    isLastStep.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
39	[BUG]  [BUGGY]  this.stepHandlers.clear();  if(this.stepHandlers!=  null)  {  for(int  i  =  0;  i  <  this.stepHandlers.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.stepHandlers.clear();  if(this.stepHandlers!=  null)  {  for(int  i  =  0;  i  <  this.stepHandlers.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.stepHandlers.clear();  if(this.stepHandlers!=  null)  {  for(int  i  =  0;  i  <  this.stepHandlers.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
40	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
41	[BUG]  [BUGGY]  this.statesInitialized.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
42	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  ||  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	57	1	add
45	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	57	1	add
46	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
47	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
48	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  This.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  This.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    This.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  This	57	None	add
49	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  stateInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  stateInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    stateInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	57	None	add
50	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(expandable);	  this.expandableODE    =    this.statesInitialized.evaluate(expandable);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
51	[BUG]  [BUGGY]  this.expandableODE  =  this.statesInitialized.evaluate(stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.statesInitialized.evaluate(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.statesInitialized.evaluate(stateInitialized);	  this.expandableODE    =    this.statesInitialized.evaluate(expandable);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	11	1	add
53	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	11	1	add
54	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
55	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
56	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	11	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	11	1	add
58	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	  	compilable	  [FE]  AssertionError  	11	1	add
59	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  this.eventsStates.clear();  if(expanableODE!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(expanableODE!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(expanableODE!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
62	[BUG]  [BUGGY]  this.eventsStates.clear();  if(stateInitialized!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(stateInitialized!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(stateInitialized!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
63	[BUG]  [BUGGY]  this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
64	[BUG]  [BUGGY]  this.eventsStates.clear();  if(stateInitialized  ==  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(stateInitialized  ==  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(stateInitialized  ==  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
65	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansion);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansion);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expansion);	  this.expandableODE    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  this.eventsStates.put(name,  isLastStep?  stateInitialized  :  stateStates);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  isLastStep?  stateInitialized  :  stateStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  isLastStep?  stateInitialized  :  stateStates);	  this.eventsStates.put(name,    stateInitialized?    stateInitialized    :    stateStates);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
67	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?  1  :  stateStates);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?  1  :  stateStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?  1  :  stateStates);	  this.eventsStates.put(name,    stateInitialized?    stateInitialized    :    stateStates);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
68	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateInitialized);	  this.eventsStates.put(name,    stateInitialized?    stateInitialized    :    stateStates);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
69	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized,  expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized,  expandable);	  this.expandableODE    =    stateInitialized.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  this.statesInitialized  =  stateState;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateState;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateState;	  this.statesInitialized    =    isLastStep;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	Arrays.sort(this.eventsStates);  this.eventsStates.clear();	          this.eventsStates.clear();    Arrays.sort(this.eventsStates);    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
72	[BUG]  [BUGGY]  this.eventsStates.clear();  Arrays.sort(this.statesInitialized);  this.eventsStates.clear();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  Arrays.sort(this.statesInitialized);  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  Arrays.sort(this.statesInitialized);  this.eventsStates.clear();	          this.eventsStates.clear();    Arrays.sort(this.eventsStates);    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
73	[BUG]  [BUGGY]  this.eventsInitialized.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsInitialized.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsInitialized.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    expandableODE    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
74	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.expandableODE!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.expandableODE!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.expandableODE!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    expandableODE    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
75	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.eventsStates  ==  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    expandableODE    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
76	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandable.evaluate(this,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.evaluate(this,  stateInitialized);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandable);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansionableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansionableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expansionableODE);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
78	[BUG]  [BUGGY]  this.statesInitialized.reset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.reset();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.reset();	  this.statesInitialized.clear();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
79	[BUG]  [BUGGY]  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
80	[BUG]  [BUGGY]  this.eventsStates.clear();  if(isFirstStep)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(isFirstStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(isFirstStep)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
81	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);	  this.expandableODE    =    isLastStep.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
82	[BUG]  [BUGGY]  this.eventsStates.add(expandableODE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(expandableODE);	  this.eventsStates.add(expandable);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
83	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
84	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
85	[BUG]  [BUGGY]  this.statesInitialized.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
86	[BUG]  [BUGGY]  this.eventsInitialized.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsInitialized.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsInitialized.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
87	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear();  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(!isLastStep)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(!isLastStep)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
88	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(!isLastStep)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(!isLastStep)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
89	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
90	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(stateInitialized);	  this.expandableODE    =    equations.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this.statesInitialized,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(this.statesInitialized,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this.statesInitialized,  stateInitialized);	  this.expandableODE    =    equations.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  this.stepHandlers.clear();  if(this.stepHandlers!=  null)  {  this.stepHandlers.clear();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.stepHandlers.clear();  if(this.stepHandlers!=  null)  {  this.stepHandlers.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.stepHandlers.clear();  if(this.stepHandlers!=  null)  {  this.stepHandlers.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
93	[BUG]  [BUGGY]  this.stepHandlers.clear();  if(this.stepSize!=  null)  {  this.stepHandlers.clear();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.stepHandlers.clear();  if(this.stepSize!=  null)  {  this.stepHandlers.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.stepHandlers.clear();  if(this.stepSize!=  null)  {  this.stepHandlers.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	76	1	add
95	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	76	1	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	76	1	add
97	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	76	1	add
98	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  if(isLastStep)  {  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  if(isLastStep)  {  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    if(isLastStep)  {  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
99	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  This.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [CE]  package  This  does  not  exist  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  This.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    This.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  package  This  does  not  exist	76	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	27	1	add
101	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	27	1	add
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	27	1	add
103	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  this.eventsStates.clear();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	27	1	add
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	27	1	add
105	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	27	1	add
106	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  This.eventsStates.clear();  this.eventsStates.clear();  [CE]  package  This  does  not  exist  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  This.eventsStates.clear();  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    This.eventsStates.clear();  this.eventsStates.clear();	  	non-compiled	[CE]  package  This  does  not  exist	27	None	add
107	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized,  isLastStep);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized,  isLastStep);	  this.eventsStates.put(name,    isLastStep,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
108	[BUG]  [BUGGY]  this.eventsStates.put(name,  isInitialized,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  isInitialized,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  isInitialized,  stateInitialized);	  this.eventsStates.put(name,    isLastStep,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
109	[BUG]  [BUGGY]  this.expandableODE  =  this.expandable.equals(expandable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.expandable.equals(expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandable.equals(expandable);	  this.expandableODE    =    expansionable.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
110	[BUG]  [BUGGY]  this.eventsStates.add(expansion,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(expansion,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(expansion,  stateInitialized);	  this.eventsStates.add(expansion);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
111	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(equries);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.equals(equries);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(equries);	  this.expandableODE    =    equations.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
112	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized  -  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized  -  1);	  this.eventsStates.put(name,    stateInitialized    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
113	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized  +  2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized  +  2);	  this.eventsStates.put(name,    stateInitialized    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
114	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized  /  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized  /  1);	  this.eventsStates.put(name,    stateInitialized    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
115	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
116	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
117	[BUG]  [BUGGY]  this.eventsStates.put(stateInitialized,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(stateInitialized,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(stateInitialized,  stateInitialized);	  this.eventsStates.put(null,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
118	[BUG]  [BUGGY]  this.eventsStates.put(stateInitialized,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(stateInitialized,  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(stateInitialized,  null);	  this.eventsStates.put(null,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
119	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    else    {    expandableODE    =    new    ExpandableStatefulODE    <    Integer>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
120	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    else    {    expandableODE    =    new    ExpandableStatefulODE    <    Integer>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
121	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    else    {    expandableODE    =    new    ExpandableStatefulODE    <    Integer>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
122	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(this,  stateInitialized);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this,  stateInitialized);	  this.expandableODE    =    equations.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
123	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this,  expandable);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(this,  expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this,  expandable);	  this.expandableODE    =    equations.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
124	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this,  isLastStep);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(this,  isLastStep);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this,  isLastStep);	  this.expandableODE    =    equations.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
125	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
126	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
127	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
128	[BUG]  [BUGGY]  this.stepHandlers.clear();  if(this.statesInitialized!=  null)  {  this.stepHandlers.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.stepHandlers.clear();  if(this.statesInitialized!=  null)  {  this.stepHandlers.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.stepHandlers.clear();  if(this.statesInitialized!=  null)  {  this.stepHandlers.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
129	[BUG]  [BUGGY]  this.eventHandlers.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventHandlers.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventHandlers.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
130	[BUG]  [BUGGY]  this.eventsStates.add(isLastStep,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(isLastStep,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(isLastStep,  stateInitialized);	  this.eventsStates.add(isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
131	[BUG]  [BUGGY]  this.eventsStates.remove(isLastStep);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(isLastStep);	  this.eventsStates.add(isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
132	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isFirstStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
134	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  this.statesInitialized.add(stateInitialized,  expandableODE);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.add(stateInitialized,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.add(stateInitialized,  expandableODE);	  this.statesInitialized.add(stateInitialized,    isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
136	[BUG]  [BUGGY]  this.statesInitialized.add(isLastStep,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.add(isLastStep,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.add(isLastStep,  stateInitialized);	  this.statesInitialized.add(stateInitialized,    isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	7	1	add
138	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	7	1	add
139	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    This.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	7	1	add
141	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	7	1	add
142	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(this.statesInitialized,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandable.evaluate(this.statesInitialized,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.evaluate(this.statesInitialized,  stateInitialized);	  this.expandableODE    =    expandable.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
143	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(this.statesInitialized,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expansionable.evaluate(this.statesInitialized,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.evaluate(this.statesInitialized,  stateInitialized);	  this.expandableODE    =    expansionable.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
144	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expansionable.evaluate(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.evaluate(stateInitialized);	  this.expandableODE    =    expansionable.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
145	[BUG]  [BUGGY]  this.eventsStates.remove(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(this.statesInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(this.statesInitialized);	  this.eventsStates.remove(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
146	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
147	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  System.arraycopy(this.eventsStates,  0,  this.eventsStates,  stateInitialized);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  System.arraycopy(this.eventsStates,  0,  this.eventsStates,  stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  System.arraycopy(this.eventsStates,  0,  this.eventsStates,  stateInitialized);  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
148	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  isLastStep  =  false;  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
149	[BUG]  [BUGGY]  this.statesInitialized.resetOccurred  =  stateInitialized;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.resetOccurred  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.resetOccurred  =  stateInitialized;	  this.statesInitialized.set(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
150	[BUG]  [BUGGY]  this.expandableODE  =  equations.equals(expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.equals(expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.equals(expandable);	  this.expandableODE    =    this.expandableODE.equals(expandable);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
151	[BUG]  [BUGGY]  this.expandableODE  =  this.expandable.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.expandable.equals(stateInitialized);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandable.equals(stateInitialized);	  this.expandableODE    =    this.expandableODE.equals(expandable);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
152	[BUG]  [BUGGY]  this.expandableODE  =  expandable.equals(this.expandable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandable.equals(this.expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandable.equals(this.expandable);	  this.expandableODE    =    this.expandableODE.equals(expandable);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
153	[BUG]  [BUGGY]  this.eventsStates.clear();  if(expanableODE  ==  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(expanableODE  ==  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(expanableODE  ==  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE    ==    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
154	[BUG]  [BUGGY]  this.eventsStates.clear();  if(isLastStep  ==  false)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(isLastStep  ==  false)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(isLastStep  ==  false)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE    ==    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
155	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?   "false "  :  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?   "false "  :  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?   "false "  :  stateInitialized);	  this.eventsStates.put(name,    stateInitialized?   "true   "    :    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
156	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(isLastStep);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(isLastStep);	  this.expandableODE    =    isLastStep.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
157	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep.evaluate(stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  isLastStep.evaluate(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  isLastStep.evaluate(stateInitialized);	  this.expandableODE    =    isLastStep.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	31	1	add
159	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	31	1	add
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	31	1	add
161	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	31	1	add
162	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }	  	compilable	  [FE]  AssertionError  	31	1	add
164	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }	  	compilable	  [FE]  AssertionError  	31	1	add
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  }	  	compilable	  [FE]  AssertionError  	31	1	add
166	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  }	  	compilable	  [FE]  AssertionError  	31	1	add
167	[BUG]  [BUGGY]  this.eventsStates.set(stateInitialized);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.set(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.set(stateInitialized);	  this.eventsStates.remove(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
168	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(equances);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.equals(equances);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.equals(equances);	  this.expandableODE    =    equations.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
169	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandeableODE),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandeableODE),  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expandeableODE),  stateInitialized);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized),    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
170	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expansionableODE),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expansionableODE),  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expansionableODE),  stateInitialized);	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized),    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	27	1	add
172	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }	  	compilable	  [FE]  AssertionError  	27	1	add
173	[BUG]  [BUGGY]  this.expandableODE  =  expandedable.equals(stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandedable.equals(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandedable.equals(stateInitialized);	  this.expandableODE    =    expansionable.equals(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
174	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(!isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(!isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(!isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
175	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
176	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
177	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.expandableODE  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.expandableODE  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.expandableODE  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	57	1	add
179	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	57	1	add
180	[BUG]  [BUGGY]  this.stepHandlers.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.stepHandlers.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.stepHandlers.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
181	[BUG]  [BUGGY]  this.expandableODE  =  this.expandable.equals(expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.expandable.equals(expandableODE);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandable.equals(expandableODE);	  this.expandableODE    =    expandable.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
182	[BUG]  [BUGGY]  this.expandableODE  =  this.expandableODE.equals(isLastStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.expandableODE.equals(isLastStep);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandableODE.equals(isLastStep);	  this.expandableODE    =    isLastStep.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this.statesInitialized,  expandable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(this.statesInitialized,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this.statesInitialized,  expandable);	  this.expandableODE    =    equations.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
184	[BUG]  [BUGGY]  this.expandableODE  =  expandableOccurred.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandableOccurred.evaluate(this,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandableOccurred.evaluate(this,  stateInitialized);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
185	[BUG]  [BUGGY]  this.eventsStates.add(isLastStep  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(isLastStep  +  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(isLastStep  +  1);	  this.eventsStates.add(isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
186	[BUG]  [BUGGY]  this.expandableODE.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();	          this.eventsStates.clear();    Arrays.sort(this.eventsStates);    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
187	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this,  expansionable);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  equations.evaluate(this,  expansionable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  equations.evaluate(this,  expansionable);	  this.expandableODE    =    equations.evaluate(this);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
188	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  1L;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  +  1L;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  +  1L;	  this.statesInitialized    =    stateInitialized    +    1;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
189	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.eventsInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.eventsInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.eventsInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    expandableODE    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
190	[BUG]  [BUGGY]  this.eventsStates.remove(expandableODE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(expandableODE);	  this.eventsStates.add(expandable);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
191	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized  +  1,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized  +  1,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized  +  1,  stateInitialized);	  this.eventsStates.put(name,    stateInitialized    +    1);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
192	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(this.isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
193	[BUG]  [BUGGY]  this.eventsStates.put(name,  expandableODE,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  expandableODE,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  expandableODE,  stateInitialized);	  this.eventsStates.put(name,    isLastStep,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
194	[BUG]  [BUGGY]  this.eventsStates.put(name,  expansionableODE,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  expansionableODE,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  expansionableODE,  stateInitialized);	  this.eventsStates.put(name,    isLastStep,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
195	[BUG]  [BUGGY]  this.statesInitialized  =  stateStateInitialized;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateStateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateStateInitialized;	  this.statesInitialized    =    isLastStep;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
196	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  expandableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  expandableODE;	  this.statesInitialized    =    isLastStep;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
197	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  expandableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  expandableODE);	  this.eventsStates.put(name,    stateInitialized?    stateInitialized    :    stateStates);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
198	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateOutitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateOutitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  stateOutitialized);	  this.eventsStates.put(name,    stateInitialized?    stateInitialized    :    stateStates);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
199	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionableODE;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized  &&  expansionableODE;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
200	[BUG]  [BUGGY]  this.statesInitialized.add(expableODE,  isLastStep);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.add(expableODE,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.add(expableODE,  isLastStep);	  this.statesInitialized.add(stateInitialized,    isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
201	[BUG]  [BUGGY]  this.statesInitialized.add(expandeableODE,  isLastStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.add(expandeableODE,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.add(expandeableODE,  isLastStep);	  this.statesInitialized.add(stateInitialized,    isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
202	[BUG]  [BUGGY]  this.statesInitialized.add(expandableODE,  isLastStep);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized.add(expandableODE,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized.add(expandableODE,  isLastStep);	  this.statesInitialized.add(stateInitialized,    isLastStep);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
203	[BUG]  [BUGGY]  this.eventsStates.remove(expable);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(expable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(expable);	  this.eventsStates.add(expable);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
204	[BUG]  [BUGGY]  this.expandableODE.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
205	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized  ==  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.statesInitialized  ==  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.statesInitialized  ==  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
206	[BUG]  [BUGGY]  this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(stateInitialized)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
207	[BUG]  [BUGGY]  this.eventsStates.put(null,  stateInitialized  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(null,  stateInitialized  +  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(null,  stateInitialized  +  1);	  this.eventsStates.put(null,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
208	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.expandableODE  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.expandableODE  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.expandableODE  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	9	None	add
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	9	1	add
210	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	9	1	add
211	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	13	1	add
213	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	13	1	add
214	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
215	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  false;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
216	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
217	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear()  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear()	  	non-compiled	[CE]  ';'  expected	29	None	add
218	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.cle  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.cle  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.cle	  	non-compiled	[CE]  not  a  statement	29	None	add
219	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
220	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	7	1	add
222	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	7	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	7	1	add
224	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        this.statesInitialized    =    stateInitialized;    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	7	1	add
225	[BUG]  [BUGGY]  this.eventsStates.add(new  Integer(expableODE));  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(new  Integer(expableODE));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(new  Integer(expableODE));	  this.eventsStates.add(new    Integer(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
226	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  System.arraycopy(this.events,  0,  this.eventsStates,  stateInitialized);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  System.arraycopy(this.events,  0,  this.eventsStates,  stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  System.arraycopy(this.events,  0,  this.eventsStates,  stateInitialized);  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
227	[BUG]  [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  stateInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  stateInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  else  {  stateInitialized  =  stateInitialized;  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
228	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isResetOccurred)  {  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	11	1	add
230	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	11	1	add
231	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  true;  }  [CE]  cannot  find  symbol  hasLastStep  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  hasLastStep  =  true;  }	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	11	None	add
232	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  if(isFirstStep)  {  this.eventsStates.clear();  }  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  if(isLastStep)  {  this.eventsStates.clear();  }  this.eventsStates.clear();  this.eventsStates.clear();  if(isFirstStep)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    this.eventsStates.clear();  this.eventsStates.clear();  if(isFirstStep)  {  this.eventsStates.clear();  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	76	None	add
233	[BUG]  [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
234	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
235	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
236	[BUG]  [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
237	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  expandableODE;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  expandableODE;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  expandableODE;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    else    {    expandableODE    =    new    ExpandableStatefulODE    <    Integer>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
238	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(expansionableODE  ==  null)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(expansionableODE  ==  null)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  stateInitialized;  if(expansionableODE  ==  null)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    else    {    expandableODE    =    new    ExpandableStatefulODE    <    Integer>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
239	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandeableODE));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expandeableODE));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expandeableODE));	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
240	[BUG]  [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
241	[BUG]  [BUGGY]  this.expandableODE.clear();  if(this.statesInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  if(this.statesInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  if(this.statesInitialized!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
242	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized,  expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  stateInitialized.evaluate(this.statesInitialized,  expandableODE);	  this.expandableODE    =    stateInitialized.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
243	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
244	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  initState();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  initState();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  initState();  }	          this.statesInitialized    =    stateInitialized;    this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
245	[BUG]  [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
246	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.equals(this.expandable);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expansionable.equals(this.expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expansionable.equals(this.expandable);	  this.expandableODE    =    this.expandableODE.equals(expandable);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
247	[BUG]  [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  setStatesInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  setStatesInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  else  {  setStatesInitialized(true);  }	          this.statesInitialized    =    stateInitialized;    this.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
248	[BUG]  [BUGGY]  this.eventsStates.add(null,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(null,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(null,  stateInitialized);	  this.eventsStates.add(null);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
249	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  else  {  this	  	non-compiled	[CE]  not  a  statement	31	None	add
250	[BUG]  [BUGGY]  this.eventsStates.remove(expansion);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(expansion);	  this.eventsStates.add(expansion);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
251	[BUG]  [BUGGY]  this.expandableODE  =  this.expandable.equals(this.expandableODE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  this.expandable.equals(this.expandableODE);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  this.expandable.equals(this.expandableODE);	  this.expandableODE    =    expandable.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
252	[BUG]  [BUGGY]  this.eventsStates.add(expandeableODE);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(expandeableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(expandeableODE);	  this.eventsStates.add(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
253	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    false;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
254	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates.clear();  Arrays.sort(this.eventsStates);  this.eventsStates.clear();  }	          this.eventsStates.clear();    Arrays.sort(this.eventsStates);    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
255	[BUG]  [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.clear()	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
256	[BUG]  [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.cle	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
257	[BUG]  [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations.	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
258	[BUG]  [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.expandeableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  ExpandableStatefulODE  equations	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    ExpandableStatefulODE    equations.clear();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
259	[BUG]  [BUGGY]  this.expandableODE  =  expandedable.evaluate(this,  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandedable.evaluate(this,  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandedable.evaluate(this,  stateInitialized);	  this.expandableODE    =    stateInitialized.evaluate(this,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
260	[BUG]  [BUGGY]  if(expansionableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(expansionableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(expansionableODE!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    expandableODE    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
261	[BUG]  [BUGGY]  if(this.expansions!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.expansions!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.expansions!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  expandableODE  =  stateInitialized;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    expandableODE    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	11	1	add
263	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  else  {  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep)  {  this.statesInitialized  =  isLastStep;  }  else  {  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	11	1	add
264	[BUG]  [BUGGY]  this.eventsStates.remove(expandable);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(expandable);	  this.eventsStates.add(expandable);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
265	[BUG]  [BUGGY]  this.stepHandlers.clear();  if(this.stepSize!=  null)  {  for(int  i  =  0;  i  <  this.stepHandlers.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.stepHandlers.clear();  if(this.stepSize!=  null)  {  for(int  i  =  0;  i  <  this.stepHandlers.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.stepHandlers.clear();  if(this.stepSize!=  null)  {  for(int  i  =  0;  i  <  this.stepHandlers.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
266	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  set  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  set  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  set	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  not  a  statement	34	None	replace
267	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  setStateInitialized(true);  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    setStateInitialized(true);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
268	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates.clear();  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
269	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(isLastStep)  {  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(isLastStep)  {  this.eventsStates.clear();  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
270	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  expandableODE  =  new  ExpandableStatefulODE  <  Integer>();  }	          this.statesInitialized    =    stateInitialized;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    else    {    expandableODE    =    new    ExpandableStatefulODE    <    Integer>();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
271	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
272	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        this.eventsStates.clear();    this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	27	1	add
273	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    this.resetOccurred  =  stateInitialized;  this.eventsStates.clear();	  	compilable	  [FE]  AssertionError  	27	1	add
274	[BUG]  [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        this.eventsStates.clear();    this.eventsStates.clear();  this.eventsStates.clear();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	add
275	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.eventsInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.eventsInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.eventsInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
276	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
277	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?   "null "  :  stateInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?   "null "  :  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?   "null "  :  stateInitialized);	  this.eventsStates.put(name,    stateInitialized?   "true   "    :    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
278	[BUG]  [BUGGY]  this.expandableODE  =  expandedable.equals(this.expandableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandedable.equals(this.expandableODE);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandedable.equals(this.expandableODE);	  this.expandableODE    =    stateInitialized.equals(this.expandableODE);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
279	[BUG]  [BUGGY]  this.eventsStates.clear();  if(isLastStep!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(isLastStep!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(isLastStep!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
280	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.expanableODE!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.expanableODE!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.expanableODE!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
281	[BUG]  [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.expandeableODE  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  expandeableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.statesInitialized    =    stateInitialized;    if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  this.expandeableODE  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.statesInitialized        =        stateInitialized;        if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    this.expandeableODE  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  expandeableODE	9	None	add
282	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
283	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  isLastStep  =  true;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    else    {    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
284	[BUG]  [BUGGY]  this.eventsStates.clear();  if(this.expanableODE  ==  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(this.expanableODE  ==  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(this.expanableODE  ==  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(expanableODE    ==    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
285	[BUG]  [BUGGY]  this.expandableODE  =  expandedable.evaluate(this.statesInitialized);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.expandableODE  =  expandedable.evaluate(this.statesInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.expandableODE  =  expandedable.evaluate(this.statesInitialized);	  this.expandableODE    =    isLastStep.evaluate(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
286	[BUG]  [BUGGY]  this.eventsStates.add(new  Integer(stateInitialized),  stateInitialized);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.add(new  Integer(stateInitialized),  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.add(new  Integer(stateInitialized),  stateInitialized);	  this.eventsStates.add(new    Integer(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
287	[BUG]  [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expableODE));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  new  ExpandableStatefulODE(expableODE));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  new  ExpandableStatefulODE(expableODE));	  this.eventsStates.put(name,    new    ExpandableStatefulODE(stateInitialized));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
288	[BUG]  [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  expansionableODE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  expansionableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(name,  stateInitialized?  stateInitialized  :  expansionableODE);	  this.eventsStates.put(name,    stateInitialized?    stateInitialized    :    stateStates);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
289	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
290	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
291	[BUG]  [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	if(this.statesInitialized!=  null)  {  this.eventsStates.clear();  }  else  {  for(int  i  =  0;  i  <  this.eventsStates.size();  i++)  {  continue;  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    else    {    for(int    i    =    0;    i    <    this.eventsStates.size();    i++)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
292	[BUG]  [BUGGY]  this.eventHandlers.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventHandlers.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventHandlers.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
293	[BUG]  [BUGGY]  this.eventsStates.put(null,  new  ExpandableStatefulODE(stateInitialized));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.put(null,  new  ExpandableStatefulODE(stateInitialized));  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.put(null,  new  ExpandableStatefulODE(stateInitialized));	  this.eventsStates.put(null,    stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
294	[BUG]  [BUGGY]  this.eventsStates.remove(stateInitialized  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.remove(stateInitialized  +  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.remove(stateInitialized  +  1);	  this.eventsStates.remove(stateInitialized);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
295	[BUG]  [BUGGY]  this.eventsStates.clear();  if(isInitialized)  {  this.eventsStates.clear();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.eventsStates.clear();  if(isInitialized)  {  this.eventsStates.clear();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.eventsStates.clear();  if(isInitialized)  {  this.eventsStates.clear();  }	          this.eventsStates.clear();    this.eventsStates.clear();    if(isLastStep)    {    this.eventsStates.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	add	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }	  	compilable	  [FE]  AssertionError  	29	1	add
297	[BUG]  [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]          this.eventsStates.clear();    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	                this.eventsStates.clear();        if(this.eventsStates!=    null)    {    this.eventsStates.clear();    }    if(this.eventsStates!=  null)  {  this.eventsStates.clear();  if(this.eventsStates!=  null)  {  this.eventsStates.clear();  }  }	  	compilable	  [FE]  AssertionError  	29	1	add
298	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {  this.statesInitialized  =  stateInitialized;      [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	262	262	1	replace	this.statesInitialized  =  expandableODE;  if(isLastStep)  {  this.statesInitialized  =  stateInitialized;  }	          this.statesInitialized    =    stateInitialized;    if(isLastStep)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
