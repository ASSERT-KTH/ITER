projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>stepHandlers=newHashSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(!isLastStep){super();}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85if(isLastStep){super();}else{setMaxEvaluations(-1);}
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(0,0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.statesInitialized);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(this.expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=name.equals(expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name)&&isLastStep;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(-1,type);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalStringname){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finalintstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepStart,finaldoublestepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createInteger(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expr);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.equals(name)?ExpandableStatefulODE:ExpandableStatefulODE;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.events=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.isExpandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>steps=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(0);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1,evaluations);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85HashSet<Increment>stepHandlers=Sets.newHashSet();isLastStep=false;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>stepHandlers=newTreeSet<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expandable.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepSize,finaldoublestepStart){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(finaldoublestepStart,finalintStep){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,isLastStep);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,expandable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(name,true);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.getInstance();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor();setMaxEvaluations(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85This.expandable=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=expansionable.equals(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expr=ExpandableStatefulODE.create();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this.expable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(expanable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85AssertionError.this.errors=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.createIntegrator(this.stepStart);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85publicAbstractIntegrator(finalintstepSize){
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,newIncrementor());
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.create(this.name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Collection<Incrementor>stepHandlers=newArrayList<Incrementor>();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85ArrayList<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Increment>stepHandlers=Sets.newHashSet();setMaxEvaluations(2);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Set<Incrementor>evaluations=newHashSet<Incrementor>();setMaxEvaluations(-1);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85super(name,expansionable);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85List<Increment>stepHandlers=Sets.newHashSet();isLastStep=true;
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable();
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this.expandable=ExpandableStatefulODE.expandable(name);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85this(name,null,ExpandableStatefulODE.DEFAULT);
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor("Integrator");
projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java85Incrementorevaluations=newIncrementor(this);
