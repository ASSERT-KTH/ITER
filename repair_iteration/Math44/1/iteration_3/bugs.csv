bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.expandable  =  expansionable.equals(this.expandable);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable.equals(this.expandable);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable.equals(this.expandable);	  this.expandable    =    expansionable.equals(name);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
2	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  double  stepSize)  {  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(<null>)  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  double  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepStart,  final  double  stepSize)  {	  public    AbstractIntegrator(final    int    stepStart,    final    double    stepSize)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(<null>)	28	None	replace
3	[BUG]  [BUGGY]  this(final  double  stepStart,  final  double  stepSize)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  double  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  double  stepSize)  {	  public    AbstractIntegrator(final    int    stepStart,    final    double    stepSize)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
4	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(1);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
5	[BUG]  [BUGGY]  AssertionError.this.stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;	  AssertionError.this.stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
6	[BUG]  [BUGGY]  AssertionError.this.stepHandlers  |=  Sets.newHashSet();  isLastStep  =  true;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.stepHandlers  |=  Sets.newHashSet();  isLastStep  =  true;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.stepHandlers  |=  Sets.newHashSet();  isLastStep  =  true;	  AssertionError.this.stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  AssertionError.this.stepHandlers  =  Sets.newHashSet();  isFirstStep  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.stepHandlers  =  Sets.newHashSet();  isFirstStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.stepHandlers  =  Sets.newHashSet();  isFirstStep  =  false;	  AssertionError.this.stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  1);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  int  stepSize)  {  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  int  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepStart,  final  int  stepSize)  {	  public    AbstractIntegrator(final    int    stepStart,    final    int    stepSize)    {    	non-compiled	[CE]  possible  loss  of  precision	27	None	replace
10	[BUG]  [BUGGY]  this(stepStart,  stepSize,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(stepStart,  stepSize,  null);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(stepStart,  stepSize,  null);	  public    AbstractIntegrator(final    int    stepStart,    final    int    stepSize)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  steps  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Incrementor>  steps  =  Lists.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Incrementor>  steps  =  Lists.newArrayList();	  ArrayList    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  this.expandable  =  expandable.isExpandable()  &&  isLastStep;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.isExpandable()  &&  isLastStep;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.isExpandable()  &&  isLastStep;	  this.expandable    =    expandable.isExpandable();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
13	[BUG]  [BUGGY]  this.expandable  =  expandable.isExpandable()?  null  :  expandable.isExpandable();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.isExpandable()?  null  :  expandable.isExpandable();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.isExpandable()?  null  :  expandable.isExpandable();	  this.expandable    =    expandable.isExpandable();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
14	[BUG]  [BUGGY]  this.expandable  =  expandable.getExpandable();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.getExpandable();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.getExpandable();	  this.expandable    =    expandable.isExpandable();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
15	[BUG]  [BUGGY]  List  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  List  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;	  List    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
16	[BUG]  [BUGGY]  AssertionError.this.events  =  Sets.newHashSet();  isLastStep  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.events  =  Sets.newHashSet();  isLastStep  =  true;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.events  =  Sets.newHashSet();  isLastStep  =  true;	  List    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
17	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(2);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createInteger(2);	  this.expandable    =    ExpandableStatefulODE.createInteger(1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
18	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(4);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createInteger(4);	  this.expandable    =    ExpandableStatefulODE.createInteger(1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
19	[BUG]  [BUGGY]  super(expansionable,  name);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expansionable,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansionable,  name);	  super(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
20	[BUG]  [BUGGY]  super(expansion,  name);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(expansion,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansion,  name);	  super(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
21	[BUG]  [BUGGY]  super(expansions,  name);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(expansions,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansions,  name);	  super(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
22	[BUG]  [BUGGY]  super(expandeable,  name);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  super(expandeable,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandeable,  name);	  super(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
23	[BUG]  [BUGGY]  Collection  <  Increment>  steps  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  steps  =  Lists.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  steps  =  Lists.newArrayList();	  Collection    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
24	[BUG]  [BUGGY]  Collection  <  Increment>  steps  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  steps  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  steps  =  Sets.newArrayList();	  Collection    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
25	[BUG]  [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(eventsStates);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(eventsStates);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(eventsStates);	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
26	[BUG]  [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(stepStart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(stepStart);	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
27	[BUG]  [BUGGY]  ArrayList  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;	  ArrayList    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
28	[BUG]  [BUGGY]  if(isLastStep)  {  ArrayList  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  if(isLastStep)  {  ArrayList  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  }  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	if(isLastStep)  {  ArrayList  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  }	  ArrayList    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
29	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  this.stepStart);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  this.stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  this.stepStart);	  Incrementor    evaluations    =    new    Incrementor(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  this.stepSize);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  this.stepSize);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  this.stepSize);	  Incrementor    evaluations    =    new    Incrementor(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.equals(name);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.equals(name);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.equals(name);	  this.expandable    =    name.equals(expandable);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
32	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  isLastStep);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  isLastStep);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1,    evaluations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
33	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(0,  evaluations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(0,  evaluations);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(0,  evaluations);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1,    evaluations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
34	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  0);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  0);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1,    evaluations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
35	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  true);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  true);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1,    evaluations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
36	[BUG]  [BUGGY]  List  <  Increment>  stepHandlers  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  List  <  Increment>  stepHandlers  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Increment>  stepHandlers  =  Sets.newArrayList();	  List    <    Increment>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
37	[BUG]  [BUGGY]  super(expanable,  isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expanable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expanable,  isLastStep);	  super(expanable);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
38	[BUG]  [BUGGY]  super(expanable,  expandable);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expanable,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expanable,  expandable);	  super(expanable);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
39	[BUG]  [BUGGY]  super(this.expanable);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(this.expanable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(this.expanable);	  super(expanable);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
40	[BUG]  [BUGGY]  super(expanable,  expansion);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(expanable,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expanable,  expansion);	  super(expanable);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
41	[BUG]  [BUGGY]  HashSet  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  HashSet  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	HashSet  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;	  HashSet    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
42	[BUG]  [BUGGY]  HashSet  <  Increment>  stepHandlers  =  Sets.newHashSet();  isFirstStep  =  true;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  HashSet  <  Increment>  stepHandlers  =  Sets.newHashSet();  isFirstStep  =  true;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	HashSet  <  Increment>  stepHandlers  =  Sets.newHashSet();  isFirstStep  =  true;	  HashSet    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
43	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  +  1);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
44	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isFirstStep);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isFirstStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isFirstStep);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
45	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  statesInitialized);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
46	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  isInitialized);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  isInitialized);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep,  isInitialized);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
47	[BUG]  [BUGGY]  this(final  double  stepStart,  final  intStep,  isLastStep)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  intStep,  isLastStep)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  intStep,  isLastStep)  {	  this(final    double    stepStart,    final    intStep)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
48	[BUG]  [BUGGY]  this(final  double  stepSize,  final  intStep)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepSize,  final  intStep)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepSize,  final  intStep)  {	  this(final    double    stepStart,    final    intStep)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
49	[BUG]  [BUGGY]  this(final  intStep,  final  double  stepStart)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(final  intStep,  final  double  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  intStep,  final  double  stepStart)  {	  this(final    double    stepStart,    final    intStep)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
50	[BUG]  [BUGGY]  this(final  intStep,  stepStart)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(final  intStep,  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  intStep,  stepStart)  {	  this(final    double    stepStart,    final    intStep)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
51	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(0);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(0);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
52	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Incrementor>  evaluations  =  new  LinkedHashSet  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
53	[BUG]  [BUGGY]  AssertionError.this.expandable  =  isLastStep;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.expandable  =  isLastStep;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.expandable  =  isLastStep;	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  AssertionError.this.expandable  =  expandable;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.expandable  =  expandable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.expandable  =  expandable;	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  AssertionError.this.expandable  =  true;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.expandable  =  true;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.expandable  =  true;	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  AssertionError.this.expandable  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.expandable  =  false;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.expandable  =  false;	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  AssertionError.this.errors  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.errors  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.errors  =  Sets.newHashSet();  isLastStep  =  false;	  AssertionError.this.errors    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
58	[BUG]  [BUGGY]  AssertionError.this.errors  |=  Sets.newHashSet();  isLastStep  =  true;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.errors  |=  Sets.newHashSet();  isLastStep  =  true;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.errors  |=  Sets.newHashSet();  isLastStep  =  true;	  AssertionError.this.errors    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
59	[BUG]  [BUGGY]  Error.this.errors  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Error.this.errors  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Error.this.errors  =  Sets.newHashSet();  isLastStep  =  false;	  AssertionError.this.errors    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
60	[BUG]  [BUGGY]  AssertionError.this.errors  =  Collections.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.errors  =  Collections.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.errors  =  Collections.newHashSet();  isLastStep  =  false;	  AssertionError.this.errors    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
61	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this,  expandable);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this,  expandable);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this,  expandable);	  Incrementor    evaluations    =    new    Incrementor(this);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
62	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this,  isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(this);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
63	[BUG]  [BUGGY]  this(expansionable,  null,  name);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(expansionable,  null,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expansionable,  null,  name);	  this(name,    null,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  this(name,  null,  expansionable,  isLastStep);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  expansionable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  expansionable,  isLastStep);	  this(name,    null,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  this(name,  null,  expandable,  isLastStep);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  expandable,  isLastStep);	  this(name,    null,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  this(null,  null,  expansionable,  isLastStep);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  expansionable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(null,  null,  expansionable,  isLastStep);	  this(name,    null,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
67	[BUG]  [BUGGY]  this(name,  evaluations,  new  Incrementor());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(name,  evaluations,  new  Incrementor());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  evaluations,  new  Incrementor());	  this(name,    new    Incrementor());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
68	[BUG]  [BUGGY]  this(name,  new  Incrementor(),  evaluations);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(name,  new  Incrementor(),  evaluations);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  new  Incrementor(),  evaluations);	  this(name,    new    Incrementor());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
69	[BUG]  [BUGGY]  this(name,  new  Incrementor(),  isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(name,  new  Incrementor(),  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  new  Incrementor(),  isLastStep);	  this(name,    new    Incrementor());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
70	[BUG]  [BUGGY]  this.name  =  name;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.name  =  name;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.name  =  name;	  this(name,    new    Incrementor());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
71	[BUG]  [BUGGY]  super(expable,  isLastStep);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  isLastStep);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
72	[BUG]  [BUGGY]  super(expable,  this.statesInitialized);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expable,  this.statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  this.statesInitialized);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
73	[BUG]  [BUGGY]  super(expable,  expandable);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expable,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  expandable);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
74	[BUG]  [BUGGY]  super(this.expable);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(this.expable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(this.expable);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
75	[BUG]  [BUGGY]  super(expandable,  isLastStep);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  isLastStep);	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
76	[BUG]  [BUGGY]  super(expandable,  this.statesInitialized);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  this.statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  this.statesInitialized);	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
77	[BUG]  [BUGGY]  super(expandable,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  false);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  false);	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
78	[BUG]  [BUGGY]  this(expansion,  null,  ExpandableStatefulODE.DEFAULT);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(expansion,  null,  ExpandableStatefulODE.DEFAULT);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expansion,  null,  ExpandableStatefulODE.DEFAULT);	  this(name,    null,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
79	[BUG]  [BUGGY]  this(expansions,  null,  ExpandableStatefulODE.DEFAULT);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(expansions,  null,  ExpandableStatefulODE.DEFAULT);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expansions,  null,  ExpandableStatefulODE.DEFAULT);	  this(name,    null,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
80	[BUG]  [BUGGY]  this(expanded,  null,  ExpandableStatefulODE.DEFAULT);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(expanded,  null,  ExpandableStatefulODE.DEFAULT);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expanded,  null,  ExpandableStatefulODE.DEFAULT);	  this(name,    null,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
81	[BUG]  [BUGGY]  this(name,  null,  ExpandableStatefulODE.DEFAULT,  expandable);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  ExpandableStatefulODE.DEFAULT,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  ExpandableStatefulODE.DEFAULT,  expandable);	  this(name,    null,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
82	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expandable);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  expandable);	  this.expr    =    ExpandableStatefulODE.create(name);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
83	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.create(name,  isLastStep);	  this.expr    =    ExpandableStatefulODE.create(name);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
84	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(this.name);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.create(this.name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.create(this.name);	  this.expr    =    ExpandableStatefulODE.create(name);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
85	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
86	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  true);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  true);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
87	[BUG]  [BUGGY]  This.expandable  =  ExpandableStatefulODE.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  This.expandable  =  ExpandableStatefulODE.newInstance();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	This.expandable  =  ExpandableStatefulODE.newInstance();	  This.expandable    =    ExpandableStatefulODE.create();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
88	[BUG]  [BUGGY]  ArrayList  <  Increment>  steps  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Increment>  steps  =  Lists.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Increment>  steps  =  Lists.newArrayList();	  ArrayList    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
89	[BUG]  [BUGGY]  this.events  =  new  LinkedList  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.events  =  new  LinkedList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.events  =  new  LinkedList  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
90	[BUG]  [BUGGY]  this.events  =  new  java.util.ArrayList  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.events  =  new  java.util.ArrayList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.events  =  new  java.util.ArrayList  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
91	[BUG]  [BUGGY]  this.events  =  new  HashSet  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.events  =  new  HashSet  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.events  =  new  HashSet  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
92	[BUG]  [BUGGY]  this(expansion,  null,  name);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(expansion,  null,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expansion,  null,  name);	  this(name,    null,    expandable);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
93	[BUG]  [BUGGY]  this(null,  null,  expandable,  isLastStep);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  null,  expandable,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(null,  null,  expandable,  isLastStep);	  this(name,    null,    expandable);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
94	[BUG]  [BUGGY]  List  <  Incrementor>  steps  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  List  <  Incrementor>  steps  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Incrementor>  steps  =  Sets.newArrayList();	  List    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  this.expr  =  expandable.getInstance();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  expandable.getInstance();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  expandable.getInstance();	  this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
96	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.getExpr();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.getExpr();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.getExpr();	  this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
97	[BUG]  [BUGGY]  this.expr  =  expandable.getExpr();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  expandable.getExpr();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  expandable.getExpr();	  this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
98	[BUG]  [BUGGY]  this(final  double  stepSize,  final  String  name)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepSize,  final  String  name)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepSize,  final  String  name)  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
99	[BUG]  [BUGGY]  this(final  int  stepStart,  final  String  name)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(final  int  stepStart,  final  String  name)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  int  stepStart,  final  String  name)  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
100	[BUG]  [BUGGY]  this(final  double  stepStart,  final  String  name,  boolean  isLastStep)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  String  name,  boolean  isLastStep)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  String  name,  boolean  isLastStep)  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
101	[BUG]  [BUGGY]  this(final  double  stepStart,  final  String  name,  int  stepSize)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  String  name,  int  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  String  name,  int  stepSize)  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
102	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(0,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(0,  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createInteger(0,  1);	  this.expandable    =    ExpandableStatefulODE.createInteger(0);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
103	[BUG]  [BUGGY]  this.expandable  =  name.equals(expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  name.equals(expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  name.equals(expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;	  this.expandable    =    expandable.equals(name)?    ExpandableStatefulODE    :    ExpandableStatefulODE;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
104	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.equals(expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.equals(expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.equals(expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;	  this.expandable    =    expandable.equals(name)?    ExpandableStatefulODE    :    ExpandableStatefulODE;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
105	[BUG]  [BUGGY]  this.expandable  =  isLastStep?  ExpandableStatefulODE.equals(expandable):  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  isLastStep?  ExpandableStatefulODE.equals(expandable):  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  isLastStep?  ExpandableStatefulODE.equals(expandable):  ExpandableStatefulODE;	  this.expandable    =    expandable.equals(name)?    ExpandableStatefulODE    :    ExpandableStatefulODE;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
106	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name,  expandable);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(name,  expandable);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
107	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(name.toLowerCase());  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(name.toLowerCase());	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
108	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepSize);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepSize);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepSize);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
109	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart,  this.stepSize);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart,  this.stepSize);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart,  this.stepSize);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
110	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepSize,  this.stepStart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepSize,  this.stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepSize,  this.stepStart);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
111	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart,  stepSize);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart,  stepSize);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart,  stepSize);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
112	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.expable,  expandable);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.expable,  expandable);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.expable,  expandable);	  Incrementor    evaluations    =    new    Incrementor(this.expable);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
113	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.expable,  this.stepStart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.expable,  this.stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.expable,  this.stepStart);	  Incrementor    evaluations    =    new    Incrementor(this.expable);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
114	[BUG]  [BUGGY]  List  <  Incrementor>  stepHandlers  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  List  <  Incrementor>  stepHandlers  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Incrementor>  stepHandlers  =  Sets.newArrayList();	  List    <    Incrementor>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  false);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  false);	  this.expandable    =    ExpandableStatefulODE.create(name,    true);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
116	[BUG]  [BUGGY]  this.expandable  =  isLastStep.equals(expandable)&&  expandable;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  isLastStep.equals(expandable)&&  expandable;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  isLastStep.equals(expandable)&&  expandable;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
117	[BUG]  [BUGGY]  this.expandable  =  name.equals(expandable)&&  isLastStep;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  name.equals(expandable)&&  isLastStep;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  name.equals(expandable)&&  isLastStep;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
118	[BUG]  [BUGGY]  this.expandable  =  isLastStep.equals(expanable)&&  expandable;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  isLastStep.equals(expanable)&&  expandable;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  isLastStep.equals(expanable)&&  expandable;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
119	[BUG]  [BUGGY]  this.expandable  =  isLastStep;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  isLastStep;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  isLastStep;	  if(isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
120	[BUG]  [BUGGY]  AssertionError.this.events  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.events  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.events  =  Sets.newHashSet();  isLastStep  =  false;	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
121	[BUG]  [BUGGY]  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	isLastStep  =  false;	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
122	[BUG]  [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();	  Set    <    Incrementor>    stepHandlers    =    new    TreeSet    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
123	[BUG]  [BUGGY]  List  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  List  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();	  Set    <    Incrementor>    stepHandlers    =    new    TreeSet    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
124	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type,  isLastStep);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
125	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1,  type);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1,  type);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
126	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type,  0);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type,  0);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
127	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepSize,  final  double  stepStart)  {  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(<null>)  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepSize,  final  double  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepSize,  final  double  stepStart)  {	  public    AbstractIntegrator(final    double    stepStart)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(<null>)	55	None	replace
128	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator ",  name);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator ",  name);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor( "Integrator ",  name);	  Incrementor    evaluations    =    new    Incrementor(   "Integrator   ");    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
129	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator, ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator, ");  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor( "Integrator, ");	  Incrementor    evaluations    =    new    Incrementor(   "Integrator   ");    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
130	[BUG]  [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
131	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor();  setMaxEvaluations(3);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
132	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(name,  isLastStep);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(name,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createInteger(name,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.createInteger(name);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
133	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(name,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(name,  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createInteger(name,  1);	  this.expandable    =    ExpandableStatefulODE.createInteger(name);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
134	[BUG]  [BUGGY]  this.expandable  =  expandable.expandable();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.expandable();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.expandable();	  this.expandable    =    ExpandableStatefulODE.expandable();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
135	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createExpandable();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createExpandable();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createExpandable();	  this.expandable    =    ExpandableStatefulODE.expandable();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
136	[BUG]  [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(eventsStates);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(eventsStates);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(eventsStates);	  Collection    <    Incrementor>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
137	[BUG]  [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(stepStart);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(stepStart);	  Collection    <    Incrementor>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
138	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
139	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
140	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.name);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.name);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.name);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
141	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE;	  this.expandable    =    expandable;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
142	[BUG]  [BUGGY]  this.expandable  =  expansionable;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable;	  this.expandable    =    expandable;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
143	[BUG]  [BUGGY]  super(expr,  isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expr,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expr,  isLastStep);	  super(expr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
144	[BUG]  [BUGGY]  super(expr,  expandable);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expr,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expr,  expandable);	  super(expr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
145	[BUG]  [BUGGY]  super(expr,  expansion);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(expr,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expr,  expansion);	  super(expr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
146	[BUG]  [BUGGY]  super(expr,  this.statesInitialized);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(expr,  this.statesInitialized);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expr,  this.statesInitialized);	  super(expr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
147	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(name,  isLastStep);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(name,  isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.expandable(name,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.expandable(name);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
148	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(name,  expandable);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(name,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.expandable(name,  expandable);	  this.expandable    =    ExpandableStatefulODE.expandable(name);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
149	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(this.name);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(this.name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.expandable(this.name);	  this.expandable    =    ExpandableStatefulODE.expandable(name);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
150	[BUG]  [BUGGY]  this.expandable  =  expandable.equals(this.expandableStatefulODE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.equals(this.expandableStatefulODE);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.equals(this.expandableStatefulODE);	  this.expandable    =    expandable.equals(this.expandable);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
151	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(0,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(0,  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(0,  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
152	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
153	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(this.name,  name);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(this.name,  name);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(this.name,  name);	  this.expandable    =    ExpandableStatefulODE.create(this.name);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
154	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(this.name,  this.stepStart);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(this.name,  this.stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(this.name,  this.stepStart);	  this.expandable    =    ExpandableStatefulODE.create(this.name);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
155	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepSize)  {  [CE]  no  suitable  constructor  found  for  AbstractIntegrator(<null>)  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepSize)  {	  public    AbstractIntegrator(final    int    stepSize)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  AbstractIntegrator(<null>)	74	None	replace
156	[BUG]  [BUGGY]  this(final  double  stepSize,  final  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepSize,  final  Integer.MAX_VALUE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepSize,  final  Integer.MAX_VALUE);	  public    AbstractIntegrator(final    int    stepSize)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
157	[BUG]  [BUGGY]  this(final  double  stepSize,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepSize,  true);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepSize,  true);	  public    AbstractIntegrator(final    int    stepSize)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
158	[BUG]  [BUGGY]  this.expandable  =  expansionable.create();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable.create();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable.create();	  this.expandable    =    expandable.create();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
159	[BUG]  [BUGGY]  public  AbstractIntegrator(final  int  stepSize,  final  int  stepStart)  {  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  int  stepSize,  final  int  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  int  stepSize,  final  int  stepStart)  {	  public    AbstractIntegrator(final    int    stepSize,    final    double    stepStart)    {    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
160	[BUG]  [BUGGY]  this(final  int  stepSize,  final  int  stepStart)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  int  stepSize,  final  int  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  int  stepSize,  final  int  stepStart)  {	  public    AbstractIntegrator(final    int    stepSize,    final    double    stepStart)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
161	[BUG]  [BUGGY]  super(expansionable);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansionable);	  super(name,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
162	[BUG]  [BUGGY]  super(expansionable.getName(),  name);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expansionable.getName(),  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansionable.getName(),  name);	  super(name,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
163	[BUG]  [BUGGY]  super(expansionable.name,  name);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expansionable.name,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansionable.name,  name);	  super(name,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
164	[BUG]  [BUGGY]  final  Collection  <  Incrementor>  stepHandlers  =  new  ArrayList  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  final  Collection  <  Incrementor>  stepHandlers  =  new  ArrayList  <  Incrementor>();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	final  Collection  <  Incrementor>  stepHandlers  =  new  ArrayList  <  Incrementor>();	  Collection    <    Incrementor>    stepHandlers    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
165	[BUG]  [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  new  LinkedList  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  new  LinkedList  <  Incrementor>();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  stepHandlers  =  new  LinkedList  <  Incrementor>();	  Collection    <    Incrementor>    stepHandlers    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
166	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(1,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(1,  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(1,  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(0,    0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
167	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  String  stepHandlers)  {  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  String  stepHandlers)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepStart,  final  String  stepHandlers)  {	  public    AbstractIntegrator(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  incompatible  types	25	None	replace
168	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  String  stepSize)  {  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  String  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepStart,  final  String  stepSize)  {	  public    AbstractIntegrator(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  incompatible  types	25	None	replace
169	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  int  stepSize,  final  String  name)  {  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  int  stepSize,  final  String  name)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepStart,  final  int  stepSize,  final  String  name)  {	  public    AbstractIntegrator(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
170	[BUG]  [BUGGY]  this(expansion,  null,  ExpandableStatefulODE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(expansion,  null,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expansion,  null,  ExpandableStatefulODE);	  this(name,    null,    ExpandableStatefulODE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
171	[BUG]  [BUGGY]  this(name,  null,  ExpandableStatefulODE,  expandable);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  ExpandableStatefulODE,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  ExpandableStatefulODE,  expandable);	  this(name,    null,    ExpandableStatefulODE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
172	[BUG]  [BUGGY]  this(expansions,  null,  ExpandableStatefulODE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(expansions,  null,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expansions,  null,  ExpandableStatefulODE);	  this(name,    null,    ExpandableStatefulODE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
173	[BUG]  [BUGGY]  this(expandeable,  null,  ExpandableStatefulODE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(expandeable,  null,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expandeable,  null,  ExpandableStatefulODE);	  this(name,    null,    ExpandableStatefulODE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
174	[BUG]  [BUGGY]  List  <  Increment>  steps  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  List  <  Increment>  steps  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Increment>  steps  =  Sets.newArrayList();	  List    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
175	[BUG]  [BUGGY]  this.expr  =  expandable.create();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  expandable.create();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  expandable.create();	  this.expr    =    ExpandableStatefulODE.create();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
176	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulOccurred.create();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulOccurred.create();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulOccurred.create();	  this.expr    =    ExpandableStatefulODE.create();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
177	[BUG]  [BUGGY]  Collection  <  Incrementor>  steps  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  steps  =  Lists.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  steps  =  Lists.newArrayList();	  Collection    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
178	[BUG]  [BUGGY]  Collection  <  Incrementor>  steps  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  steps  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  steps  =  Sets.newArrayList();	  Collection    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
179	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(name,  expandable);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(name);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
180	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)this).expandable  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  ((  ExpandableStatefulODE)this).expandable  =  true;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	((  ExpandableStatefulODE)this).expandable  =  true;	  if(isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
181	[BUG]  [BUGGY]  this(final  double  stepStart,  final  intStep,  expandable)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  intStep,  expandable)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  intStep,  expandable)  {	  this(final    double    stepStart,    final    intStep)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
182	[BUG]  [BUGGY]  this(final  double  stepStart,  final  intStep,  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  intStep,  0)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  intStep,  0)  {	  this(final    double    stepStart,    final    intStep)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
183	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(3);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(3);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(3);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
184	[BUG]  [BUGGY]  This.events  =  new  ArrayList  <  Incrementor>();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  This.events  =  new  ArrayList  <  Incrementor>();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	This.events  =  new  ArrayList  <  Incrementor>();	  this.events    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
185	[BUG]  [BUGGY]  &&!isLastStep)  {  super();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  &&!isLastStep)  {  super();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	&&!isLastStep)  {  super();  }	  if(!isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
186	[BUG]  [BUGGY]  AssertionError.checkState(!isLastStep);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError.checkState(!isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.checkState(!isLastStep);	  if(!isLastStep)    {    super();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
187	[BUG]  [BUGGY]  &&  isLastStep)  {  super();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  &&  isLastStep)  {  super();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	&&  isLastStep)  {  super();  }	  if(!isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
188	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  -  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  isLastStep  -  1);	  this.expandable    =    ExpandableStatefulODE.create(name,    isLastStep);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
189	[BUG]  [BUGGY]  super(expable,  name);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(expable,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  name);	  super(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
190	[BUG]  [BUGGY]  this(expable,  null,  name);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(expable,  null,  name);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expable,  null,  name);	  this(name,    null,    expandable);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
191	[BUG]  [BUGGY]  AssertionError  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError  evaluations  =  new  Incrementor();  setMaxEvaluations(-1,  type);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
192	[BUG]  [BUGGY]  super(expandable,  expandable);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  expandable);	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
193	[BUG]  [BUGGY]  super(expandable,  stateStates);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  stateStates);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  stateStates);	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
194	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.expandable(null);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.expandable(null);	  this.expandable    =    ExpandableStatefulODE.expandable();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
195	[BUG]  [BUGGY]  this(name,  null,  expansionable,  expandable);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  expansionable,  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  expansionable,  expandable);	  this(name,    null,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
196	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable  -  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expandable  -  1);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
197	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(this.name,  isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(this.name,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(this.name,  isLastStep);	  this.expandable    =    ExpandableStatefulODE.create(this.name);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
198	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator: ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator: ");  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor( "Integrator: ");	  Incrementor    evaluations    =    new    Incrementor(   "Integrator   ");    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
199	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator());  [CE]  unclosed  string  literal  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor( "Integrator());  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor( "Integrator());	  Incrementor    evaluations    =    new    Incrementor(   "Integrator   ");    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
200	[BUG]  [BUGGY]  public  AbstractIntegrator(final  char  stepSize,  final  double  stepStart)  {  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  char  stepSize,  final  double  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  char  stepSize,  final  double  stepStart)  {	  public    AbstractIntegrator(final    int    stepSize,    final    double    stepStart)    {    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
201	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.name);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.name);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.name);	  Incrementor    evaluations    =    new    Incrementor(name);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
202	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  isLastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.statesInitialized,  isLastStep);	  Incrementor    evaluations    =    new    Incrementor(this.statesInitialized);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
203	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(2);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
204	[BUG]  [BUGGY]  AssertionError  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError  evaluations  =  new  Incrementor();  setMaxEvaluations(2);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError  evaluations  =  new  Incrementor();  setMaxEvaluations(2);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
205	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(0,  0);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(0,  0);	  Incrementor    evaluations    =    new    Incrementor(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
206	[BUG]  [BUGGY]  this(name,  new  Incrementor(),  evaluates);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(name,  new  Incrementor(),  evaluates);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  new  Incrementor(),  evaluates);	  this(name,    new    Incrementor());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
207	[BUG]  [BUGGY]  this(null,  stepStart,  name)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  stepStart,  name)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(null,  stepStart,  name)  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
208	[BUG]  [BUGGY]  this(final  double  stepStart,  String.valueOf(stepSize))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  String.valueOf(stepSize))  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  String.valueOf(stepSize))  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
209	[BUG]  [BUGGY]  public  AbstractIntegrator(final  char  stepStart,  final  double  stepSize)  {  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  char  stepStart,  final  double  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  char  stepStart,  final  double  stepSize)  {	  public    AbstractIntegrator(final    int    stepStart,    final    double    stepSize)    {    	non-compiled	[CE]  possible  loss  of  precision	28	None	replace
210	[BUG]  [BUGGY]  this.expandable  =  expandable.equals(this.expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.equals(this.expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.equals(this.expandable)?  ExpandableStatefulODE  :  ExpandableStatefulODE;	  this.expandable    =    expandable.equals(name)?    ExpandableStatefulODE    :    ExpandableStatefulODE;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
211	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  stepStart);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  stepStart);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1,  evaluations,  stepStart);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1,    evaluations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
212	[BUG]  [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  stepHandlers  =  Sets.newArrayList();	  Collection    <    Incrementor>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
213	[BUG]  [BUGGY]  AssertionError  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  false;	  HashSet    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
214	[BUG]  [BUGGY]  this(expandeable,  null,  ExpandableStatefulODE.DEFAULT);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(expandeable,  null,  ExpandableStatefulODE.DEFAULT);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(expandeable,  null,  ExpandableStatefulODE.DEFAULT);	  this(name,    null,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
215	[BUG]  [BUGGY]  List  <  Increment>  steps  =  Sets.newLinkedList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  List  <  Increment>  steps  =  Sets.newLinkedList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Increment>  steps  =  Sets.newLinkedList();	  List    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
216	[BUG]  [BUGGY]  this.expandable  =  expansionable.equals(name)&&  isLastStep;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable.equals(name)&&  isLastStep;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable.equals(name)&&  isLastStep;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
217	[BUG]  [BUGGY]  this.expandable  =  expandable.equals(name)&&  isFirstStep;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.equals(name)&&  isFirstStep;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.equals(name)&&  isFirstStep;	  this.expandable    =    expandable.equals(name)&&    isLastStep;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
218	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Incrementor>  stepHandlers  =  new  TreeSet  <  Incrementor>();	  Set    <    Incrementor>    stepHandlers    =    new    TreeSet    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
219	[BUG]  [BUGGY]  super(expanable,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expanable,  null);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expanable,  null);	  super(expanable);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
220	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.expable,  this.lastStep);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this.expable,  this.lastStep);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this.expable,  this.lastStep);	  Incrementor    evaluations    =    new    Incrementor(this.expable);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
221	[BUG]  [BUGGY]  this(null,  expandable,  ExpandableStatefulODE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(null,  expandable,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(null,  expandable,  ExpandableStatefulODE);	  this(name,    null,    ExpandableStatefulODE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
222	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Incrementor>  evaluations  =  new  ArrayList  <  Incrementor>();  setMaxEvaluations(-1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
223	[BUG]  [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newArrayList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  stepHandlers  =  Sets.newArrayList();	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
224	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.getExpandable();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.getExpandable();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.getExpandable();	  this.expr    =    ExpandableStatefulODE.getInstance();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
225	[BUG]  [BUGGY]  public  AbstractIntegrator(final  int  stepSize,  final  String  name)  {  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  int  stepSize,  final  String  name)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  int  stepSize,  final  String  name)  {	  public    AbstractIntegrator(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
226	[BUG]  [BUGGY]  List  <  Incrementor>  steps  =  Sets.newLinkedList();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  List  <  Incrementor>  steps  =  Sets.newLinkedList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	List  <  Incrementor>  steps  =  Sets.newLinkedList();	  List    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
227	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(name,  expandable);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createInteger(name,  expandable);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createInteger(name,  expandable);	  this.expandable    =    ExpandableStatefulODE.createInteger(name);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
228	[BUG]  [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this,  ExpandableStatefulODE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Incrementor  evaluations  =  new  Incrementor(this,  ExpandableStatefulODE);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Incrementor  evaluations  =  new  Incrementor(this,  ExpandableStatefulODE);	  Incrementor    evaluations    =    new    Incrementor(this);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
229	[BUG]  [BUGGY]  ArrayList  <  Incrementor>  steps  =  Sets.newLinkedList();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Incrementor>  steps  =  Sets.newLinkedList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Incrementor>  steps  =  Sets.newLinkedList();	  ArrayList    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
230	[BUG]  [BUGGY]  AssertionError.checkState(isLastStep);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  AssertionError.checkState(isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.checkState(isLastStep);	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
231	[BUG]  [BUGGY]  ArrayList  <  Increment>  steps  =  Sets.newLinkedList();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  ArrayList  <  Increment>  steps  =  Sets.newLinkedList();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	ArrayList  <  Increment>  steps  =  Sets.newLinkedList();	  ArrayList    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
232	[BUG]  [BUGGY]  AssertionError.this.stepHandlers  =  Collections.newHashSet();  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  AssertionError.this.stepHandlers  =  Collections.newHashSet();  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.this.stepHandlers  =  Collections.newHashSet();  isLastStep  =  false;	  AssertionError.this.stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
233	[BUG]  [BUGGY]  super(expable,  this.isLastStep);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expable,  this.isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  this.isLastStep);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
234	[BUG]  [BUGGY]  super(expable,  evaluates);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expable,  evaluates);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  evaluates);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
235	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(this.expr);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.create(this.expr);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.create(this.expr);	  this.expr    =    ExpandableStatefulODE.create(name);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
236	[BUG]  [BUGGY]  AssertionError.checkNotNull(stepHandlers);  isLastStep  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.checkNotNull(stepHandlers);  isLastStep  =  false;  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	AssertionError.checkNotNull(stepHandlers);  isLastStep  =  false;	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    false;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
237	[BUG]  [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-1);	  ArrayList    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
238	[BUG]  [BUGGY]  super(expr.getIntValue());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expr.getIntValue());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expr.getIntValue());	  super(expr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  -  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  -  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
240	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  -  stepSize);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  -  stepSize);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  -  stepSize);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
241	[BUG]  [BUGGY]  this.expandable  =  expansionable.isExpandable();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable.isExpandable();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable.isExpandable();	  this.expandable    =    expandable.isExpandable();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
242	[BUG]  [BUGGY]  this.expandable  =  expansionable.equals(name)||  expansionable.equals(name);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable.equals(name)||  expansionable.equals(name);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable.equals(name)||  expansionable.equals(name);	  this.expandable    =    expansionable.equals(name);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
243	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  String  name,  int  stepSize)  {  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepStart,  final  String  name,  int  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepStart,  final  String  name,  int  stepSize)  {	  public    AbstractIntegrator(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
244	[BUG]  [BUGGY]  super(expanable,  expandable.isLastStep);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expanable,  expandable.isLastStep);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expanable,  expandable.isLastStep);	  super(expanable);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
245	[BUG]  [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-2,  evaluations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-2,  evaluations);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Increment>  stepHandlers  =  Sets.newHashSet();  setMaxEvaluations(-2,  evaluations);	  Set    <    Increment>    stepHandlers    =    Sets.newHashSet();    setMaxEvaluations(-1,    evaluations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
246	[BUG]  [BUGGY]  this(final  double  stepStart,  final  String  name,  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(final  double  stepStart,  final  String  name,  Integer.MAX_VALUE)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(final  double  stepStart,  final  String  name,  Integer.MAX_VALUE)  {	  this(final    double    stepStart,    final    String    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
247	[BUG]  [BUGGY]  Set  <  EventState>  stepHandlers  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  Set  <  EventState>  stepHandlers  =  Sets.newHashSet();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  EventState>  stepHandlers  =  Sets.newHashSet();	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
248	[BUG]  [BUGGY]  Set  <  String>  stepHandlers  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  Set  <  String>  stepHandlers  =  Sets.newHashSet();  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  String>  stepHandlers  =  Sets.newHashSet();	  if(isLastStep)    {    super();    }    else    {    setMaxEvaluations(-1);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
249	[BUG]  [BUGGY]  if(isLastStep  &&  isInitialized)  {  super();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  if(isLastStep  &&  isInitialized)  {  super();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	if(isLastStep  &&  isInitialized)  {  super();  }	  if(isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
250	[BUG]  [BUGGY]  if(isLastStep  ||  isInitialized)  {  super();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  if(isLastStep  ||  isInitialized)  {  super();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	if(isLastStep  ||  isInitialized)  {  super();  }	  if(isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
251	[BUG]  [BUGGY]  this.expandable  =  expansionable.equals(name)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expansionable.equals(name)?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expansionable.equals(name)?  ExpandableStatefulODE  :  ExpandableStatefulODE;	  this.expandable    =    expandable.equals(name)?    ExpandableStatefulODE    :    ExpandableStatefulODE;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
252	[BUG]  [BUGGY]  super(expable,  expansion);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expable,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  expansion);	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
253	[BUG]  [BUGGY]  super(expable,  expandable.isLastStep());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expable,  expandable.isLastStep());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expable,  expandable.isLastStep());	  super(expable);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
254	[BUG]  [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expr  =  ExpandableStatefulODE.create(name  -  1);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expr  =  ExpandableStatefulODE.create(name  -  1);	  this.expr    =    ExpandableStatefulODE.create(name);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
255	[BUG]  [BUGGY]  this(name,  null,  ExpandableStatefulODE.DEFAULT,  expansionable);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  ExpandableStatefulODE.DEFAULT,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  ExpandableStatefulODE.DEFAULT,  expansionable);	  this(name,    null,    ExpandableStatefulODE.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
256	[BUG]  [BUGGY]  this.expandable  =  expandable  <  =  1?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable  <  =  1?  ExpandableStatefulODE  :  ExpandableStatefulODE;  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable  <  =  1?  ExpandableStatefulODE  :  ExpandableStatefulODE;	  this.expandable    =    expandable;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
257	[BUG]  [BUGGY]  setMaxEvaluations(-1,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  setMaxEvaluations(-1,  type);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	setMaxEvaluations(-1,  type);	  Incrementor    evaluations    =    new    Incrementor();    setMaxEvaluations(-1,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
258	[BUG]  [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(events);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(events);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  stepHandlers  =  Sets.newHashSet(events);	  Collection    <    Incrementor>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
259	[BUG]  [BUGGY]  this(name,  new  Incrementor(),  expandable);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(name,  new  Incrementor(),  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  new  Incrementor(),  expandable);	  this(name,    new    Incrementor());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
260	[BUG]  [BUGGY]  public  AbstractIntegrator(final  int  stepStart,  final  long  stepSize)  {  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  int  stepStart,  final  long  stepSize)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  int  stepStart,  final  long  stepSize)  {	  public    AbstractIntegrator(final    int    stepStart,    final    double    stepSize)    {    	non-compiled	[CE]  possible  loss  of  precision	28	None	replace
261	[BUG]  [BUGGY]  super(expr,  expansionable);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expr,  expansionable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expr,  expansionable);	  super(expr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
262	[BUG]  [BUGGY]  if(!isLastStep  &&  isInitialized)  {  super();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  if(!isLastStep  &&  isInitialized)  {  super();  }  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	if(!isLastStep  &&  isInitialized)  {  super();  }	  if(!isLastStep)    {    super();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
263	[BUG]  [BUGGY]  public  AbstractIntegrator(final  double  stepSize,  final  int  stepStart)  {  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  AbstractIntegrator(final  double  stepSize,  final  int  stepStart)  {  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	public  AbstractIntegrator(final  double  stepSize,  final  int  stepStart)  {	  public    AbstractIntegrator(final    double    stepStart)    {    	non-compiled	[CE]  possible  loss  of  precision	55	None	replace
264	[BUG]  [BUGGY]  Collection  <  Incrementor>  steps  =  Sets.newHashMap();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Incrementor>  steps  =  Sets.newHashMap();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Incrementor>  steps  =  Sets.newHashMap();	  Collection    <    Incrementor>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
265	[BUG]  [BUGGY]  This.expandable  =  expandable.create();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  This.expandable  =  expandable.create();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	This.expandable  =  expandable.create();	  This.expandable    =    ExpandableStatefulODE.create();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
266	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  null);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.create(name,  expandable,  null);	  this.expandable    =    ExpandableStatefulODE.create(name,    expandable);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
267	[BUG]  [BUGGY]  this(name,  null,  expandable,  0);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  expandable,  0);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  expandable,  0);	  this(name,    null,    expandable);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
268	[BUG]  [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1,  -1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1,  -1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Set  <  Incrementor>  evaluations  =  new  HashSet  <  Incrementor>();  setMaxEvaluations(-1,  -1);	  Set    <    Incrementor>    evaluations    =    new    HashSet    <    Incrementor>();    setMaxEvaluations(-1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
269	[BUG]  [BUGGY]  this.expandable  =  expandable.reset();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  expandable.reset();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  expandable.reset();	  this.expandable    =    expandable.create();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
270	[BUG]  [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  +  1);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this.expandable  =  ExpandableStatefulODE.createIntegrator(this.stepStart  +  1);	  this.expandable    =    ExpandableStatefulODE.createIntegrator(this.stepStart);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
271	[BUG]  [BUGGY]  this(name,  null,  expandable,  ExpandableStatefulODE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(name,  null,  expandable,  ExpandableStatefulODE);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	this(name,  null,  expandable,  ExpandableStatefulODE);	  this(name,    null,    ExpandableStatefulODE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
272	[BUG]  [BUGGY]  super(expandable,  expandable.isLastStep());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  expandable.isLastStep());  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  expandable.isLastStep());	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
273	[BUG]  [BUGGY]  super(expandable,  expansion);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(expandable,  expansion);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expandable,  expansion);	  super(expandable);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
274	[BUG]  [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(events);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(events);  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  stepHandlers  =  Sets.newHashSet(events);	  Collection    <    Increment>    stepHandlers    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
275	[BUG]  [BUGGY]  if(isLastStep)  {  List  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  if(isLastStep)  {  List  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  }  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	if(isLastStep)  {  List  <  Increment>  stepHandlers  =  Sets.newHashSet();  isLastStep  =  true;  }	  List    <    Increment>    stepHandlers    =    Sets.newHashSet();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
276	[BUG]  [BUGGY]  super(expansionable.getName(),  expandable);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(expansionable.getName(),  expandable);  [BUGGY]      this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	super(expansionable.getName(),  expandable);	  super(name,    expansionable);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
277	[BUG]  [BUGGY]  Collection  <  Increment>  steps  =  Sets.newHashMap();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Collection  <  Increment>  steps  =  Sets.newHashMap();  [BUGGY]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	85	85	1	replace	Collection  <  Increment>  steps  =  Sets.newHashMap();	  Collection    <    Increment>    steps    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
