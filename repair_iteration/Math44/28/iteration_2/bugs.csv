bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
5	[BUG]  [BUGGY]  assessors.incrementCount();  [CE]  cannot  find  symbol  assessors  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  assessors.incrementCount();  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	assessors.incrementCount();	  evaluates.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  assessors	9	None	replace
6	[BUG]  [BUGGY]  evaluates.incrementCount(t);  [CE]  cannot  find  symbol  evaluates  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluates.incrementCount(t);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.incrementCount(t);	  evaluates.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluates	9	None	replace
7	[BUG]  [BUGGY]  evaluations.remove(y,  t);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.remove(y,  t);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(y,  t);	  evaluations.remove(y);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
8	[BUG]  [BUGGY]  evaluations.remove(t);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.remove(t);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(t);	  evaluations.remove(y);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
9	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
10	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
11	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandableODE.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  expandableODE.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  expandableODE.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
12	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot);  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  luateDerivatives(t,  y,  yDot);  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives(t,  y,  yDot);	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
13	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  expandable);	  evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
14	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  expansionable);	  evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionable	6	None	replace
15	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansion);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot,  expansion);	  evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansion	6	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  assessDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
20	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
21	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
22	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.size();  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
23	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluates.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  evaluates.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluates.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
24	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  0));  [CE]  no  suitable  constructor  found  for  Integer(double[],int)  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(y,  0));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  0));	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],int)	8	None	replace
25	[BUG]  [BUGGY]  evaluations.add(new  Integer(t,  y));  [CE]  no  suitable  constructor  found  for  Integer(double,double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(t,  y));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(t,  y));	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double[])	8	None	replace
26	[BUG]  [BUGGY]  evaluations.add(new  Integer(y),  t);  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(y),  t);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y),  t);	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	8	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y,  i);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expansionable.computeDerivatives(t,  y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  extendable.computeDerivatives(t,  y,  i);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
30	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	13	None	replace
31	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	13	None	replace
32	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	13	None	replace
33	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	13	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	1	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  expandable);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	5	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  null);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	18	None	replace
43	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	18	None	replace
45	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
46	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(y);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
47	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
48	[BUG]  [BUGGY]  evaluates.remove(yDot);  [CE]  cannot  find  symbol  evaluates  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluates.remove(yDot);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(yDot);	  evaluations.remove(yDot);    	non-compiled	[CE]  cannot  find  symbol  evaluates	16	None	replace
49	[BUG]  [BUGGY]  evaluates.clear();  [CE]  cannot  find  symbol  evaluates  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluates.clear();  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.clear();	  evaluations.clear();    	non-compiled	[CE]  cannot  find  symbol  evaluates	7	None	replace
50	[BUG]  [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot));  [CE]  no  suitable  constructor  found  for  Incrementor(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Incrementor(t,  y,  yDot));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Incrementor(t,  y,  yDot));	  evaluations.clear();    	non-compiled	[CE]  no  suitable  constructor  found  for  Incrementor(double,double[],double[])	7	None	replace
51	[BUG]  [BUGGY]  evaluateDerivatives.clear();  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluateDerivatives.clear();  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives.clear();	  evaluations.clear();    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	7	None	replace
52	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	15	None	replace
53	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	15	None	replace
54	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	15	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	17	None	replace
56	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	17	None	replace
58	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
59	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
60	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
61	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.compute	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
62	[BUG]  [BUGGY]  evaluations.remove(y,  yDot);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.remove(y,  yDot);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(y,  yDot);	  evaluations.remove(yDot);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
63	[BUG]  [BUGGY]  evaluatesInitialized.incrementCount();  [CE]  cannot  find  symbol  evaluatesInitialized  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluatesInitialized.incrementCount();  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluatesInitialized.incrementCount();	  evaluates.incrementCount();    	non-compiled	[CE]  cannot  find  symbol  evaluatesInitialized	9	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Integer  evaluations  =  getEvaluations();  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	add	Integer  evaluations  =  getEvaluations();	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	11	1	replace
65	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluations();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Integer  evaluations  =  getEvaluations();  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluations();	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	11	1	replace
66	[BUG]  [BUGGY]  Integer[]  evaluations  =  getEvaluations();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Integer[]  evaluations  =  getEvaluations();  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer[]  evaluations  =  getEvaluations();	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  incompatible  types	11	None	replace
67	[BUG]  [BUGGY]  Integer  evaluations  =  getEvents();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Integer  evaluations  =  getEvents();  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvents();	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
68	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
69	[BUG]  [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Integer  evaluations  =  getEvaluationsInitialized();  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  evaluations  =  getEvaluationsInitialized();	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
70	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i][0],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
74	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot  }  );  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluateDerivatives(t,  y,  new  Double[]  {  yDot  }  );  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  new  Double[]  {  yDot  }  );	  evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  incompatible  types	6	None	replace
75	[BUG]  [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y);  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Integer  y  =  evaluateDerivatives(t,  y);  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Integer  y  =  evaluateDerivatives(t,  y);	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
76	[BUG]  [BUGGY]  Evaluations.checkState(expansions.length  ==  1);  [CE]  cannot  find  symbol  expansions  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Evaluations.checkState(expansions.length  ==  1);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expansions.length  ==  1);	  evaluations.clear();    	non-compiled	[CE]  cannot  find  symbol  expansions	7	None	replace
77	[BUG]  [BUGGY]  Evaluations.checkState(expansions.length  ==  0);  [CE]  cannot  find  symbol  expansions  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Evaluations.checkState(expansions.length  ==  0);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expansions.length  ==  0);	  evaluations.clear();    	non-compiled	[CE]  cannot  find  symbol  expansions	7	None	replace
78	[BUG]  [BUGGY]  evaluateDerivatives.add(y);  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluateDerivatives.add(y);  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives.add(y);	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	3	None	replace
79	[BUG]  [BUGGY]  luateDerivatives.add(y);  [CE]  cannot  find  symbol  luateDerivatives  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  luateDerivatives.add(y);  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	luateDerivatives.add(y);	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  cannot  find  symbol  luateDerivatives	3	None	replace
80	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount();  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount();  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
81	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  expandable.computeDe	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
82	[BUG]  [BUGGY]  evaluations.remove(y,  expandable);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.remove(y,  expandable);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(y,  expandable);	  evaluations.remove(y);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
83	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	13	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i  +  1);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
85	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  expandable));  [CE]  no  suitable  constructor  found  for  Integer(double[],ExpandableStatefulODE)  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(y,  expandable));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  expandable));	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],ExpandableStatefulODE)	8	None	replace
86	[BUG]  [BUGGY]  evaluations.add(new  Integer(y,  yDot));  [CE]  no  suitable  constructor  found  for  Integer(double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(y,  yDot));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y,  yDot));	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[],double[])	8	None	replace
87	[BUG]  [BUGGY]  evaluations.add(new  Integer(0));  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(0));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(0));	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
88	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
93	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i  +  1,  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  null,  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y,    i,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
97	[BUG]  [BUGGY]  evaluations.add(new  Integer(yDot));  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluations.add(new  Integer(yDot));  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(yDot));	  evaluations.add(new    Integer(y));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	8	None	replace
98	[BUG]  [BUGGY]  Evaluations.checkState(expansions,  t.getModule());  [CE]  cannot  find  symbol  expansions  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  Evaluations.checkState(expansions,  t.getModule());  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	Evaluations.checkState(expansions,  t.getModule());	  evaluations.clear();    	non-compiled	[CE]  cannot  find  symbol  expansions	7	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }  [CE]  'void'  type  not  allowed  here  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  evaluations.incrementCount());  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  'void'  type  not  allowed  here	19	None	replace
100	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
101	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount());  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
102	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  evaluations.incrementCount();  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	19	None	replace
103	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    expandable.computeDerivatives(t,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
107	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
108	[BUG]  [BUGGY]  evaluates.remove(y);  [CE]  cannot  find  symbol  evaluates  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  evaluates.remove(y);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.remove(y);	  evaluations.remove(y);    	non-compiled	[CE]  cannot  find  symbol  evaluates	10	None	replace
109	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	2	None	replace
111	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]    evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
