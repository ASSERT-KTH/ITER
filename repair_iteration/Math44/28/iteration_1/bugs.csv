bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
2	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
3	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
4	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
5	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y,  i,  yDot);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
6	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]  evaluateDerivatives(t,  y,  yDot);  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluateDerivatives(t,  y,  yDot);	evaluations.incrementCount();  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
7	[BUG]  [BUGGY]  evaluations.clear();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]  evaluations.clear();  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.clear();	evaluations.incrementCount();  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
8	[BUG]  [BUGGY]  evaluations.add(new  Integer(y));  [CE]  no  suitable  constructor  found  for  Integer(double[])  [FE]        AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]  evaluations.add(new  Integer(y));  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.add(new  Integer(y));	evaluations.incrementCount();  	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double[])	55	None	replace
9	[BUG]  [BUGGY]  evaluates.incrementCount();  [CE]  cannot  find  symbol  evaluates  [FE]    AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]  evaluates.incrementCount();  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluates.incrementCount();	evaluations.incrementCount();  	non-compiled	[CE]  cannot  find  symbol  evaluates	55	None	replace
10	[BUG]  [BUGGY]  evaluations.remove(y);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]  evaluations.remove(y);  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(y);	evaluations.incrementCount();  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
11	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
12	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
13	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
14	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  expandable.computeDerivatives(t,  y,  i);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
15	[BUG]  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
16	[BUG]  [BUGGY]  evaluations.remove(yDot);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]  evaluations.remove(yDot);  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	evaluations.remove(yDot);	evaluations.incrementCount();  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
17	[BUG]  [BUGGY]    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
18	[BUG]  [BUGGY]    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot[i]);  }		non-compiled	[CE]  illegal  start  of  expression	56	None	add
19	[BUG]  [BUGGY]    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  [BUGGY]    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  [BUGGY]  evaluations.incrementCount();  expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	249	249	1	replace	    if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]		non-compiled	[CE]  ')'  expected	56	None	add
