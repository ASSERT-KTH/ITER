bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	6	1	add
2	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	6	1	add
3	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	6	None	add
4	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	  	compilable	  [FE]  UnsupportedOperationException  	6	1	add
5	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	  	compilable	  [FE]  UnsupportedOperationException  	6	1	add
6	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	6	1	add
7	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	6	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
9	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
11	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	11	1	add
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	11	1	add
13	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	11	1	add
14	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
15	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeSet  <  EventState>();	  this.eventsStates    =    new    LinkedList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
17	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
18	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  Incrementor>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  Incrementor>();  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.eventsStates  =  new  ArrayList  <  Incrementor>();	  this.eventsStates    =    new    LinkedList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  Integer>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  TreeSet  <  Integer>();  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeSet  <  Integer>();	  this.eventsStates    =    new    LinkedList    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
20	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  this.eventsStates  =  Lists.newArrayList();  setEventsStates(-1);  [CE]  illegal  start  of  expression  [FE]                UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Lists.newArrayList();  setEventsStates(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Lists.newArrayList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
25	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
26	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
27	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
28	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-3);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
29	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
30	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
31	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
32	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-4);	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
33	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepHandlers);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
34	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(eventsStates);  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(eventsStates);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
35	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(stepHandlers);  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(stepHandlers);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(stepHandlers);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
36	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  evaluations);  [CE]  illegal  start  of  expression  [FE]              UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(this.eventsStates,  evaluations);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
37	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	14	1	add
39	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	14	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	14	1	add
41	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	14	1	add
42	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	14	None	add
43	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastSte  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastSte  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastSte	  	non-compiled	[CE]  ')'  expected	14	None	add
44	[BUG]  [BUGGY]  setEventsStates(eventsStates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates.size()  -  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates.size()  -  1);	  setEventsStates(eventsStates.size());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  setEventsStates(eventsStates.size()  +  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates.size()  +  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates.size()  +  stepStart);	  setEventsStates(eventsStates.size());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  TreeList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
47	[BUG]  [BUGGY]  ;  this.eventsStates  =  new  TreeList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ;  this.eventsStates  =  new  TreeList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	;  this.eventsStates  =  new  TreeList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
48	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	54	None	add
49	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	54	None	add
50	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	54	None	add
51	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	54	None	add
52	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	1	1	add
53	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	1	1	add
54	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
55	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.EMPTYList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
56	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	70	1	add
58	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	70	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	70	1	add
60	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	70	1	add
61	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	70	None	add
62	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
63	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
64	[BUG]  [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	null  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
65	[BUG]  [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Lists.  <  EventState>emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Lists.  <  EventState>emptyList();	  this.eventsStates    =    Collections.    <    EventState>emptyList();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(2);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
67	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
68	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
69	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
70	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);	  this.eventsStates    =    new    LinkedList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);	  this.eventsStates    =    new    LinkedList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  isLastStep  =  false;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEvents  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEvents  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEvents	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
77	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEvent  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEvent  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEvent	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
78	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEventsStates  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEventsStates  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEventsStates	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
79	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
80	[BUG]  [BUGGY]  setEventsStates(eventsStates,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates,  stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates,  stepSize);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
81	[BUG]  [BUGGY]  setStates(eventsStates,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStates(eventsStates,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStates(eventsStates,  stepStart);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
82	[BUG]  [BUGGY]  setEventsStates(eventsStates,  stepsInitialized);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates,  stepsInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates,  stepsInitialized);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
83	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  false;	  this.eventsStates    =    new    LinkedList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
84	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
85	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
86	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
87	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
88	[BUG]  [BUGGY]  setStates(eventsStates.values());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStates(eventsStates.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStates(eventsStates.values());	  setEventsStates(eventsStates.values());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
89	[BUG]  [BUGGY]  setEventsStates(eventsStates.values(),  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates.values(),  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates.values(),  stepStart);	  setEventsStates(eventsStates.values());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
90	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
91	[BUG]  [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	null  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
92	[BUG]  [BUGGY]  null  =  new  LinkedList  <  EventState>();  this.eventsStates  =  new  LinkedList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  null  =  new  LinkedList  <  EventState>();  this.eventsStates  =  new  LinkedList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	null  =  new  LinkedList  <  EventState>();  this.eventsStates  =  new  LinkedList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
93	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  }	  this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
95	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
96	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
97	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
98	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
99	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	45	None	add
100	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [CE]  '('  or  '['  expected  [FE]          MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>	  	non-compiled	[CE]  '('  or  '['  expected	45	None	add
101	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]            MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	45	None	add
102	[BUG]  [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
103	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(this.stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
104	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  not  a  statement	50	None	replace
107	[BUG]  [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	ArrayList  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
108	[BUG]  [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Collection  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
109	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
110	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
111	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	67	1	add
113	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	67	1	add
114	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	67	None	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	67	1	add
116	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	67	1	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	67	1	add
118	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	67	1	add
119	[BUG]  [BUGGY]  setEventsStates(events.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(events.size());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(events.size());	  setEventsStates(events);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
120	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates!=  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates!=  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }	  eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
121	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsStates  =  new  HashSet  <  EventState>();	  eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
122	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  Integer>(stepStart);	  this.eventsStates    =    new    ArrayList    <    Integer>(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
123	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(stepSize  +  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(stepSize  +  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  Integer>(stepSize  +  stepStart);	  this.eventsStates    =    new    ArrayList    <    Integer>(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
124	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  Integer>(stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  Integer>(stepSize);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  Integer>(stepSize);	  this.eventsStates    =    new    ArrayList    <    Integer>(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
125	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this.	  	non-compiled	[CE]  <identifier>  expected	48	None	add
126	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	48	None	add
127	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  <identifier>  expected	48	None	add
128	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	48	None	add
129	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
130	[BUG]  [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
131	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);	  Set    <    EventState>    eventsStates    =    new    LinkedHashSet    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
132	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  isLastStep  =  true;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  isLastStep  =  true;	  	non-compiled	[CE]  incompatible  types	65	None	add
133	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  events  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  events  is  already  defined  in  constructor  AbstractIntegrator(String)	65	None	add
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  actions  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  actions  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	65	1	add
135	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  actions  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  actions  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  actions  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	65	1	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	65	1	add
137	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	65	1	add
138	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  [CE]  variable  events  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  events  is  already  defined  in  constructor  AbstractIntegrator(String)	65	None	add
139	[BUG]  [BUGGY]  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
140	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
141	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  resetOccurred  =  true;  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;  resetOccurred  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
142	[BUG]  [BUGGY]  resetOccurred  =  true;  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	resetOccurred  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
143	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
144	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [CE]  '('  or  '['  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>	  	non-compiled	[CE]  '('  or  '['  expected	42	None	add
145	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [CE]  '('  or  '['  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>	  	non-compiled	[CE]  '('  or  '['  expected	42	None	add
146	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	42	None	add
147	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
148	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.	  	non-compiled	[CE]  <identifier>  expected	28	None	add
149	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this.	  	non-compiled	[CE]  <identifier>  expected	28	None	add
150	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	28	None	add
151	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
152	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates!=  null)  {  this	  	non-compiled	[CE]  not  a  statement	28	None	add
153	[BUG]  [BUGGY]  Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsInitialized  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);	  if(eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
154	[BUG]  [BUGGY]  resetOccurred(statesInitialized);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  resetOccurred(statesInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	resetOccurred(statesInitialized);	  setEventsStates(statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	40	1	add
156	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	40	1	add
157	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	40	None	add
158	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  not  a  statement	40	None	add
159	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  not  a  statement	40	None	add
160	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	74	1	add
161	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	74	1	add
162	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	74	1	add
163	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	74	1	add
164	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [CE]  cannot  find  symbol  This  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	74	None	add
165	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setOccurred  =  true;  [CE]  cannot  find  symbol  setOccurred  [FE]          UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setOccurred  =  true;	  	non-compiled	[CE]  cannot  find  symbol  setOccurred	74	None	add
166	[BUG]  [BUGGY]  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
167	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
168	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
169	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [CE]  cannot  find  symbol  This  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    This.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol  This	4	None	add
170	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
171	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
172	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
173	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
174	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
175	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
176	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
177	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  Increment>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  Increment>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.eventsStates  =  new  ArrayList  <  Increment>();	  this.eventsStates    =    new    LinkedList    <    Increment>();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
178	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
179	[BUG]  [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
180	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
181	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
182	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
183	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	52	None	add
184	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	26	1	add
186	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	26	1	add
187	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	26	None	add
188	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	26	None	add
189	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  '('  or  '['  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  '('  or  '['  expected	26	None	add
190	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	63	None	add
191	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	63	None	add
192	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	63	None	add
193	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	63	1	add
194	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	63	1	add
195	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  setEventsStates(eventsStates);	  Set    <    EventState>    eventsStates    =    new    LinkedHashSet    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
196	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	52	None	add
197	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.events  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
198	[BUG]  [BUGGY]  this.errors  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.errors  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.errors  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
199	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
200	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
201	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
202	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
203	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
204	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
205	[BUG]  [BUGGY]  setEvents(events);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEvents(events);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEvents(events);	  setEventsStates(events);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
206	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventStatement>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  EventStatement>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.eventsStates  =  new  ArrayList  <  EventStatement>();	  this.eventsStates    =    new    LinkedList    <    EventStatement>();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
207	[BUG]  [BUGGY]  setStates(statesInitialized);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStates(statesInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStates(statesInitialized);	  setEventsStates(statesInitialized);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
208	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMinEvaluations(-1);  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMinEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMinEvaluations(-1);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
209	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
210	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
211	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
212	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	28	None	add
213	[BUG]  [BUGGY]  setStepStates(stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStepStates(stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStepStates(stepStart);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
214	[BUG]  [BUGGY]  setStepSize(stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStepSize(stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStepSize(stepStart);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
215	[BUG]  [BUGGY]  setSteps(stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setSteps(stepSize,  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setSteps(stepSize,  stepStart);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
216	[BUG]  [BUGGY]  setSteps(stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setSteps(stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setSteps(stepSize);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
217	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
218	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
219	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(steps  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
220	[BUG]  [BUGGY]  setEventsStates(stepHandlers.values());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(stepHandlers.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(stepHandlers.values());	  setEventsStates(eventsStates.values());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
221	[BUG]  [BUGGY]  setEventsStates(events.values());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(events.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(events.values());	  setEventsStates(eventsStates.values());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
222	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(statesInitialized)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
223	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
224	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setE  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setE  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setE	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
225	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  Increment>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  TreeList  <  Increment>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeList  <  Increment>();	  this.eventsStates    =    new    TreeSet    <    Increment>();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
226	[BUG]  [BUGGY]  Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
227	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeList  <  EventStatement>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  TreeList  <  EventStatement>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeList  <  EventStatement>();	  this.eventsStates    =    new    TreeSet    <    EventStatement>();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
228	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTYList();	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
229	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
230	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
231	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  else  {  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  else  {  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  else  {	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
232	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST.emptyList();  setEventsStates(-1);  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST.emptyList();  setEventsStates(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
233	[BUG]  [BUGGY]  this.eventsStates  =  Lists.emptyList();  setEventsStates(-1);  [CE]  illegal  start  of  expression  [FE]            UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Lists.emptyList();  setEventsStates(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Lists.emptyList();  setEventsStates(-1);	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setEventsStates(-1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
234	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  }	  this.eventsStates    =    new    LinkedList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	67	1	add
236	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	67	1	add
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	67	1	add
238	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	67	1	add
239	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  stepsStates  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stepsStates	6	None	add
240	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.exprStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  exprStates  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.exprStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.exprStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  exprStates	6	None	add
241	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  hasLastStep  =  true;  [CE]  cannot  find  symbol  hasLastStep  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  hasLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  hasLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  hasLastStep	6	None	add
242	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(statesInitialized);  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(statesInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(statesInitialized);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
243	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepSize);  [CE]  illegal  start  of  expression  [FE]          UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepSize);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepSize);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
244	[BUG]  [BUGGY]  if(resetOccurred)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(resetOccurred)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(resetOccurred)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
245	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  resetOccurred  =  true;  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTYList();  resetOccurred  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
246	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	54	None	add
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	54	1	add
248	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	54	1	add
249	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>()  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>()	  	non-compiled	[CE]  ';'  expected	14	None	add
250	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	14	None	add
251	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLa  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLa  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLa	  	non-compiled	[CE]  not  a  statement	14	None	add
252	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
253	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	42	None	add
254	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	42	None	add
255	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	  	non-compiled	[CE]  ';'  expected	42	None	add
256	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
257	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-2);    this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	59	1	add
258	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
259	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
260	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	63	None	add
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	65	1	add
262	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	65	1	add
263	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	65	1	add
264	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	65	1	add
265	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }	  if(eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
266	[BUG]  [BUGGY]  Set  <  EventState>  events  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Set  <  EventState>  events  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  events  =  new  HashSet  <  EventState>();  setEventsStates(eventsStates);	  if(eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
267	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
268	[BUG]  [BUGGY]  if(steps!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(steps!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(steps!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
269	[BUG]  [BUGGY]  setEventsStates(new  ArrayList  <  EventState>());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(new  ArrayList  <  EventState>());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(new  ArrayList  <  EventState>());	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
270	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
271	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	45	None	add
272	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  nu  [CE]  ')'  expected  [FE]        MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  nu  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  nu	  	non-compiled	[CE]  ')'  expected	45	None	add
273	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(2);  }  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(2);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(2);  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
274	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]      MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
275	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [CE]  cannot  find  symbol  stepsStates  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stepsStates	74	None	add
276	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.stepSize  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  double  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  this.stepSize  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    this.stepSize  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  double	74	None	add
277	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
278	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
279	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
280	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isFirstStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
281	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
282	[BUG]  [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(events!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
283	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.events  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.events  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.events  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  events	40	None	add
284	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.errors  =  new  ArrayList  <  StepHandler>();  this.errors  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  errors  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.errors  =  new  ArrayList  <  StepHandler>();  this.errors  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.errors  =  new  ArrayList  <  StepHandler>();  this.errors  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  errors	40	None	add
285	[BUG]  [BUGGY]  This.eventsStates  =  new  ArrayList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  This.eventsStates  =  new  ArrayList  <  Integer>();  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	This.eventsStates  =  new  ArrayList  <  Integer>();	  this.eventsStates    =    new    LinkedList    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
286	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  nu  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  nu  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  nu	  	non-compiled	[CE]  ')'  expected	48	None	add
287	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  nu  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  nu  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates!=  nu	  	non-compiled	[CE]  ')'  expected	48	None	add
288	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
289	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  ISLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
290	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [CE]  cannot  find  symbol  stepsStates  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.stepsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  stepsStates	1	None	add
291	[BUG]  [BUGGY]  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
292	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
293	[BUG]  [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  not  a  statement	62	None	replace
294	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>()  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>()  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>()	  	non-compiled	[CE]  ';'  expected	70	None	add
295	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	  	non-compiled	[CE]  ';'  expected	70	None	add
296	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new	  	non-compiled	[CE]  <identifier>  expected	70	None	add
297	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event	  	non-compiled	[CE]  >  expected	70	None	add
298	[BUG]  [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Iterator  <  EventState>  it  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
299	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
300	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
301	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepStart  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepStart  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepStart  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
302	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
303	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	26	None	add
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	26	1	add
305	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  setMaxEvaluations(-1);	  	compilable	  [FE]  AssertionError  	26	1	add
306	[BUG]  [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(statesInitialized)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
307	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.EMPTYList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTYList();  isLastStep  =  true;	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
308	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
309	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
310	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
311	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(stepSize  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
312	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
313	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList    <    EventState>    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
314	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.events  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.events  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.events	  	non-compiled	[CE]  not  a  statement	48	None	add
315	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(!isLastStep)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    resetOccurred    =    true;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
316	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        isLastStep        =        true;        ArrayList    <    EventState>    events    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	65	None	add
317	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
318	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
319	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(1);  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    setMaxEvaluations(-1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
320	[BUG]  [BUGGY]  setEventsStates(eventsStates.size()  -  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates.size()  -  stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates.size()  -  stepStart);	  setEventsStates(eventsStates.size());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
321	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandler  [CE]  not  a  statement  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandler  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandler	  	non-compiled	[CE]  not  a  statement	45	None	add
322	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepSize  =  Collections.emptyList();  this.stepHandlers  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  double  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  this.stepSize  =  Collections.emptyList();  this.stepHandlers  =  Collections.emptyList();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    this.stepSize  =  Collections.emptyList();  this.stepHandlers  =  Collections.emptyList();	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  double	1	None	add
323	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
324	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
325	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(false);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(true);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
326	[BUG]  [BUGGY]  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	isLastStep  =  false;	  this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    false;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
327	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
328	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
329	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  Collections.emptyList();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
330	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    Collections.emptyList();    this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
331	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLas  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLas  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLas	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  not  a  statement	71	None	replace
332	[BUG]  [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  Event	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  >  expected	71	None	replace
333	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }	  if(eventsStates!=    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
334	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
335	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  TreeList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    TreeList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
336	[BUG]  [BUGGY]  if(stepStart  ==  Step.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  Step.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  Step.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
337	[BUG]  [BUGGY]  if(stepStart  ==  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
338	[BUG]  [BUGGY]  if(stepStart  ==  Step.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  Step.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  Step.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
339	[BUG]  [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(!isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
340	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
341	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    setMaxEvaluations(1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
342	[BUG]  [BUGGY]  setStepStates(eventsStates.values());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStepStates(eventsStates.values());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStepStates(eventsStates.values());	  setEventsStates(eventsStates.values());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
343	[BUG]  [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
344	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
345	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
346	[BUG]  [BUGGY]  if(this.stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(this.stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(this.stepStart  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
347	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(1);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  Integer>(1);	  this.eventsStates    =    new    ArrayList    <    Integer>(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
348	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepStart);  [CE]  illegal  start  of  expression  [FE]        UnsupportedOperationException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.stepStart);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(this.stepStart);	  this.eventsStates    =    Collections.synchronizedList(this.eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
349	[BUG]  [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.stepsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  isLastStep  =  true;  [CE]  cannot  find  symbol  stepsStates  [FE]    UnsupportedOperationException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  this.stepsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        Collections.emptyList();        this.eventsStates    =    Collections.emptyList();    isLastStep    =    true;    this.stepsStates  =  Collections.emptyList();  this.stepsStates  =  Collections.emptyList();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  stepsStates	6	None	add
350	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates!=  null)  {  this.eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  }	  this.eventsStates    =    new    LinkedList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
351	[BUG]  [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Iterator  <  EventState>  events  =  new  ArrayList  <  EventState>();	          this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
352	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new	  	non-compiled	[CE]  <identifier>  expected	42	None	add
353	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandler  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandler  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandler	  	non-compiled	[CE]  not  a  statement	42	None	add
354	[BUG]  [BUGGY]  setStates(events);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setStates(events);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setStates(events);	  setEventsStates(events);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
355	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
356	[BUG]  [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(1);  }	          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
357	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  EventStatement>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  HashSet  <  EventStatement>();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  HashSet  <  EventStatement>();	  this.eventsStates    =    new    TreeSet    <    EventStatement>();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
358	[BUG]  [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]          this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	                this.eventsStates        =        new        ArrayList        <        EventState>();        if(eventsStates    ==    null)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    }    this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates	  	non-compiled	[CE]  not  a  statement	28	None	add
359	[BUG]  [BUGGY]  setEventsStates(eventsStates,  stepStart,  evaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  setEventsStates(eventsStates,  stepStart,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates,  stepStart,  evaluations);	  setEventsStates(eventsStates,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
360	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  set  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  set  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  set	          this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)    {    this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    }    else    {    setEventsStates(-1);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
