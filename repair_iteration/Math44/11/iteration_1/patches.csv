bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
2	[BUG]  [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
3	[BUG]  [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setEventsStates(-1);	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
4	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
5	[BUG]  [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-1);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
6	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
7	[BUG]  [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  isLastStep  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
8	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();	      this.eventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  Collections.EMPTY_LIST;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.EMPTY_LIST;	      this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  [CE]  illegal  start  of  expression  [FE]      UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  Collections.  <  EventState>emptyList();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.  <  EventState>emptyList();	      this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
12	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
13	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    This.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	7	1	add
15	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	7	1	add
16	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEventsStates(-1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  else  {  setEventsStates(-1);  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
17	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  setEventsStates(eventsStates);	      this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);	      this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventStatement>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventStatement>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventStatement>();	      this.eventsStates    =    new    ArrayList    <    EventStatement>();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedHashSet  <  EventStatement>();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedHashSet  <  EventStatement>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedHashSet  <  EventStatement>();	      this.eventsStates    =    new    ArrayList    <    EventStatement>();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  Incrementor>();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  Incrementor>();  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  Incrementor>();	  this.eventsStates    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  setEventsStates(eventsStates,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  setEventsStates(eventsStates,  stepStart);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates,  stepStart);	      setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  setEventsStates(eventsStates.size());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  setEventsStates(eventsStates.size());  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates.size());	      setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
25	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	1	1	add
27	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	1	1	add
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
29	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
30	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(-1);  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
31	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    if(eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  else  {  setEventsStates(true);  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
32	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  Integer>();  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  Integer>();	  this.eventsStates    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(stepSize);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  ArrayList  <  Integer>(stepSize);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  Integer>(stepSize);	  this.eventsStates    =    new    ArrayList    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  false;	      this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(isLastStep)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	      this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventState>();  isLastStep  =  true;	      this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventsState>();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  EventsState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  EventsState>();	      this.eventsStates    =    new    ArrayList    <    EventsState>();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  Increment>();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  LinkedList  <  Increment>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  LinkedList  <  Increment>();	      this.eventsStates    =    new    ArrayList    <    Increment>();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  Increment>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  TreeSet  <  Increment>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeSet  <  Increment>();	      this.eventsStates    =    new    ArrayList    <    Increment>();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	12	1	add
41	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	12	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	12	1	add
43	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	12	1	add
44	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	12	None	add
45	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  MaxCountExceededException  	12	1	add
46	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [FE]  MaxCountExceededException  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  setMaxEvaluations(1);  }	  	compilable	  [FE]  MaxCountExceededException  	12	1	add
47	[BUG]  [BUGGY]  Set  <  EventState>  eventsStates  =  new  LinkedHashSet  <  EventState>();  setEventsStates(eventsStates);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  Set  <  EventState>  eventsStates  =  new  LinkedHashSet  <  EventState>();  setEventsStates(eventsStates);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	Set  <  EventState>  eventsStates  =  new  LinkedHashSet  <  EventState>();  setEventsStates(eventsStates);	      this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
49	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    if(this.eventsStates  ==  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
50	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  not  a  statement	1	None	add
51	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  This.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    This.eventsStates  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	12	1	add
53	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	12	1	add
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	12	1	add
55	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	12	1	add
56	[BUG]  [BUGGY]  setEventsStates(events);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  setEventsStates(events);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(events);	      setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  setEventsStates(statesInitialized);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  setEventsStates(statesInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(statesInitialized);	      setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  setEventsStates(eventsInitialized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  setEventsStates(eventsInitialized);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsInitialized);	      setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
60	[BUG]  [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  setMaxEvaluations(-2);	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
61	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventStatement>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  new  TreeSet  <  EventStatement>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  new  TreeSet  <  EventStatement>();	      this.eventsStates    =    new    ArrayList    <    EventStatement>();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
62	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	non-compiled	[CE]  not  a  statement	7	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
64	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
66	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    ArrayList  <  EventState>  events  =  new  ArrayList  <  EventState>();  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	7	1	add
68	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    this.eventsStates  =  new  ArrayList  <  EventState>();	  	compilable	  [FE]  AssertionError  	7	1	add
69	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  this.eventsStates  =  new  TreeList  <  EventState>();  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    this.eventsStates  =  new  TreeList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	7	1	add
71	[BUG]  [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    new    ArrayList    <    EventState>();    isLastStep    =    true;    if(this.eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  isLastStep  =  true;  }	  	compilable	  [FE]  AssertionError  	7	1	add
72	[BUG]  [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	if(eventsStates!=  null)  {  this.eventsStates  =  new  ArrayList  <  EventState>();  setEventsStates(eventsStates);  }	      this.eventsStates    =    new    ArrayList    <    EventState>();    setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates);  [CE]  illegal  start  of  expression  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  this.eventsStates  =  Collections.synchronizedList(this.eventsStates);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	this.eventsStates  =  Collections.synchronizedList(this.eventsStates);	      this.eventsStates    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	add	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
75	[BUG]  [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]      this.eventsStates  =  Collections.emptyList();  this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	        this.eventsStates    =    Collections.emptyList();    this.eventsStates  =  Collections.emptyList();  resetOccurred  =  true;	  	compilable	  [FE]  UnsupportedOperationException  	4	1	add
76	[BUG]  [BUGGY]  setEventsStates(eventsStates.values());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;  eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();    [BUGGY]  setEventsStates(eventsStates.values());  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	95	95	1	replace	setEventsStates(eventsStates.values());	      setEventsStates(eventsStates);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
