bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getPreviousTime();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	compilable	  [FE]  AssertionError  	67	1	replace
2	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	compilable	  [FE]  AssertionError  	67	1	replace
3	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getNextTime();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  interpolator.getNextTime();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getNextTime();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	non-compiled	[CE]  cannot  find  symbol	67	None	replace
4	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getNext();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  interpolator.getNext();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getNext();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	non-compiled	[CE]  cannot  find  symbol	67	None	replace
5	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getGlobalCurrentTime();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  previousT.getGlobalCurrentTime();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getGlobalCurrentTime();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	non-compiled	[CE]  double  cannot  be  dereferenced	67	None	replace
6	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  currentT  [FE]            AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	  	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	non-compiled	[CE]  cannot  find  symbol  currentT	67	None	replace
7	[BUG]  [BUGGY]    Iterator  iterator  =  eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    Iterator  iterator  =  eventsStates.iterator();  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    Iterator  iterator  =  eventsStates.iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	68	None	add
8	[BUG]  [BUGGY]    Preconditions.checkState(previousT  ==  null);  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    Preconditions.checkState(previousT  ==  null);  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    Preconditions.checkState(previousT  ==  null);		non-compiled	[CE]  incomparable  types:  double  and  <null>	68	None	add
9	[BUG]  [BUGGY]    Preconditions.checkState(previousT!=  null);  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    Preconditions.checkState(previousT!=  null);  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    Preconditions.checkState(previousT!=  null);		non-compiled	[CE]  incomparable  types:  double  and  <null>	68	None	add
10	[BUG]  [BUGGY]    final  double[]  eventsInitialized  =  getEvents();  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    final  double[]  eventsInitialized  =  getEvents();  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    final  double[]  eventsInitialized  =  getEvents();		non-compiled	[CE]  cannot  find  symbol	68	None	add
11	[BUG]  [BUGGY]    Preconditions.checkState(previousT  ==  t);  [CE]  cannot  find  symbol  t  [FE]            AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    Preconditions.checkState(previousT  ==  t);  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    Preconditions.checkState(previousT  ==  t);		non-compiled	[CE]  cannot  find  symbol  t	68	None	add
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getGlobalPreviousTime();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	compilable	  [FE]  AssertionError  	67	1	replace
13	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [BUGGY]  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getGlobalPreviousTime();	final  double  currentT  =  interpolator.getGlobalCurrentTime();  	compilable	  [FE]  AssertionError  	67	1	replace
14	[BUG]  [BUGGY]    Preconditions.checkNotNull(previousT);  [CE]  cannot  find  symbol  Preconditions  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    Preconditions.checkNotNull(previousT);  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    Preconditions.checkNotNull(previousT);		non-compiled	[CE]  cannot  find  symbol  Preconditions	68	None	add
15	[BUG]  [BUGGY]    Preconditions.checkState(previousT  >=  tEnd);  [CE]  cannot  find  symbol  Preconditions  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    Preconditions.checkState(previousT  >=  tEnd);  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    Preconditions.checkState(previousT  >=  tEnd);		non-compiled	[CE]  cannot  find  symbol  Preconditions	68	None	add
16	[BUG]  [BUGGY]    if(previousT  >  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    if(previousT  >  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    if(previousT  >  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }		non-compiled	[CE]  illegal  start  of  expression	68	None	add
17	[BUG]  [BUGGY]    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }		non-compiled	[CE]  illegal  start  of  expression	68	None	add
18	[BUG]  [BUGGY]    if(previousT  >  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    if(previousT  >  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    if(previousT  >  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }		non-compiled	[CE]  illegal  start  of  expression	68	None	add
19	[BUG]  [BUGGY]    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }		non-compiled	[CE]  illegal  start  of  expression	68	None	add
20	[BUG]  [BUGGY]    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	    if(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }		non-compiled	[CE]  illegal  start  of  expression	68	None	add
