bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tEnd);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >  tEnd);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tEnd);	      Preconditions.checkState(previousT    >=    tEnd);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	15	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  t0);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >=  t0);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  t0);	      Preconditions.checkState(previousT    >=    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	15	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  tEnd);  [CE]  cannot  find  symbol  Preconditions  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  <  tEnd);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  tEnd);	      Preconditions.checkState(previousT    >=    tEnd);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	15	None	replace
4	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime();    final  double  currentT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	add
5	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime();    final  double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	add
6	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime();    final  double  currentT  =  interpolator.getNextTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	add
7	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  state  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  state	17	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  Preconditions  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	17	None	replace
10	[BUG]  [BUGGY]  for(EventState  currentEvent  :  events)  {  eventStates.add(interpolator);  }  [CE]  cannot  find  symbol  events  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  for(EventState  currentEvent  :  events)  {  eventStates.add(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  events)  {  eventStates.add(interpolator);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  events	19	None	replace
11	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  cannot  find  symbol  eventStates  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	19	None	replace
12	[BUG]  [BUGGY]  eventStates.add(interpolator);  [CE]  cannot  find  symbol  eventStates  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  eventStates.add(interpolator);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventStates.add(interpolator);	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	19	None	replace
13	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  eventStates  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	20	None	replace
14	[BUG]  [BUGGY]  for(EventState  currentEvent  :  events)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  events  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  for(EventState  currentEvent  :  events)  {  eventStates.add(currentEvent);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  events)  {  eventStates.add(currentEvent);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  events	20	None	replace
15	[BUG]  [BUGGY]  eventStates.add(previousT);  [CE]  cannot  find  symbol  eventStates  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  eventStates.add(previousT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventStates.add(previousT);	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	20	None	replace
16	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getStandardEvents();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double[]  eventsInitialized  =  getStandardEvents();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getStandardEvents();	      final    double[]    eventsInitialized    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
17	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(previousT);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double[]  eventsInitialized  =  getEvents(previousT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(previousT);	      final    double[]    eventsInitialized    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
18	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  previousT);	      final    double[]    eventsInitialized    =    getEvents();    	non-compiled	[CE]  ';'  expected	10	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >=  null);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  null);	      Preconditions.checkState(previousT    ==    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	8	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign);  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  null,  orderingSign);	      Preconditions.checkState(previousT    ==    null);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	8	None	replace
21	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getNext();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  previousT.getNext();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getNext();	  final    double    currentT    =    interpolator.getNext();    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
22	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPrevious();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPrevious();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPrevious();	  final    double    currentT    =    interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
23	[BUG]  [BUGGY]  if(previousT  >=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  if(previousT  >=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  >=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  state.reinitializeBegin(interpolator);  [CE]  cannot  find  symbol  state  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  state.reinitializeBegin(interpolator);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(interpolator);	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  state	16	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  tEnd);  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  tEnd);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  tEnd);	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	16	None	replace
26	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interpolator.getGlobalPreviousTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	12	None	add
27	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	12	None	add
28	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interpolator.getLocalPreviousTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	12	None	add
29	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interpolator.getStandardStep();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	12	None	add
30	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getPreviousTime();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  previousT.getPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getPreviousTime();	  final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getPreviousTime()  +  1;	  final    double    currentT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	2	1	replace
32	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  +  1;	  final    double    currentT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	2	1	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;	  final    double    currentT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	2	1	replace
34	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;	  final    double    currentT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	2	1	replace
35	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Iterator  iterator  =  this.eventsStates.iterator();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  this.eventsStates.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	7	None	replace
36	[BUG]  [BUGGY]  Iterator  iterator  =  this.events.iterator();  [CE]  cannot  find  symbol  events  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Iterator  iterator  =  this.events.iterator();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  this.events.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  events	7	None	replace
37	[BUG]  [BUGGY]  Iterator  iterator  =  otherEvents.iterator();  [CE]  cannot  find  symbol  otherEvents  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Iterator  iterator  =  otherEvents.iterator();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  otherEvents.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  otherEvents	7	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  t0);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  t0);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  t0);	      Preconditions.checkState(previousT    ==    t);    	non-compiled	[CE]  cannot  find  symbol  t0	11	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  convergence);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  convergence);	      Preconditions.checkState(previousT    ==    t);    	non-compiled	[CE]  cannot  find  symbol  convergence	11	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  eventT);  [CE]  cannot  find  symbol  eventT  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  eventT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  eventT);	      Preconditions.checkState(previousT    ==    t);    	non-compiled	[CE]  cannot  find  symbol  eventT	11	None	replace
41	[BUG]  [BUGGY]  final  double  currentT  =  eventT.getGlobalCurrentTime();  [CE]  cannot  find  symbol  eventT  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  eventT.getGlobalCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  eventT.getGlobalCurrentTime();	  final    double    currentT    =    previousT.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  eventT	5	None	replace
42	[BUG]  [BUGGY]  final  double  currentT  =  interface.getGlobalCurrentTime();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interface.getGlobalCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getGlobalCurrentTime();	  final    double    currentT    =    previousT.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getNextTime();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  previousT.getNextTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getNextTime();	  final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	replace
44	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getNextTime();  [CE]  cannot  find  symbol  interpolator  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  this.interpolator.getNextTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getNextTime();	  final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	3	None	replace
45	[BUG]  [BUGGY]  state.reinitializeBegin(previousT);  [CE]  cannot  find  symbol  state  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  state.reinitializeBegin(previousT);  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(previousT);	      	non-compiled	[CE]  cannot  find  symbol  state	6	None	replace
46	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Iterator  <  EventState>  iterator  =  eventsStates.iterator();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  eventsStates.iterator();	      	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	6	None	replace
47	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStandardStep();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getStandardStep();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStandardStep();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
48	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getNextStep();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getNextStep();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getNextStep();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getCurrentTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	compilable	  [FE]  AssertionError  	13	1	replace
50	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getCurrentTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	compilable	  [FE]  AssertionError  	13	1	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign);  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  orderingSign);	      Preconditions.checkState(previousT!=    null);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	9	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  tEnd);  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT!=  tEnd);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  tEnd);	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	18	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkNotNull(eventT);  [CE]  cannot  find  symbol  eventT  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkNotNull(eventT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(eventT);	      Preconditions.checkNotNull(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventT	14	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >>  t0);  [CE]  cannot  find  symbol  t0  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >>  t0);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >>  t0);	      Preconditions.checkState(previousT    >=    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	15	None	replace
55	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime();    final  double  currentT  =  interface.getPreviousTime();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
56	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  Preconditions  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	20	None	replace
58	[BUG]  [BUGGY]  final  double  currentT  =  intersectableODE.getGlobalCurrentTime();  [CE]  cannot  find  symbol  intersectableODE  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  intersectableODE.getGlobalCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  intersectableODE.getGlobalCurrentTime();	  final    double    currentT    =    previousT.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  intersectableODE	5	None	replace
59	[BUG]  [BUGGY]  final  double  currentT  =  interface.getNextTime();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interface.getNextTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getNextTime();	  final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  if(previousT  >=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  if(previousT  >=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  >=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  state.reinitializeBegin(currentT);  [CE]  cannot  find  symbol  currentT  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  state.reinitializeBegin(currentT);  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(currentT);	      	non-compiled	[CE]  cannot  find  symbol  currentT	6	None	replace
62	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents().values();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double[]  eventsInitialized  =  getEvents().values();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents().values();	      final    double[]    eventsInitialized    =    getEvents();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
63	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);	      final    double[]    eventsInitialized    =    getEvents();    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
64	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getNext();  [CE]  cannot  find  symbol  interpolator  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  this.interpolator.getNext();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getNext();	  final    double    currentT    =    interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol  interpolator	4	None	replace
65	[BUG]  [BUGGY]  final  double  currentT  =  interface.getNext();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interface.getNext();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getNext();	  final    double    currentT    =    interpolator.getNext();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interface.getGlobalPreviousTime();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interface.getGlobalPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interface.getGlobalPreviousTime();	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
67	[BUG]  [BUGGY]  Preconditions.checkNotNull(expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkNotNull(expandableODE);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(expandableODE);	      Preconditions.checkNotNull(previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	14	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkNotNull(eventsInitialized);  [CE]  cannot  find  symbol  eventsInitialized  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkNotNull(eventsInitialized);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(eventsInitialized);	      Preconditions.checkNotNull(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	14	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkNotNull(expandableODE,  previousT);  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkNotNull(expandableODE,  previousT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(expandableODE,  previousT);	      Preconditions.checkNotNull(previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	14	None	replace
70	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getInterval();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getInterval();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getInterval();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >>  null);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >>  null);	      Preconditions.checkState(previousT!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	9	None	replace
72	[BUG]  [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  stepHandlers.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	7	None	replace
73	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousT();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousT();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousT();	  final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  ';'  expected	19	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  null);  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  <  null);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  null);	      Preconditions.checkState(previousT!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	9	None	replace
76	[BUG]  [BUGGY]  if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  if(previousT  >  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  if(previousT  >  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  >  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  previousT);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  ==  previousT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  previousT);	      Preconditions.checkNotNull(previousT);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	14	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  previousT);  [CE]  cannot  find  symbol  Preconditions  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT!=  previousT);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  previousT);	      Preconditions.checkNotNull(previousT);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	14	None	replace
80	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Iterator  iterator  =  this.eventStates.iterator();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  this.eventStates.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	7	None	replace
81	[BUG]  [BUGGY]  if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(interpolator);  }	      if(previousT    >    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  this.expandableODE.evaluate(eventT,  previousT);  [CE]  cannot  find  symbol  eventT  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  this.expandableODE.evaluate(eventT,  previousT);  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	this.expandableODE.evaluate(eventT,  previousT);	      	non-compiled	[CE]  cannot  find  symbol  eventT	6	None	replace
83	[BUG]  [BUGGY]  int  stepStart  =  getStep(previousT);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  int  stepStart  =  getStep(previousT);  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(previousT);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
84	[BUG]  [BUGGY]  final  double  currentT  =  intersectable.getGlobalCurrentTime();  [CE]  cannot  find  symbol  intersectable  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  intersectable.getGlobalCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  intersectable.getGlobalCurrentTime();	  final    double    currentT    =    previousT.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  intersectable	5	None	replace
85	[BUG]  [BUGGY]  static  final  double  currentT  =  interpolator.getGlobalCurrentTime();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  static  final  double  currentT  =  interpolator.getGlobalCurrentTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	static  final  double  currentT  =  interpolator.getGlobalCurrentTime();	  final    double    currentT    =    previousT.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStepInterval();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getStepInterval();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStepInterval();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
87	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);	      final    double[]    eventsInitialized    =    getEvents();    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
88	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interpolator.getStandardPreviousTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	12	None	add
89	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getGlobalPreviousTime();    final  double  currentT  =  interpolator.getConversationTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	12	None	add
90	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousSize();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  final  double  currentT  =  interpolator.getPreviousSize();  [BUGGY]    resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousSize();	  final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
91	[BUG]  [BUGGY]  previousT  =  previousT  -  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  previousT  =  previousT  -  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  previousT  -  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();    [BUGGY]  Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	      if(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
