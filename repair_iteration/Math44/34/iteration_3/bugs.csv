bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  currentT  =  existingT.getGlobalCurrentTime();  [CE]  cannot  find  symbol  existingT  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  existingT.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  existingT.getGlobalCurrentTime();	  final    double    currentT    =    intersectableODE.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  existingT	58	None	replace
2	[BUG]  [BUGGY]  eventsStates.add(previousT);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  eventsStates.add(previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventsStates.add(previousT);	  eventStates.add(previousT);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	15	None	replace
3	[BUG]  [BUGGY]  eventStates.add(previousT  -  previousT);  [CE]  cannot  find  symbol  eventStates  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  eventStates.add(previousT  -  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventStates.add(previousT  -  previousT);	  eventStates.add(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventStates	15	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  currentT);  [CE]  cannot  find  symbol  currentT  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  currentT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  currentT);	  Preconditions.checkState(previousT    ==    previousT);    	non-compiled	[CE]  cannot  find  symbol  currentT	78	None	replace
5	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	33	None	add
6	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  previousT  =  interpolator.getPreviousTime()  -  previousT;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  previousT  =  interpolator.getPreviousTime()  -  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    final  double  previousT  =  interpolator.getPreviousTime()  -  previousT;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	33	None	add
7	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
8	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
9	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  previousT);  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  previousT);	  Preconditions.checkState(previousT    >=    null);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	19	None	replace
11	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getPrevious();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getPrevious();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getPrevious();	  final    double    currentT    =    interpolator.getPrevious();    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
12	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getPrevious();  [CE]  cannot  find  symbol  interpolator  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getPrevious();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getPrevious();	  final    double    currentT    =    interpolator.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  interpolator	22	None	replace
13	[BUG]  [BUGGY]  final  int[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  int[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  int[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    EventState[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
14	[BUG]  [BUGGY]  final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    EventState[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
15	[BUG]  [BUGGY]  final  byte[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  byte[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  byte[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    EventState[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
16	[BUG]  [BUGGY]  final  boolean  isLastStep  =  getEvents().toArray(new  EventState[previousT]);  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  boolean  isLastStep  =  getEvents().toArray(new  EventState[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  boolean  isLastStep  =  getEvents().toArray(new  EventState[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    EventState[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  isLastStep);  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  isLastStep);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  orderingSign,  isLastStep);	  Preconditions.checkState(previousT!=    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	51	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  isLastStep);  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  isLastStep);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  null,  orderingSign,  isLastStep);	  Preconditions.checkState(previousT!=    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	51	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  tEnd);  [CE]  incomparable  types:  double  and  <null>  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  orderingSign,  tEnd);	  Preconditions.checkState(previousT!=    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	51	None	replace
20	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getPreviousSize();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getPreviousSize();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getPreviousSize();	  final    double    currentT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  double  cannot  be  dereferenced	90	None	replace
21	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getPreviousSize();  [CE]  cannot  find  symbol  interpolator  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getPreviousSize();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getPreviousSize();	  final    double    currentT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol  interpolator	90	None	replace
22	[BUG]  [BUGGY]  state.reinitializeBegin(eventState,  previousT);  [CE]  cannot  find  symbol  eventState  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(eventState,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(eventState,  previousT);	  state.reinitializeBegin(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventState	45	None	replace
23	[BUG]  [BUGGY]  this.expandableODE.evaluate(previousT,  eventT);  [CE]  cannot  find  symbol  eventT  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  this.expandableODE.evaluate(previousT,  eventT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	this.expandableODE.evaluate(previousT,  eventT);	  this.expandableODE.evaluate(eventT,    previousT);    	non-compiled	[CE]  cannot  find  symbol  eventT	82	None	replace
24	[BUG]  [BUGGY]  this.expandableODE.evaluate(currentT,  previousT);  [CE]  cannot  find  symbol  currentT  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  this.expandableODE.evaluate(currentT,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	this.expandableODE.evaluate(currentT,  previousT);	  this.expandableODE.evaluate(eventT,    previousT);    	non-compiled	[CE]  cannot  find  symbol  currentT	82	None	replace
25	[BUG]  [BUGGY]  this.expandableODE.evaluate(expandable,  previousT);  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  this.expandableODE.evaluate(expandable,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	this.expandableODE.evaluate(expandable,  previousT);	  this.expandableODE.evaluate(eventT,    previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	82	None	replace
26	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(previousT,  eventT);  [CE]  cannot  find  symbol  eventT  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(previousT,  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(previousT,  eventT);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventT	17	None	replace
27	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(previousT,  eventSign);  [CE]  cannot  find  symbol  eventSign  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(previousT,  eventSign);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(previousT,  eventSign);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventSign	17	None	replace
28	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(eventT,  previousT);  [CE]  cannot  find  symbol  eventT  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(eventT,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(eventT,  previousT);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventT	17	None	replace
29	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(eventsInitialized,  previousT);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(eventsInitialized,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(eventsInitialized,  previousT);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
30	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventT);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventT);	  final    double[]    eventsInitialized    =    getEvents(),    previousT);    	non-compiled	[CE]  ';'  expected	18	None	replace
31	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  eventT);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  eventT);	  final    double[]    eventsInitialized    =    getEvents(),    previousT);    	non-compiled	[CE]  ';'  expected	18	None	replace
32	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventSign);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventSign);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventSign);	  final    double[]    eventsInitialized    =    getEvents(),    previousT);    	non-compiled	[CE]  ';'  expected	18	None	replace
33	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventEnd);  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  previousT,  eventEnd);	  final    double[]    eventsInitialized    =    getEvents(),    previousT);    	non-compiled	[CE]  ';'  expected	18	None	replace
34	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getInterval();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getInterval();	  final    double    currentT    =    interpolator.getInterval();    	non-compiled	[CE]  double  cannot  be  dereferenced	70	None	replace
35	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getInterval();  [CE]  cannot  find  symbol  interpolator  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getInterval();	  final    double    currentT    =    interpolator.getInterval();    	non-compiled	[CE]  cannot  find  symbol  interpolator	70	None	replace
36	[BUG]  [BUGGY]  final  int[]  eventsInitialized  =  getEvents().toArray(new  int[previousT]);  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  int[]  eventsInitialized  =  getEvents().toArray(new  int[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  int[]  eventsInitialized  =  getEvents().toArray(new  int[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
37	[BUG]  [BUGGY]  final  float[]  eventsInitialized  =  getEvents().toArray(new  float[previousT]);  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  float[]  eventsInitialized  =  getEvents().toArray(new  float[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  float[]  eventsInitialized  =  getEvents().toArray(new  float[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
38	[BUG]  [BUGGY]  final  byte[]  eventsInitialized  =  getEvents().toArray(new  byte[previousT]);  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  byte[]  eventsInitialized  =  getEvents().toArray(new  byte[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  byte[]  eventsInitialized  =  getEvents().toArray(new  byte[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
39	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(previousT);  }  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(previousT);  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  state	7	None	replace
40	[BUG]  [BUGGY]  for(EventState  currentEvent  :  previousT)  {  state.reinitializeBegin(interpolator);  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  previousT)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  previousT)  {  state.reinitializeBegin(interpolator);  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	7	None	replace
41	[BUG]  [BUGGY]  for(EventState  state  :  eventsStates)  {  state.reinitializeBegin(previousT);  }  [CE]  method  reinitializeBegin  in  class  EventState  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  state  :  eventsStates)  {  state.reinitializeBegin(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  state  :  eventsStates)  {  state.reinitializeBegin(previousT);  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  method  reinitializeBegin  in  class  EventState  cannot  be  applied  to  given  types;	7	None	replace
42	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.resetOccurred  =  true;  }  [CE]  cannot  find  symbol  state  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.resetOccurred  =  true;  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsStates)  {  state.resetOccurred  =  true;  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  state	7	None	replace
43	[BUG]  [BUGGY]  Iterator  iterator  =  this.stepHandlers.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  iterator  =  this.stepHandlers.iterator();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  this.stepHandlers.iterator();	  Iterator    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	72	None	replace
44	[BUG]  [BUGGY]  Iterator  iterator  =  previousT.iterator();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  iterator  =  previousT.iterator();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  previousT.iterator();	  Iterator    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  double  cannot  be  dereferenced	72	None	replace
45	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStandardPreviousTime();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getStandardPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStandardPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
46	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	88	None	replace
47	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	88	None	replace
48	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	88	None	replace
49	[BUG]  [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	14	None	replace
50	[BUG]  [BUGGY]  for(EventState  currentEvent  :  this.events)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  events  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  this.events)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  this.events)  {  eventStates.add(currentEvent);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  events	14	None	replace
51	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  eventStates.add(previousT);  }  [CE]  cannot  find  symbol  eventStates  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  eventStates.add(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventStates)  {  eventStates.add(previousT);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	14	None	replace
52	[BUG]  [BUGGY]  static  final  long  currentT  =  interpolator.getGlobalCurrentTime();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  static  final  long  currentT  =  interpolator.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	static  final  long  currentT  =  interpolator.getGlobalCurrentTime();	  static    final    double    currentT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
53	[BUG]  [BUGGY]  static  final  double  currentT  =  interpolator.getPreviousTime();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  static  final  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	static  final  double  currentT  =  interpolator.getPreviousTime();	  static    final    double    currentT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
54	[BUG]  [BUGGY]  static  final  double  currentT  =  previousT.getGlobalCurrentTime();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  static  final  double  currentT  =  previousT.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	static  final  double  currentT  =  previousT.getGlobalCurrentTime();	  static    final    double    currentT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
55	[BUG]  [BUGGY]  static  final  double  currentT  =  interpolator.getNext();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  static  final  double  currentT  =  interpolator.getNext();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	static  final  double  currentT  =  interpolator.getNext();	  static    final    double    currentT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkNotNull(expandable);  [CE]  cannot  find  symbol  Preconditions  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkNotNull(expandable);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(expandable);	  Preconditions.checkNotNull(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	67	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkNotNull(expandableT);  [CE]  cannot  find  symbol  expandableT  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkNotNull(expandableT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(expandableT);	  Preconditions.checkNotNull(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  expandableT	67	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(expandable);  [CE]  cannot  find  symbol  Preconditions  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(expandable);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(expandable);	  Preconditions.checkNotNull(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	67	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  t0);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  t0);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  t0);	  Preconditions.checkState(previousT    ==    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	25	None	replace
60	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  this.eventsStates.iterator();	  Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	46	None	replace
61	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [CE]  cannot  find  symbol  events  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  this.events.iterator();	  Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  events	46	None	replace
62	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  previousT.iterator();  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  <  EventState>  iterator  =  previousT.iterator();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  previousT.iterator();	  Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  double  cannot  be  dereferenced	46	None	replace
63	[BUG]  [BUGGY]  final  double  currentT  =  this.expT.getNext();  [CE]  cannot  find  symbol  expT  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.expT.getNext();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.expT.getNext();	  final    double    currentT    =    this.interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol  expT	64	None	replace
64	[BUG]  [BUGGY]  Iterator  iterator  =  events.iterator();  [CE]  cannot  find  symbol  events  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  iterator  =  events.iterator();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  events.iterator();	  Iterator    iterator    =    this.eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  events	80	None	replace
65	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	4	None	replace
66	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	4	None	replace
67	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	4	None	replace
68	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    +    1;    final  double  currentT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	31	None	add
69	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  final  double  previousT  =  interpolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  final  double  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    +    1;    final  double  previousT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	31	None	add
70	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  Final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  Final  double  currentT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    +    1;    Final  double  currentT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
71	[BUG]  [BUGGY]  final  double  currentT  =  interface.getPreviousTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getPreviousTime();	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
72	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
73	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
74	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  eventSign.values();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  eventSign.values();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  eventSign.values();	  final    double[]    eventsInitialized    =    getEvents().values();    	non-compiled	[CE]  ';'  expected	62	None	replace
75	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents().events();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents().events();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents().events();	  final    double[]    eventsInitialized    =    getEvents().values();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  /  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getPreviousTime()  /  1;	  final    double    currentT    =    interpolator.getPreviousTime()    +    1;    	compilable	  [FE]  AssertionError  	32	1	replace
77	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  /  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  /  1;	  final    double    currentT    =    interpolator.getPreviousTime()    +    1;    	compilable	  [FE]  AssertionError  	32	1	replace
78	[BUG]  [BUGGY]  final  double  currentT  =  currentEvent.getGlobalCurrentTime();  [CE]  cannot  find  symbol  currentEvent  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  currentEvent.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  currentEvent.getGlobalCurrentTime();	  final    double    currentT    =    eventT.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  currentEvent	41	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  t0  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    ==    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  t0	9	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  t0  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    ==    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  t0	9	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  t0  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  t0);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    ==    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  t0	9	None	replace
82	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  previousT  =  interpolator.getPreviousTime();	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
83	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getNextTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  previousT  =  interpolator.getNextTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  previousT  =  interpolator.getNextTime();	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  state.reinitializeBegin(previousT));  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  state.reinitializeBegin(previousT));  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  state.reinitializeBegin(previousT));	  Preconditions.checkState(previousT    >>    null);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	71	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  eventT);  [CE]  cannot  find  symbol  eventT  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  eventT);	  Preconditions.checkNotNull(eventT);    	non-compiled	[CE]  cannot  find  symbol  eventT	53	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  eventT);  [CE]  cannot  find  symbol  eventT  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  eventT);	  Preconditions.checkNotNull(eventT);    	non-compiled	[CE]  cannot  find  symbol  eventT	53	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  maxCheckInterval);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  maxCheckInterval);	  Preconditions.checkState(previousT    ==    convergence);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	39	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  state.maxCheckInterval);  [CE]  cannot  find  symbol  state  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  state.maxCheckInterval);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  state.maxCheckInterval);	  Preconditions.checkState(previousT    ==    convergence);    	non-compiled	[CE]  cannot  find  symbol  state	39	None	replace
89	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getStepInterval();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getStepInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getStepInterval();	  final    double    currentT    =    interpolator.getStepInterval();    	non-compiled	[CE]  double  cannot  be  dereferenced	86	None	replace
90	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStepInterval()  -  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getStepInterval()  -  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStepInterval()  -  1;	  final    double    currentT    =    interpolator.getStepInterval();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
91	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	26	None	replace
92	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	26	None	replace
93	[BUG]  [BUGGY]  final  double  currentT  =  eventT.getNext();  [CE]  cannot  find  symbol  eventT  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  eventT.getNext();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  eventT.getNext();	  final    double    currentT    =    previousT.getNext();    	non-compiled	[CE]  cannot  find  symbol  eventT	21	None	replace
94	[BUG]  [BUGGY]  final  double  currentT  =  eventT.getPreviousTime();  [CE]  cannot  find  symbol  eventT  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  eventT.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  eventT.getPreviousTime();	  final    double    currentT    =    previousT.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol  eventT	30	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
98	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getPreviousT();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getPreviousT();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getPreviousT();	  final    double    currentT    =    interpolator.getPreviousT();    	non-compiled	[CE]  double  cannot  be  dereferenced	73	None	replace
99	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getPreviousT();  [CE]  cannot  find  symbol  interpolator  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getPreviousT();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getPreviousT();	  final    double    currentT    =    interpolator.getPreviousT();    	non-compiled	[CE]  cannot  find  symbol  interpolator	73	None	replace
100	[BUG]  [BUGGY]  Preconditions.checkNotNull(expandableT,  previousT);  [CE]  cannot  find  symbol  expandableT  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkNotNull(expandableT,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(expandableT,  previousT);	  Preconditions.checkNotNull(expandableODE,    previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableT	69	None	replace
101	[BUG]  [BUGGY]  Preconditions.checkNotNull(expandable,  previousT);  [CE]  cannot  find  symbol  Preconditions  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkNotNull(expandable,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(expandable,  previousT);	  Preconditions.checkNotNull(expandableODE,    previousT);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	69	None	replace
102	[BUG]  [BUGGY]  Preconditions.checkNotNull(previousT,  expandable);  [CE]  cannot  find  symbol  Preconditions  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkNotNull(previousT,  expandable);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(previousT,  expandable);	  Preconditions.checkNotNull(expandableODE,    previousT);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	69	None	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  expandable);  [CE]  incomparable  types:  double  and  ExpandableStatefulODE  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  expandable);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  expandable);	  Preconditions.checkNotNull(expandableODE,    previousT);    	non-compiled	[CE]  incomparable  types:  double  and  ExpandableStatefulODE	69	None	replace
104	[BUG]  [BUGGY]  final  double  currentT  =  eventT.getNextTime();  [CE]  cannot  find  symbol  eventT  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  eventT.getNextTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  eventT.getNextTime();	  final    double    currentT    =    previousT.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  eventT	43	None	replace
105	[BUG]  [BUGGY]  previousT  =  previousT  -  t0)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  previousT  =  previousT  -  t0)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  previousT  -  t0)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  previousT    =    previousT    -    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
106	[BUG]  [BUGGY]  previousT  =  previousT  -  tStart)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  previousT  =  previousT  -  tStart)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  previousT  -  tStart)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  previousT    =    previousT    -    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
107	[BUG]  [BUGGY]  previousT  =  eventStates.size()  -  tEnd)  {  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  previousT  =  eventStates.size()  -  tEnd)  {  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  eventStates.size()  -  tEnd)  {  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }	  previousT    =    previousT    -    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  convergence);  [CE]  cannot  find  symbol  convergence  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  convergence);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  convergence);	  Preconditions.checkState(previousT    >>    t0);    	non-compiled	[CE]  cannot  find  symbol  convergence	54	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  t0);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  t0);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  t0);	  Preconditions.checkState(previousT    >    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	1	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	92	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	92	None	replace
112	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	92	None	replace
113	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getConversationTime();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getConversationTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getConversationTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getConversationTime();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
114	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getConversationTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	89	None	replace
115	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getConversationTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	89	None	replace
116	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getConversationTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	89	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  tEnd);  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  null,  orderingSign,  tEnd);	  Preconditions.checkState(previousT    ==    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	20	None	replace
118	[BUG]  [BUGGY]  final  double  currentT  =  interface.getGlobalPreviousTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getGlobalPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getGlobalPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interface.getGlobalPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
119	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	29	None	replace
120	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	29	None	replace
121	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	29	None	replace
122	[BUG]  [BUGGY]  state.reinitializeBegin(eventT);  [CE]  cannot  find  symbol  eventT  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(eventT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(eventT);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  eventT	61	None	replace
123	[BUG]  [BUGGY]  state.reinitializeBegin(explicitT);  [CE]  cannot  find  symbol  explicitT  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(explicitT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(explicitT);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  explicitT	61	None	replace
124	[BUG]  [BUGGY]  final  double  currentT  =  this.currentEvent.getNextTime();  [CE]  cannot  find  symbol  currentEvent  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.currentEvent.getNextTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.currentEvent.getNextTime();	  final    double    currentT    =    this.interpolator.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  currentEvent	44	None	replace
125	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  final  double  currentT  =  interpolator.getCurrentTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  final  double  currentT  =  interpolator.getCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getCurrentTime();    final  double  currentT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	49	None	add
126	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  final  double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  final  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getCurrentTime();    final  double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	49	None	add
127	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  Final  double  currentT  =  interpolator.getCurrentTime();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  Final  double  currentT  =  interpolator.getCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getCurrentTime();    Final  double  currentT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  not  a  statement	49	None	add
128	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getLocalPreviousTime();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getLocalPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getLocalPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getLocalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
129	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getLocalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
130	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getLocalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
131	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getLocalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  Preconditions  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >=    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	57	None	replace
133	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  Preconditions  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >=    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	57	None	replace
134	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  Preconditions  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >=    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	57	None	replace
135	[BUG]  [BUGGY]  int  stepStart  =  getStep(previousT,  previousT);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  int  stepStart  =  getStep(previousT,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(previousT,  previousT);	  int    stepStart    =    getStep(previousT);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
136	[BUG]  [BUGGY]  int  stepStart  =  getStep(previousT  -  1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  int  stepStart  =  getStep(previousT  -  1);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(previousT  -  1);	  int    stepStart    =    getStep(previousT);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
137	[BUG]  [BUGGY]  int  stepStart  =  getStep(previousT,  tEnd);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  int  stepStart  =  getStep(previousT,  tEnd);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(previousT,  tEnd);	  int    stepStart    =    getStep(previousT);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
138	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getNextStep();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getNextStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getNextStep();	  final    double    currentT    =    interpolator.getNextStep();    	non-compiled	[CE]  double  cannot  be  dereferenced	48	None	replace
139	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getNextStep();  [CE]  cannot  find  symbol  interpolator  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getNextStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getNextStep();	  final    double    currentT    =    interpolator.getNextStep();    	non-compiled	[CE]  cannot  find  symbol  interpolator	48	None	replace
140	[BUG]  [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventsStates.add(currentEvent);  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventsStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  previousT)  {  eventsStates.add(currentEvent);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	13	None	replace
141	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsInitialized)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  eventsInitialized  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventsInitialized)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsInitialized)  {  eventStates.add(currentEvent);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	13	None	replace
142	[BUG]  [BUGGY]  for(EventState  currentEvent  :  events)  {  eventStates.add(previousT);  }  [CE]  cannot  find  symbol  events  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  events)  {  eventStates.add(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  events)  {  eventStates.add(previousT);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  events	13	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  previousT);  [CE]  cannot  find  symbol  Preconditions  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  previousT);	  Preconditions.checkState(previousT    >=    t0);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	replace
144	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsInitialized)  {  eventStates.add(interpolator);  }  [CE]  cannot  find  symbol  eventsInitialized  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventsInitialized)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsInitialized)  {  eventStates.add(interpolator);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	11	None	replace
145	[BUG]  [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventsStates.add(interpolator);  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventsStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  previousT)  {  eventsStates.add(interpolator);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	11	None	replace
146	[BUG]  [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventStates.add(interpolator);  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  previousT)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  previousT)  {  eventStates.add(interpolator);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	11	None	replace
147	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getStandardStep();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getStandardStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getStandardStep();	  final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  double  cannot  be  dereferenced	47	None	replace
148	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getStandardStep();  [CE]  cannot  find  symbol  interpolator  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getStandardStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getStandardStep();	  final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  cannot  find  symbol  interpolator	47	None	replace
149	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	27	None	replace
150	[BUG]  [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  ==  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	27	None	replace
151	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	27	None	replace
152	[BUG]  [BUGGY]  final  double  currentT  =  previousT.getCurrentTime();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  previousT.getCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  previousT.getCurrentTime();	  final    double    currentT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  double  cannot  be  dereferenced	50	None	replace
153	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTTime();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getCurrentTTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getCurrentTTime();	  final    double    currentT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  /  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getPreviousTime()  /  previousT;	  final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    	compilable	  [FE]  AssertionError  	34	1	replace
155	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  /  previousT;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  /  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  /  previousT;	  final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    	compilable	  [FE]  AssertionError  	34	1	replace
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  *  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	final  double  currentT  =  interpolator.getPreviousTime()  *  previousT;	  final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    	compilable	  [FE]  AssertionError  	34	1	replace
157	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  *  previousT;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  *  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  *  previousT;	  final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    	compilable	  [FE]  AssertionError  	34	1	replace
158	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  eventT;  [CE]  cannot  find  symbol  eventT  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  eventT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  -  eventT;	  final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    	non-compiled	[CE]  cannot  find  symbol  eventT	34	None	replace
159	[BUG]  [BUGGY]  events.add(previousT);  [CE]  cannot  find  symbol  events  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  events.add(previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	events.add(previousT);	  eventStates.add(interpolator);    	non-compiled	[CE]  cannot  find  symbol  events	12	None	replace
160	[BUG]  [BUGGY]  final  double  t0  =  interpolator.getGlobalCurrentTime();  [CE]  cannot  find  symbol  currentT  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  t0  =  interpolator.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  t0  =  interpolator.getGlobalCurrentTime();	  if(previousT    <    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  cannot  find  symbol  currentT	76	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  t0);  [CE]  cannot  find  symbol  t0  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  t0);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  t0);	  Preconditions.checkState(previousT    <    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	3	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  =  tEnd);	  Preconditions.checkState(previousT    <    tEnd);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
163	[BUG]  [BUGGY]  for(EventState  currentEvent  :  this.events)  {  eventStates.add(interpolator);  }  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  this.events)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  this.events)  {  eventStates.add(interpolator);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  events	10	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
167	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getStandardEvents(previousT);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getStandardEvents(previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getStandardEvents(previousT);	  final    double[]    eventsInitialized    =    getStandardEvents();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
168	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEventsInitialized();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEventsInitialized();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEventsInitialized();	  final    double[]    eventsInitialized    =    getStandardEvents();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
169	[BUG]  [BUGGY]  state.reinitializeBegin(previousT,  interpolator);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(previousT,  interpolator);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(previousT,  interpolator);	  state.reinitializeBegin(interpolator);    	non-compiled	[CE]  cannot  find  symbol  state	24	None	replace
170	[BUG]  [BUGGY]  state.resetOccurred(previousT);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.resetOccurred(previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.resetOccurred(previousT);	  state.reinitializeBegin(interpolator);    	non-compiled	[CE]  cannot  find  symbol  state	24	None	replace
171	[BUG]  [BUGGY]  if(previousT!=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(previousT);  }	  if(previousT    >=    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
172	[BUG]  [BUGGY]  final  double  currentT  =  interface.getPreviousSize();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getPreviousSize();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getPreviousSize();	  final    double    currentT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
173	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  t0);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  t0  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  t0);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  t0);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >=    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  t0	57	None	replace
174	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  tStart);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  tStart  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  tStart);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  tStart);  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >=    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  tStart	57	None	replace
175	[BUG]  [BUGGY]  final  double  currentT  =  interface.getLocalPreviousTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getLocalPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getLocalPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interface.getGlobalPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
176	[BUG]  [BUGGY]  final  double  currentT  =  interface.getStandardPreviousTime();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getStandardPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getStandardPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interface.getGlobalPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
177	[BUG]  [BUGGY]  final  double  currentT  =  intersectableODE.getPreviousTime();  [CE]  cannot  find  symbol  intersectableODE  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  intersectableODE.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  intersectableODE.getPreviousTime();	  final    double    currentT    =    previousT.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol  intersectableODE	30	None	replace
178	[BUG]  [BUGGY]  final  double  currentT  =  interface.getNextStep();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getNextStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getNextStep();	  final    double    currentT    =    interpolator.getNextStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
179	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousStep();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousStep();	  final    double    currentT    =    interpolator.getNextStep();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
180	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT  +  1);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  previousT  +  1);	  final    double[]    eventsInitialized    =    getEvents(),    previousT);    	non-compiled	[CE]  ';'  expected	18	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  t);  [CE]  cannot  find  symbol  t  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  t);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  t);	  Preconditions.checkState(previousT    ==    previousT);    	non-compiled	[CE]  cannot  find  symbol  t	78	None	replace
182	[BUG]  [BUGGY]  state.reinitializeBegin(expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(expandableODE);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(expandableODE);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	61	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  t);  [CE]  cannot  find  symbol  t  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  t);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  t);	  Preconditions.checkNotNull(eventT);    	non-compiled	[CE]  cannot  find  symbol  t	53	None	replace
184	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tEnd  +  1);  [CE]  cannot  find  symbol  Preconditions  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  tEnd  +  1);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tEnd  +  1);	  Preconditions.checkState(previousT    >    tEnd);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	1	None	replace
185	[BUG]  [BUGGY]  for(EventState  currentEvent  :  events.length)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  events  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  events.length)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  events.length)  {  eventStates.add(currentEvent);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  events	13	None	replace
186	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  eventStates.add(interpolator);  }  [CE]  cannot  find  symbol  eventStates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventStates)  {  eventStates.add(interpolator);  }	  for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	11	None	replace
187	[BUG]  [BUGGY]  final  double  currentT  =  iterator.getNext();  [CE]  cannot  find  symbol  iterator  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  iterator.getNext();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  iterator.getNext();	  final    double    currentT    =    this.interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol  iterator	64	None	replace
188	[BUG]  [BUGGY]  final  double  currentT  =  iterator.getNextTime();  [CE]  cannot  find  symbol  iterator  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  iterator.getNextTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  iterator.getNextTime();	  final    double    currentT    =    this.interpolator.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
189	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getPreviousTime();  [CE]  cannot  find  symbol  interpolator  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getPreviousTime();	  final    double    currentT    =    this.interpolator.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	44	None	replace
190	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getNextPreviousTime();  [CE]  cannot  find  symbol  interpolator  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getNextPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getNextPreviousTime();	  final    double    currentT    =    this.interpolator.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	44	None	replace
191	[BUG]  [BUGGY]  eventsInitialized.add(interpolator);  [CE]  cannot  find  symbol  eventsInitialized  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  eventsInitialized.add(interpolator);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventsInitialized.add(interpolator);	  eventStates.add(interpolator);    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	12	None	replace
192	[BUG]  [BUGGY]  final  double  currentT  =  interface.getPrevious();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getPrevious();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getPrevious();	  final    double    currentT    =    interpolator.getPrevious();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
193	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  final  double  currentT  =  interfacepolator.getPreviousTime()  +  1;  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  +  1;  final  double  currentT  =  interfacepolator.getPreviousTime()  +  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    +    1;    final  double  currentT  =  interfacepolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	31	None	add
194	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  currentT);  [CE]  cannot  find  symbol  currentT  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  currentT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  currentT);	  Preconditions.checkState(previousT!=    previousT);    	non-compiled	[CE]  cannot  find  symbol  currentT	79	None	replace
195	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	5	None	replace
196	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	5	None	replace
197	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
198	[BUG]  [BUGGY]  Preconditions.checkState(orderingSign!=  null,  previousT);  [CE]  cannot  find  symbol  orderingSign  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(orderingSign!=  null,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(orderingSign!=  null,  previousT);	  Preconditions.checkState(previousT!=    null,    orderingSign);    	non-compiled	[CE]  cannot  find  symbol  orderingSign	51	None	replace
199	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  tEnd);  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  tEnd);	  Preconditions.checkState(previousT    >>    null);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	71	None	replace
200	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  currentEvent);  [CE]  cannot  find  symbol  currentEvent  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  currentEvent);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  currentEvent);	  Preconditions.checkState(previousT    ==    eventT);    	non-compiled	[CE]  cannot  find  symbol  currentEvent	40	None	replace
201	[BUG]  [BUGGY]  if(previousT  >=  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  >=  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  >=  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }	  if(previousT    >    tEnd)    {    if(state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
202	[BUG]  [BUGGY]  eventStates.add(currentT);  [CE]  cannot  find  symbol  currentT  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  eventStates.add(currentT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventStates.add(currentT);	  eventStates.add(previousT);    	non-compiled	[CE]  cannot  find  symbol  currentT	15	None	replace
203	[BUG]  [BUGGY]  eventStates.add(previousT  -  1);  [CE]  cannot  find  symbol  eventStates  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  eventStates.add(previousT  -  1);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventStates.add(previousT  -  1);	  eventStates.add(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventStates	15	None	replace
204	[BUG]  [BUGGY]  Iterator  iterator  =  eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  iterator  =  eventStates.iterator();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  eventStates.iterator();	  Iterator    iterator    =    otherEvents.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	37	None	replace
205	[BUG]  [BUGGY]  final  double  currentT  =  this.eventState.getGlobalCurrentTime();  [CE]  cannot  find  symbol  eventState  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.eventState.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.eventState.getGlobalCurrentTime();	  final    double    currentT    =    eventT.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  eventState	41	None	replace
206	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  eventStates  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventStates)  {  eventStates.add(currentEvent);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	14	None	replace
207	[BUG]  [BUGGY]  final  double  currentT  =  intersectableODE.getNextTime();  [CE]  cannot  find  symbol  intersectableODE  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  intersectableODE.getNextTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  intersectableODE.getNextTime();	  final    double    currentT    =    previousT.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  intersectableODE	43	None	replace
208	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  state.values();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  state.values();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  state.values();	  final    double[]    eventsInitialized    =    getEvents().values();    	non-compiled	[CE]  ';'  expected	62	None	replace
209	[BUG]  [BUGGY]  static  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  static  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	static  final  double  currentT  =  interpolator.getGlobalPreviousTime();	  static    final    double    currentT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
210	[BUG]  [BUGGY]  state.initializeBegin(previousT);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.initializeBegin(previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.initializeBegin(previousT);	  state.reinitializeBegin(interpolator);    	non-compiled	[CE]  cannot  find  symbol  state	24	None	replace
211	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  iterator  =  this.eventsStates.values().iterator();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  iterator  =  this.eventsStates.values().iterator();	  Iterator    iterator    =    this.eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
212	[BUG]  [BUGGY]  int  stepStart  =  getStep(currentT);  [CE]  cannot  find  symbol  currentT  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  int  stepStart  =  getStep(currentT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(currentT);	  int    stepStart    =    getStep(previousT);    	non-compiled	[CE]  cannot  find  symbol  currentT	83	None	replace
213	[BUG]  [BUGGY]  int  stepStart  =  getStep(previousT,  orderingSign);  [CE]  cannot  find  symbol  orderingSign  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  int  stepStart  =  getStep(previousT,  orderingSign);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(previousT,  orderingSign);	  int    stepStart    =    getStep(previousT);    	non-compiled	[CE]  cannot  find  symbol  orderingSign	83	None	replace
214	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  stepHandlers.iterator();  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  <  EventState>  iterator  =  stepHandlers.iterator();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  stepHandlers.iterator();	  Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  incompatible  types	46	None	replace
215	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  <  EventState>  iterator  =  eventsStates.values().iterator();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  eventsStates.values().iterator();	  Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
216	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents().toArray(new  double[previousT  -  1]);  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents().toArray(new  double[previousT  -  1]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents().toArray(new  double[previousT  -  1]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
217	[BUG]  [BUGGY]  final  int[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  int[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  int[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
218	[BUG]  [BUGGY]  final  boolean  isLastStep  =  getEvents().toArray(new  double[previousT]);  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  boolean  isLastStep  =  getEvents().toArray(new  double[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  boolean  isLastStep  =  getEvents().toArray(new  double[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
219	[BUG]  [BUGGY]  final  double  currentT  =  interface.getStandardStep();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getStandardStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getStandardStep();	  final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
220	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStandardStep()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getStandardStep()  +  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStandardStep()  +  1;	  final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
221	[BUG]  [BUGGY]  this.expandableODE.evaluate(event,  previousT);  [CE]  cannot  find  symbol  event  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  this.expandableODE.evaluate(event,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	this.expandableODE.evaluate(event,  previousT);	  this.expandableODE.evaluate(eventT,    previousT);    	non-compiled	[CE]  cannot  find  symbol  event	82	None	replace
222	[BUG]  [BUGGY]  final  double  currentT  =  interface.getPreviousT();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getPreviousT();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getPreviousT();	  final    double    currentT    =    interpolator.getPreviousT();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
223	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(interpolator,  previousT);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(interpolator,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(interpolator,  previousT);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
224	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(interpolator.getPreviousT());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(interpolator.getPreviousT());  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(interpolator.getPreviousT());	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
225	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(eventT);  [CE]  cannot  find  symbol  eventT  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(eventT);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol  eventT	17	None	replace
226	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(interpolator);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(interpolator);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(interpolator);	  final    double[]    eventsInitialized    =    getEvents(previousT);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
227	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(currentT);  }  [CE]  cannot  find  symbol  currentT  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(currentT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(currentT);  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  currentT	7	None	replace
228	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  state.reinitializeBegin(previousT);  }  [CE]  cannot  find  symbol  eventStates  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  state.reinitializeBegin(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventStates)  {  state.reinitializeBegin(previousT);  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	7	None	replace
229	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  final  double  currentT  =  interface.getCurrentTime();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  final  double  currentT  =  interface.getCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getCurrentTime();    final  double  currentT  =  interface.getCurrentTime();	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
230	[BUG]  [BUGGY]  previousT  =  eventT  -  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  previousT  =  eventT  -  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  eventT  -  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  previousT    =    previousT    -    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
231	[BUG]  [BUGGY]  previousT  =  eventsStates  -  tEnd)  {  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  previousT  =  eventsStates  -  tEnd)  {  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  eventsStates  -  tEnd)  {  for(EventState  currentEvent  :  previousT)  {  eventStates.add(currentEvent);  }	  previousT    =    previousT    -    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
232	[BUG]  [BUGGY]  previousT  =  tEnd  -  previousT)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  previousT  =  tEnd  -  previousT)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	previousT  =  tEnd  -  previousT)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  previousT    =    previousT    -    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
233	[BUG]  [BUGGY]  final  double  currentT  =  interface.getInterval();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getInterval();	  final    double    currentT    =    interpolator.getInterval();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >>  tEnd);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >>  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >>  tEnd);	  Preconditions.checkState(previousT    >>    t0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	54	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkNotNull(previousT,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkNotNull(previousT,  expandableODE);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkNotNull(previousT,  expandableODE);	  Preconditions.checkNotNull(expandableODE,    previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	69	None	replace
236	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(orderingSign  ==  null,  previousT);  [CE]  cannot  find  symbol  orderingSign  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(orderingSign  ==  null,  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(orderingSign  ==  null,  previousT);	  Preconditions.checkState(previousT    ==    null,    orderingSign);    	non-compiled	[CE]  cannot  find  symbol  orderingSign	20	None	replace
238	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  previousT  =  interfacepolator.getPreviousTime()  -  previousT;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  previousT  =  interfacepolator.getPreviousTime()  -  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    final  double  previousT  =  interfacepolator.getPreviousTime()  -  previousT;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	33	None	add
239	[BUG]  [BUGGY]  final  double  currentT  =  this.expandableODE.getGlobalCurrentTime();  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.expandableODE.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.expandableODE.getGlobalCurrentTime();	  final    double    currentT    =    intersectable.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  expandableODE	84	None	replace
240	[BUG]  [BUGGY]  final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT  -  1]);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT  -  1]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT  -  1]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    EventState[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
241	[BUG]  [BUGGY]  final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT  +  1]);  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT  +  1]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  EventState[]  eventsInitialized  =  getEvents().toArray(new  EventState[previousT  +  1]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    EventState[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
242	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getConversationTime();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
243	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
244	[BUG]  [BUGGY]  final  double  currentT  =  interface.getStepInterval();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interface.getStepInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interface.getStepInterval();	  final    double    currentT    =    interpolator.getStepInterval();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
245	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStepInterval(previousT);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getStepInterval(previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStepInterval(previousT);	  final    double    currentT    =    interpolator.getStepInterval();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
246	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  else  {  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interface.getPreviousTime();  }  else  {	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
247	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >=  preT);  [CE]  cannot  find  symbol  preT  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >=  preT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >=  preT);	  Preconditions.checkState(previousT    >=    t0);    	non-compiled	[CE]  cannot  find  symbol  preT	2	None	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
250	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentPreviousTime();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getCurrentPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getCurrentPreviousTime();	  final    double    currentT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
251	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getNextPreviousTime();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getNextPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getNextPreviousTime();	  final    double    currentT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
252	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents().eventsInitialized();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents().eventsInitialized();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents().eventsInitialized();	  final    double[]    eventsInitialized    =    getEvents().values();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
253	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getConversationTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getConversationTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	89	None	replace
254	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEventsInitializingEvents();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEventsInitializingEvents();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEventsInitializingEvents();	  final    double[]    eventsInitialized    =    getStandardEvents();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
255	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  state);  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  state);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  null,  orderingSign,  state);	  Preconditions.checkState(previousT    ==    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	20	None	replace
256	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  state);  [CE]  incomparable  types:  double  and  <null>  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  state);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  orderingSign,  state);	  Preconditions.checkState(previousT    ==    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	20	None	replace
257	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  eventT);  [CE]  incomparable  types:  double  and  <null>  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  null,  orderingSign,  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  null,  orderingSign,  eventT);	  Preconditions.checkState(previousT    ==    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	20	None	replace
258	[BUG]  [BUGGY]  for(EventState  currentEvent  :  this.eventStates)  {  eventStates.add(currentEvent);  }  [CE]  cannot  find  symbol  eventStates  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  this.eventStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  this.eventStates)  {  eventStates.add(currentEvent);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	14	None	replace
259	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getStepInterval();  [CE]  cannot  find  symbol  interpolator  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getStepInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getStepInterval();	  final    double    currentT    =    interpolator.getStepInterval();    	non-compiled	[CE]  cannot  find  symbol  interpolator	86	None	replace
260	[BUG]  [BUGGY]  if(previousT  <  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  <  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  <  tEnd)  {  if(state.isInitialized)  {  state.reinitializeBegin(previousT);  }	  if(previousT    >    tEnd)    {    if(state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
261	[BUG]  [BUGGY]  int  stepStart  =  getStep(previousT  -  previousT);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  int  stepStart  =  getStep(previousT  -  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	int  stepStart  =  getStep(previousT  -  previousT);	  int    stepStart    =    getStep(previousT);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
262	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getStandardStep();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	29	None	replace
263	[BUG]  [BUGGY]  final  double  currentT  =  this.currentEvent.getGlobalCurrentTime();  [CE]  cannot  find  symbol  currentEvent  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.currentEvent.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.currentEvent.getGlobalCurrentTime();	  final    double    currentT    =    eventT.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  currentEvent	41	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	add	double  currentT  =  interpolator.getPreviousTime();	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interface.getPreviousTime();    	compilable	  [FE]  AssertionError  	55	1	replace
265	[BUG]  [BUGGY]  double  currentT  =  interpolator.getPreviousTime();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	double  currentT  =  interpolator.getPreviousTime();	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interface.getPreviousTime();    	compilable	  [FE]  AssertionError  	55	1	replace
266	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  this.expT;  [CE]  cannot  find  symbol  expT  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  this.expT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getPreviousTime()  -  this.expT;	  final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    	non-compiled	[CE]  cannot  find  symbol  expT	34	None	replace
267	[BUG]  [BUGGY]  this.expandableODE.evaluate(expandableT,  previousT);  [CE]  cannot  find  symbol  expandableT  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  this.expandableODE.evaluate(expandableT,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	this.expandableODE.evaluate(expandableT,  previousT);	  this.expandableODE.evaluate(eventT,    previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableT	82	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  t0,  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  t0,  tEnd);	  Preconditions.checkState(previousT    <    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	3	None	replace
269	[BUG]  [BUGGY]  state.reinitializeEnd(previousT);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeEnd(previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeEnd(previousT);	  state.reinitializeBegin(interpolator);    	non-compiled	[CE]  cannot  find  symbol  state	24	None	replace
270	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  currentT  =  interfacepolator.getPreviousTime()  -  previousT;  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  final  double  currentT  =  interfacepolator.getPreviousTime()  -  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    final  double  currentT  =  interfacepolator.getPreviousTime()  -  previousT;	  	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	33	None	add
271	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  Final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  Final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final    double    currentT    =    interpolator.getPreviousTime()    -    previousT;    Final  double  currentT  =  interpolator.getPreviousTime()  -  previousT;	  	non-compiled	[CE]  not  a  statement	33	None	add
272	[BUG]  [BUGGY]  eventStates.add(expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  eventStates.add(expandableODE);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	eventStates.add(expandableODE);	  eventStates.add(previousT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	15	None	replace
273	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  Preconditions  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    ==    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	9	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  Preconditions  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  tEnd);  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    ==    tEnd);    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  Preconditions	9	None	replace
275	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	4	None	replace
276	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	5	None	replace
277	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  IllegalStateException( " ");  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	5	None	replace
278	[BUG]  [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  cannot  find  symbol  eventStates  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  eventStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  eventStates)  {  state.reinitializeBegin(interpolator);  }	  for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	7	None	replace
279	[BUG]  [BUGGY]  for(EventState  currentEvent  :  this.eventStates)  {  eventStates.add(interpolator);  }  [CE]  cannot  find  symbol  eventStates  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  for(EventState  currentEvent  :  this.eventStates)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	for(EventState  currentEvent  :  this.eventStates)  {  eventStates.add(interpolator);  }	  for(EventState    currentEvent    :    events)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  cannot  find  symbol  eventStates	10	None	replace
280	[BUG]  [BUGGY]  final  double  currentT  =  this.previousT.getNextTime();  [CE]  cannot  find  symbol  previousT  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.previousT.getNextTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.previousT.getNextTime();	  final    double    currentT    =    previousT.getNextTime();    	non-compiled	[CE]  cannot  find  symbol  previousT	43	None	replace
281	[BUG]  [BUGGY]  state.reinitializeBegin(es1);  [CE]  cannot  find  symbol  es1  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(es1);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(es1);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  es1	61	None	replace
282	[BUG]  [BUGGY]  state.reinitializeBegin(es0);  [CE]  cannot  find  symbol  es0  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(es0);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(es0);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  es0	61	None	replace
283	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalPreviousTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	26	None	replace
284	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getLocalPreviousTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getLocalPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
285	[BUG]  [BUGGY]  if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(currentT);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(currentT);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT  <  tEnd)  {  if(!state.isInitialized)  {  state.reinitializeBegin(currentT);  }	  if(previousT    <    tEnd)    {    if(!state.isInitialized)    {    state.reinitializeBegin(previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
286	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStandardStep()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interpolator.getStandardStep()  -  1;  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interpolator.getStandardStep()  -  1;	  final    double    currentT    =    interpolator.getStandardStep();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  null);  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  null);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  null);	  Preconditions.checkState(previousT    >=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	19	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(interpolator);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
289	[BUG]  [BUGGY]  Preconditions.checkState(previousT  >  tStart);  [CE]  cannot  find  symbol  tStart  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  >  tStart);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  >  tStart);	  Preconditions.checkState(previousT    >    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	1	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  this.expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  this.expandableODE);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  this.expandableODE);	  Preconditions.checkState(previousT    ==    eventT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	40	None	replace
291	[BUG]  [BUGGY]  double  currentT  =  interpolator.getStandardPreviousTime();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  double  currentT  =  interpolator.getStandardPreviousTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	double  currentT  =  interpolator.getStandardPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getStandardPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
292	[BUG]  [BUGGY]  final  double  currentT  =  this.previousT.getNext();  [CE]  cannot  find  symbol  previousT  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.previousT.getNext();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.previousT.getNext();	  final    double    currentT    =    previousT.getNext();    	non-compiled	[CE]  cannot  find  symbol  previousT	21	None	replace
293	[BUG]  [BUGGY]  final  byte[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  byte[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  byte[]  eventsInitialized  =  getEvents().toArray(new  double[previousT]);	  final    double[]    eventsInitialized    =    getEvents().toArray(new    double[previousT]);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  eventT);  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT!=  null,  orderingSign,  eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT!=  null,  orderingSign,  eventT);	  Preconditions.checkState(previousT!=    null,    orderingSign);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	51	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  eventStates.add(currentEvent);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    eventStates.add(currentEvent);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
296	[BUG]  [BUGGY]  final  double  currentT  =  this.interpolator.getGlobalCurrentTime();  [CE]  cannot  find  symbol  interpolator  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.interpolator.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.interpolator.getGlobalCurrentTime();	  final    double    currentT    =    intersectable.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	84	None	replace
297	[BUG]  [BUGGY]  final  double  currentT  =  this.expandable.getGlobalCurrentTime();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  this.expandable.getGlobalCurrentTime();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  this.expandable.getGlobalCurrentTime();	  final    double    currentT    =    intersectable.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
298	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getPreviousTime();  final  double  currentT  =  interpolator.getNextTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getPreviousTime();    final    double    currentT    =    interpolator.getNextTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
299	[BUG]  [BUGGY]  final  double  currentT  =  interfacer.getInterval();  [CE]  cannot  find  symbol  interfacer  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double  currentT  =  interfacer.getInterval();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double  currentT  =  interfacer.getInterval();	  final    double    currentT    =    interpolator.getInterval();    	non-compiled	[CE]  cannot  find  symbol  interfacer	70	None	replace
300	[BUG]  [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  break;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  break;  }  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	if(previousT!=  null)  {  final  double  currentT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getPreviousTime();  }  else  {  break;  }	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	27	None	replace
301	[BUG]  [BUGGY]  state.reinitializeBegin(es0,  previousT);  [CE]  cannot  find  symbol  es0  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  state.reinitializeBegin(es0,  previousT);  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	state.reinitializeBegin(es0,  previousT);	  state.reinitializeBegin(previousT);    	non-compiled	[CE]  cannot  find  symbol  es0	45	None	replace
302	[BUG]  [BUGGY]  Preconditions.checkState(previousT  ==  this.maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  ==  this.maxCheckInterval);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  ==  this.maxCheckInterval);	  Preconditions.checkState(previousT    ==    convergence);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	39	None	replace
303	[BUG]  [BUGGY]  lastStep  =  interpolator.getLastStep();  [CE]  cannot  find  symbol  lastStep  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  lastStep  =  interpolator.getLastStep();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	lastStep  =  interpolator.getLastStep();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    final    double    currentT    =    interface.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol  lastStep	66	None	replace
304	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventHandlers.iterator();  [CE]  cannot  find  symbol  eventHandlers  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventHandlers.iterator();  [BUGGY]      resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Iterator  <  EventState>  iterator  =  this.eventHandlers.iterator();	  Iterator    <    EventState>    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventHandlers	46	None	replace
305	[BUG]  [BUGGY]  Preconditions.checkState(expandableT  >  previousT);  [CE]  cannot  find  symbol  expandableT  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(expandableT  >  previousT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(expandableT  >  previousT);	  Preconditions.checkNotNull(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  expandableT	67	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	Preconditions.checkState(previousT  <  =  tEnd)  {  for(EventState  currentEvent  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }	  Preconditions.checkState(previousT    >=    tEnd)    {    for(EventState    currentEvent    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
307	[BUG]  [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  this);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {  double  previousT  =  interpolator.getGlobalPreviousTime();      [BUGGY]  final  double[]  eventsInitialized  =  getEvents(),  previousT,  this);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	279	279	1	replace	final  double[]  eventsInitialized  =  getEvents(),  previousT,  this);	  final    double[]    eventsInitialized    =    getEvents(),    previousT);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
