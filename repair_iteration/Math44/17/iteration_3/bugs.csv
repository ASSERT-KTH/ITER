bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(consume,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(consume,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(consume,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  maxEvaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  assessments.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  MAX_VALUE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  MAX_VALUE);	  evaluates.setMaximalCount((    maxEvaluations    <    1)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
9	[BUG]  [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);	  evaluates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
10	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
11	[BUG]  [BUGGY]  int  stepSize  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStep(stepSize  +  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepSize  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStep(stepSize  +  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepSize  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStep(stepSize  +  maxEvaluations);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
12	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
13	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(1,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(1,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(1,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
14	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
15	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
16	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
17	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable,  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
18	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
19	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandeable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandeable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandeable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
20	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
24	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
25	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
26	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
27	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
28	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
29	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
30	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansionable,  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
33	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
34	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
35	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
36	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  luates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
38	[BUG]  [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  luates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
39	[BUG]  [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);	  luates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
40	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
41	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
42	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
43	[BUG]  [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  luates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
44	[BUG]  [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);	  luates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
45	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
46	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  int  stepStart  =  Math.max(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.max(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.max(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  int  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  int  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  0);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  0);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
51	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
54	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
55	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
56	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepSize);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepSize);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  maxEvaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
59	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
60	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansions,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansions,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansions,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
61	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);	  if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepSize(stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
62	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepSize(stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepSize(stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepSize(stepStart);	  if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepSize(stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
63	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepSize(stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  maxEvaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
66	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
67	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
68	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
69	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
70	[BUG]  [BUGGY]  evaluations.setMinimalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
71	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  1);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
72	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
73	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
74	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  minEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  minEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  minEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
75	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.size());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluates.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluates.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
79	[BUG]  [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
80	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
81	[BUG]  [BUGGY]  int  stepSize  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepSize  +  stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepSize  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepSize  +  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepSize  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepSize  +  stepStart);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepSize);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepSize);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepSize);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
83	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	  luates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
85	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
86	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
87	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepSize(stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepSize(stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setStepSize(stepStart);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepSize(stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  maxEvaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  maxEvaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  int  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(conventionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
92	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepSize);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepSize);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
97	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(1,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(1,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(1,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
98	[BUG]  [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluates.setMinimalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
99	[BUG]  [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMinimalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
100	[BUG]  [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  1);	  evaluates.setMinimalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
101	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convention,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convention,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convention,  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
102	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  maxCheckInterval);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  maxCheckInterval);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  maxCheckInterval);	  Integer    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
103	[BUG]  [BUGGY]  evaluations.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
104	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());	  int    stepStart    =    Math.min(expandable.doubleValue(),    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
105	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convention,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convention,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convention,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
106	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
107	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  >  expected	16	None	replace
108	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convention,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convention,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convention,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
110	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convergence,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convergence,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convergence,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
111	[BUG]  [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
112	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  >  expected	15	None	replace
113	[BUG]  [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
114	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
115	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
116	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepSize(stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
117	[BUG]  [BUGGY]  int  stepStart  =  Math.min(contractionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(contractionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(contractionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
118	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  int    stepStart    =    Math.min(expandable,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
119	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
120	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandeable,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandeable,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandeable,  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
121	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
122	[BUG]  [BUGGY]  evaluations.setStepCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setStepCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setStepCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
123	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convergence,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convergence,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convergence,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
124	[BUG]  [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
126	[BUG]  [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  >  expected	23	None	replace
128	[BUG]  [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
129	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
130	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
131	[BUG]  [BUGGY]  int  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluates.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
133	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.length,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
134	[BUG]  [BUGGY]  int  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
135	[BUG]  [BUGGY]  int  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
137	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
138	[BUG]  [BUGGY]  evaluations.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluates.setMinimalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
139	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
140	[BUG]  [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMaximumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
141	[BUG]  [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  >  expected	24	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
143	[BUG]  [BUGGY]  int  stepStart  =  Math.min(contractionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(contractionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(contractionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
144	[BUG]  [BUGGY]  int  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(conversionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expansionable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
145	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convergence,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convergence,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convergence,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
146	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(conventions,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(conventions,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(conventions,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
147	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
148	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(constraint,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
149	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
150	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable,  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable,  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable,  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
151	[BUG]  [BUGGY]  int  stepStart  =  Math.min(convergence,  expandable);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(convergence,  expandable);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(convergence,  expandable);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
152	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
153	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(convergence,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(convergence,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(convergence,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
154	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
155	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.length,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
156	[BUG]  [BUGGY]  int  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(constraint,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
157	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
158	[BUG]  [BUGGY]  int  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(constraint,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
159	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
160	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
161	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.length,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
162	[BUG]  [BUGGY]  int  stepSize  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepSize  +  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepSize  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepSize  +  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepSize  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepSize  +  maxEvaluations);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
163	[BUG]  [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMaximalCount((    maxEvaluations    <    1)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
164	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
165	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  maxCheckInterval);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  maxCheckInterval);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  maxCheckInterval);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  2)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  2)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  2)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    maxEvaluations.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
167	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
168	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
169	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
170	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
171	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
172	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
173	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  expable  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  cannot  find  symbol  expable	61	None	replace
174	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  expandeable  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandeable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  cannot  find  symbol  expandeable	61	None	replace
175	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
176	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
177	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
178	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
179	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
180	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
181	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
182	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
183	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
184	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations);  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
185	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
186	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansion,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
187	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
188	[BUG]  [BUGGY]  int  stepStart  =  Math.min(resetOccurred,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(resetOccurred,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(resetOccurred,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
189	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
190	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expanable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expanable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expanable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
191	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepSize(stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
192	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable,    maxEvaluations.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
193	[BUG]  [BUGGY]  int  stepStart  =  Math.min(resetOccurred,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(resetOccurred,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(resetOccurred,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  int    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
194	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations);  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(expandable.doubleValue(),    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
195	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
196	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
197	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
198	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(valuesInitialized,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(expandable,    maxEvaluations);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
199	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
200	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expanable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expanable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expanable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
201	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);	  if(expandable.equals(name))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStep(stepStart    +    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
202	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
203	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expanable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  Integer  stepStart  =  Math.min(expanable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]        [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expanable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  Integer    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
204	[BUG]  [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
206	[BUG]  [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximumCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluations.setMaximalCount((    maxEvaluations    <    1)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	  for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
