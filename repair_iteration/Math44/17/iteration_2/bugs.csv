bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expansionable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	      evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluates.size();  ++i)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	      evaluates.setMaximalCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	      evaluates.setMaximalCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  1)?  Integer.MIN_VALUE  :  maxEvaluations);	      evaluates.setMaximalCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  }	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  maxEvaluations.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(expandable,  maxEvaluations);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
37	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  maxEvaluations.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      evaluates.setMaximalCount((    maxEvaluations    <    =    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluations.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  stepStart);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    stepStart);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
45	[BUG]  [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximalCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    ++i)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepCount((  stepStart  <  maxEvaluations)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setStepCount((    stepStart    <    maxEvaluations)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expandable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expandable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  Integer  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	Integer  stepStart  =  Math.min(maxEvaluations,  expansionable);  evaluations.setStepCount((  stepStart  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);	  if(expandable)    {    int    stepStart    =    Math.min(maxEvaluations,    expansionable);    evaluations.setStepCount((    stepStart    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
54	[BUG]  [BUGGY]  if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  maxEvaluations);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable.equals( " "))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStepSize(stepStart);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  }  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	if(expandable.equals(name))  {  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setStep(stepStart  +  stepStart);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	  evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  return;	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(maxEvaluations,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  1)?  Integer.MAX_VALUE  :  maxEvaluations);  }	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    1)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
62	[BUG]  [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	luates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      if(evaluations!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MAX_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]      [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMaximumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	  evaluates.setMaximalCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  evaluates.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	evaluates.setMinimumCount((  maxEvaluations  <  0)?  Integer.MAX_VALUE  :  maxEvaluations);	      evaluates.setMaximalCount((    maxEvaluations    <    =    0)?    Integer.MAX_VALUE    :    maxEvaluations);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable.doubleValue(),  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  setMaxEvaluations(int  maxEvaluations)  {  evaluations.setMaximalCount((maxEvaluations  <  0)  ?  Integer.MAX_VALUE  :  maxEvaluations);    [BUGGY]  int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  setMaxEvaluations  [RETURN_TYPE]  void  int  maxEvaluations  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  int  maxEvaluations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	170	170	1	replace	int  stepStart  =  Math.min(expandable,  expandable.doubleValue());  evaluations.setMinimumCount((  maxEvaluations  <  0)?  Integer.MIN_VALUE  :  maxEvaluations);	      if(expandable.equals(   "   "))    {    int    stepStart    =    Math.min(maxEvaluations,    expandable.doubleValue());    evaluations.setMinimumCount((    maxEvaluations    <    0)?    Integer.MIN_VALUE    :    maxEvaluations);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
