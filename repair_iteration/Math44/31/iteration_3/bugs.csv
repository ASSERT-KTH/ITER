bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    isLastStep;    this.statesInitialized  =  stateInitialized  ||  isLastStep;	  	compilable	  [FE]  AssertionError  	36	1	add
2	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    this.statesInitialized  =  stateInitialized  ||  isLastStep;	  	compilable	  [FE]  AssertionError  	36	1	add
3	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  This.statesInitialized  =  stateInitialized  ||  isLastStep;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  This.statesInitialized  =  stateInitialized  ||  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    This.statesInitialized  =  stateInitialized  ||  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  This	36	None	add
4	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  stateInitialized  =  stateInitialized  ||  isLastStep;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  stateInitialized  =  stateInitialized  ||  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    stateInitialized  =  stateInitialized  ||  isLastStep;	  	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	36	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }	  	compilable	  [FE]  AssertionError  	36	1	add
6	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }	  	compilable	  [FE]  AssertionError  	36	1	add
7	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandable,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandable,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandable,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expandable);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
8	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansion);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansion);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expansion);	  StatefulODE    equations    =    getStatefulODE(expandable);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;	  this.statesInitialized    =    isLastStep;    this.statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	44	1	replace
10	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;	  this.statesInitialized    =    isLastStep;    this.statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	44	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;	  this.statesInitialized    =    isLastStep;    this.statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	44	1	replace
12	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;	  this.statesInitialized    =    isLastStep;    this.statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	44	1	replace
13	[BUG]  [BUGGY]  this.expanableODE  =  stateInitialized;  [CE]  cannot  find  symbol  expanableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expanableODE  =  stateInitialized;  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expanableODE  =  stateInitialized;	  this.expandableODE    =    expandable;    	non-compiled	[CE]  cannot  find  symbol  expanableODE	40	None	replace
14	[BUG]  [BUGGY]  this.stateInitialized  =  isLastStep;  [CE]  cannot  find  symbol  stateInitialized  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.stateInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.stateInitialized  =  isLastStep;	  this.stateInitialized    =    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	13	None	replace
15	[BUG]  [BUGGY]  this.stateInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  stateInitialized  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.stateInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.stateInitialized  =  stateInitialized  &&  isLastStep;	  this.stateInitialized    =    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	13	None	replace
16	[BUG]  [BUGGY]  StatefulStatefulODE  equations  =  this.statesInitialized.evaluate(stateInitialized);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulStatefulODE  equations  =  this.statesInitialized.evaluate(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulStatefulODE  equations  =  this.statesInitialized.evaluate(stateInitialized);	  StatefulStatefulODE    equations    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
17	[BUG]  [BUGGY]  StatefulStatefulODE  equations  =  stateInitialized.evaluate(this,  expandableODE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulStatefulODE  equations  =  stateInitialized.evaluate(this,  expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulStatefulODE  equations  =  stateInitialized.evaluate(this,  expandableODE);	  StatefulStatefulODE    equations    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
18	[BUG]  [BUGGY]  StatefulStatefulODE  equations  =  stateInitialized.evaluate(this,  expansionableODE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulStatefulODE  equations  =  stateInitialized.evaluate(this,  expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulStatefulODE  equations  =  stateInitialized.evaluate(this,  expansionableODE);	  StatefulStatefulODE    equations    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
19	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  /  0;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  /  0;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  /  0;	  this.statesInitialized    =    stateInitialized    +    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	62	None	replace
20	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  stateInitialized  =  isLastStep;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  stateInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  stateInitialized  =  isLastStep;	  this.statesInitialized    =    isLastStep;    stateInitialized    =    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	48	None	replace
21	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized;	  this.statesInitialized    =    isLastStep;    stateInitialized    =    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	48	None	replace
22	[BUG]  [BUGGY]  stateInitialized  =  isLastStep;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  isLastStep;	  this.statesInitialized    =    isLastStep;    stateInitialized    =    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	48	None	replace
23	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);	  this.expandableODE    =    stateInitialized.evaluate(this,    stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	7	None	replace
24	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  stateStatement);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  stateStatement);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  stateStatement);	  this.expandableODE    =    stateInitialized.evaluate(this,    stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	7	None	replace
25	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  stateOutitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  stateOutitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  stateOutitialized);	  this.expandableODE    =    stateInitialized.evaluate(this,    stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	7	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;	  	compilable	  [FE]  AssertionError  	43	1	add
27	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;	  	compilable	  [FE]  AssertionError  	43	1	add
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;	  	compilable	  [FE]  AssertionError  	43	1	add
29	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;	  	compilable	  [FE]  AssertionError  	43	1	add
30	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  This.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  This.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    This.statesInitialized  =  stateInitialized;  this.statesInitialized  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  This	43	None	add
31	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isFirstStep;  this.statesInitialized  =  isLastStep;  [CE]  cannot  find  symbol  isFirstStep  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isFirstStep;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isFirstStep;  this.statesInitialized  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	43	None	add
32	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandedableODE;  [CE]  cannot  find  symbol  expandedableODE  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandedableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandedableODE;	  this.statesInitialized    =    stateInitialized    &&    isResetOccurred;    	non-compiled	[CE]  cannot  find  symbol  expandedableODE	38	None	replace
33	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  equations);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  equations);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  equations);	  this.expandableODE    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	18	None	replace
34	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(statesInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(statesInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(statesInitialized);	  this.expandableODE    =    statesInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
35	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(escapes);  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(escapes);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(escapes);	  this.expandableODE    =    statesInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
36	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isFirstStep();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isFirstStep();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isFirstStep();	          stateInitialized    =    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	58	None	replace
37	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.hasChildren();  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.hasChildren();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.hasChildren();	          stateInitialized    =    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	58	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	46	1	add
39	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	46	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	46	1	add
41	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	46	1	add
42	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	46	None	add
43	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  This.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  This.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    This.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  This	46	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	46	1	add
45	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	46	1	add
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	90	1	replace
47	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	90	1	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	90	1	replace
49	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	90	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(isLastStep  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	90	1	replace
51	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	90	1	replace
52	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setAssignedStatements();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.setAssignedStatements();	  StatefulODE    equations    =    stateInitialized.setAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
53	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentStatements();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setAssignmentStatements();	  StatefulODE    equations    =    stateInitialized.setAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
54	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitializer.evaluate(this);  [CE]  cannot  find  symbol  statesInitializer  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitializer.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitializer.evaluate(this);	  stateInitialized    =    stateInitializer.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  statesInitializer	66	None	replace
55	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(stateInitialized);	  this.expandableODE    =    stateInitialized.equals(extendableODE);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	63	None	replace
56	[BUG]  [BUGGY]  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    initStates();    this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
57	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized  &&  isLastStep;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized  &&  isLastStep;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized  &&  isLastStep;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    initStates();    this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	60	1	replace
59	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	60	1	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	60	1	replace
61	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	60	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	60	1	replace
63	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	60	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    for(int    i    =    0;    i    <    statesInitialized;    ++i)    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	91	1	replace
65	[BUG]  [BUGGY]  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    for(int    i    =    0;    i    <    statesInitialized;    ++i)    {    this.statesInitialized    =    stateInitialized;    }    	compilable	  [FE]  AssertionError  	91	1	replace
66	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  equations.evaluate(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  equations.evaluate(stateInitialized);	  this.expandableODE    =    equations.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	4	None	replace
67	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(null,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  equations.evaluate(null,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  equations.evaluate(null,  stateInitialized);	  this.expandableODE    =    equations.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	4	None	replace
68	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(new  ExpandableStatefulODE(stateInitialized));  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  equations.evaluate(new  ExpandableStatefulODE(stateInitialized));  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  equations.evaluate(new  ExpandableStatefulODE(stateInitialized));	  this.expandableODE    =    equations.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	4	None	replace
69	[BUG]  [BUGGY]  this.expandableODE  =  entityInitialized.evaluate(stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  entityInitialized.evaluate(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  entityInitialized.evaluate(stateInitialized);	  this.expandableODE    =    entityInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	84	None	replace
70	[BUG]  [BUGGY]  this.expandableODE  =  isLastStep.evaluate(null);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  isLastStep.evaluate(null);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  isLastStep.evaluate(null);	  this.expandableODE    =    entityInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	84	None	replace
71	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateState;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateState;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateState;	  this.statesInitialized    =    stateInitialized?    stateInitialized    +    1    :    stateInitialized;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
72	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateOutitialized;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateOutitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateOutitialized;	  this.statesInitialized    =    stateInitialized?    stateInitialized    +    1    :    stateInitialized;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
73	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateStatement;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateStatement;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized?  stateInitialized  +  1  :  stateStatement;	  this.statesInitialized    =    stateInitialized?    stateInitialized    +    1    :    stateInitialized;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	88	1	replace
75	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	88	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	88	1	replace
77	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	88	1	replace
78	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(getState());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(getState());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(getState());	  stateInitialized    =    statesInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(this.statesInitialized);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(this.statesInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(this.statesInitialized);	  StatefulODE    equations    =    getStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
80	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(stateInitialized,  expandableODE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(stateInitialized,  expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(stateInitialized,  expandableODE);	  StatefulODE    equations    =    getStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
81	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(stateInitialized,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(stateInitialized,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(stateInitialized,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
82	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  setStateInitialized(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	setStateInitialized(stateInitialized);    setStateInitialized(stateInitialized);	  	compilable	  [FE]  StackOverflowError  	14	1	add
83	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  setStateInitialized(stateInitialized);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  setStateInitialized(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    setStateInitialized(stateInitialized);	  	compilable	  [FE]  StackOverflowError  	14	1	add
84	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	add
85	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  getState().setInitialized(stateInitialized);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  getState().setInitialized(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    getState().setInitialized(stateInitialized);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
86	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  stateInitialized  =  stateInitialized;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]          StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  stateInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    stateInitialized  =  stateInitialized;	  	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	14	None	add
87	[BUG]  [BUGGY]  stateInitialized  =  this.events.evaluate(this);  [CE]  cannot  find  symbol  events  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.events.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.events.evaluate(this);	  stateInitialized    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  events	11	None	replace
88	[BUG]  [BUGGY]  stateInitialized  =  this.states.evaluate(this);  [CE]  cannot  find  symbol  states  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.states.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.states.evaluate(this);	  stateInitialized    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  states	11	None	replace
89	[BUG]  [BUGGY]  stateInitialized  =  this.expandableODE.evaluate(this);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expandableODE.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expandableODE.evaluate(this);	  stateInitialized    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	11	None	replace
90	[BUG]  [BUGGY]  stateInitialized  =  this.expansions.evaluate(this);  [CE]  cannot  find  symbol  expansions  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expansions.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expansions.evaluate(this);	  stateInitialized    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansions	11	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	47	1	replace
92	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	47	1	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  false;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	47	1	replace
94	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  false;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  false;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	compilable	  [FE]  AssertionError  	47	1	replace
95	[BUG]  [BUGGY]  StatefulODE  equations  =  stateStatement.getAssignedStatements();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateStatement.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateStatement.getAssignedStatements();	  StatefulODE    equations    =    statesInitialized.getAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized  &&  stateInitialized;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	compilable	  [FE]  AssertionError  	70	1	replace
97	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  stateInitialized;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	compilable	  [FE]  AssertionError  	70	1	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  isLastStep  ||  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  isLastStep  ||  stateInitialized;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	compilable	  [FE]  AssertionError  	70	1	replace
99	[BUG]  [BUGGY]  this.statesInitialized  =  isLastStep  ||  stateInitialized;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  isLastStep  ||  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  isLastStep  ||  stateInitialized;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	compilable	  [FE]  AssertionError  	70	1	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||!isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized  ||!isLastStep;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	compilable	  [FE]  AssertionError  	70	1	replace
101	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||!isLastStep;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||!isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||!isLastStep;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	compilable	  [FE]  AssertionError  	70	1	replace
102	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  expansion;  [CE]  cannot  find  symbol  expansion  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  expansion;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  expansion;	  this.statesInitialized    =    stateInitialized    +    expandableODE;    	non-compiled	[CE]  cannot  find  symbol  expansion	95	None	replace
103	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  expandable;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  expandable;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  expandable;	  this.statesInitialized    =    stateInitialized    +    expandableODE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
104	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  isLastStep;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  isLastStep;	  this.statesInitialized    =    stateInitialized    +    expandableODE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
105	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  stateSize;  [CE]  cannot  find  symbol  stateSize  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  stateSize;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  stateSize;	  this.statesInitialized    =    stateInitialized    +    expandableODE;    	non-compiled	[CE]  cannot  find  symbol  stateSize	95	None	replace
106	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setAssignedState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setAssignedState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.setAssignedState();	  StatefulODE    equations    =    this.statesInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
107	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getAssignedState();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getAssignedState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getAssignedState();	  StatefulODE    equations    =    this.statesInitialized.getAssignedState();    	non-compiled	[CE]  ';'  expected	52	None	replace
108	[BUG]  [BUGGY]  this.expandableODE  =  entityInitialized.evaluate(this,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  entityInitialized.evaluate(this,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  entityInitialized.evaluate(this,  stateInitialized);	  this.expandableODE    =    entityInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	75	None	replace
109	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  expandableODE;  setStatesInitialized(stateInitialized);  }  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  expandableODE;  setStatesInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  expandableODE;  setStatesInitialized(stateInitialized);  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    setStatesInitialized(stateInitialized);    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	92	None	replace
110	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  setStatesInitialized(stateInitialized);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  setStatesInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  setStatesInitialized(stateInitialized);  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    setStatesInitialized(stateInitialized);    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
111	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedStatements();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.setAssignedStatements();	  StatefulODE    equations    =    this.stateInitialized.getAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
112	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedStatements(stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedStatements(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.setAssignedStatements(stateInitialized);	  StatefulODE    equations    =    this.stateInitialized.getAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
113	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandable;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandable;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandable;	  this.statesInitialized    =    stateInitialized    &&    expansionableODE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	98	None	replace
114	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionable;  [CE]  cannot  find  symbol  expansionable  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionable;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expansionable;	  this.statesInitialized    =    stateInitialized    &&    expansionableODE;    	non-compiled	[CE]  cannot  find  symbol  expansionable	98	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	28	1	add
116	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	28	1	add
117	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  isFirstStep  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isFirstStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	28	None	add
118	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  This.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  This.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    This.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  This	28	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	28	1	add
120	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  ||  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	28	1	add
121	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  equations.evaluate(this,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  equations.evaluate(this,  stateInitialized);	  this.expandableODE    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	19	None	replace
122	[BUG]  [BUGGY]  this.expandableODE  =  equations.evaluate(this,  isLastStep);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  equations.evaluate(this,  isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  equations.evaluate(this,  isLastStep);	  this.expandableODE    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	19	None	replace
123	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expable,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expable,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expable,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expable);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
124	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  /  2;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  /  2;	  this.statesInitialized    =    stateInitialized    +    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	56	None	replace
125	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(equries);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(equries);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(equries);	  this.expandableODE    =    equations.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	24	None	replace
126	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(equances);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(equances);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(equances);	  this.expandableODE    =    equations.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	24	None	replace
127	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(equivalences);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(equivalences);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(equivalences);	  this.expandableODE    =    equations.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	24	None	replace
128	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  0L;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  0L;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  0L;	  this.statesInitialized    =    stateInitialized    +    1L;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	55	None	replace
129	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandableODE,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandableODE,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandableODE,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
130	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.setAssignedState();	  StatefulODE    equations    =    this.stateInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
131	[BUG]  [BUGGY]  StatefulODE  equations  =  _stateInitialized.getAssignedState();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  _stateInitialized.getAssignedState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  _stateInitialized.getAssignedState();	  StatefulODE    equations    =    this.stateInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
132	[BUG]  [BUGGY]  this.stateStateInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  stateStateInitialized  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.stateStateInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.stateStateInitialized  =  stateInitialized;	  this.statesInitialized    =    stateStateInitialized;    	non-compiled	[CE]  cannot  find  symbol  stateStateInitialized	1	None	replace
133	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  This.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  This.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;  This.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    This.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expandableODE	30	None	replace
134	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.getStatements();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.getStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.getStatements();	  StatefulODE    equations    =    stateInitialized.getStatements();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
135	[BUG]  [BUGGY]  StatefulODE  equations  =  statesInitialized.getStatements();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  statesInitialized.getStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  statesInitialized.getStatements();	  StatefulODE    equations    =    stateInitialized.getStatements();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
136	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatements();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatements();	  StatefulODE    equations    =    stateInitialized.getStatements();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
137	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized  &&  isLastStep;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    stateInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	31	None	replace
138	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized  &&  isLastStep;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    stateInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	31	None	replace
139	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  stateInitialized  =  stateInitialized  &&  isLastStep;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  stateInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  isLastStep;  stateInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    stateInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	31	None	replace
140	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.getState();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.getState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.getState();	  StatefulODE    equations    =    stateInitialized.getState();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
141	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setState();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setState();	  StatefulODE    equations    =    stateInitialized.getState();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
142	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setState(stateInitialized.getState());  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setState(stateInitialized.getState());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setState(stateInitialized.getState());	  StatefulODE    equations    =    stateInitialized.getState();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
143	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(isLastStep);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(isLastStep);	  this.expandableODE    =    isLastStep.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	23	None	replace
144	[BUG]  [BUGGY]  this.expandableODE  =  statesInitialized.equals(isLastStep);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  statesInitialized.equals(isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  statesInitialized.equals(isLastStep);	  this.expandableODE    =    isLastStep.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	23	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
146	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
148	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
150	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
152	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	59	1	add
153	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  This.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  This  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  This.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    This.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  This	59	None	add
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	89	1	add
155	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	89	1	add
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	89	1	add
157	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	compilable	  [FE]  AssertionError  	89	1	add
158	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isFirstStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isFirstStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isFirstStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	89	None	add
159	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(isLastStep  >=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  isLastStep;  if(isLastStep  >=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  isLastStep;  if(isLastStep  >=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	89	None	add
160	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansion;  [CE]  cannot  find  symbol  expansion  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansion;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expansion;	  this.statesInitialized    =    stateInitialized    &&    expandableODE;    	non-compiled	[CE]  cannot  find  symbol  expansion	39	None	replace
161	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isResetOccurred;  this.statesInitialized  =  stateInitialized  &&  isLastStep);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isResetOccurred;  this.statesInitialized  =  stateInitialized  &&  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  isResetOccurred;  this.statesInitialized  =  stateInitialized  &&  isLastStep);	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized    =    stateInitialized    &&    isLastStep);    	non-compiled	[CE]  ';'  expected	32	None	replace
162	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isResetOccurred;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  isResetOccurred  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isResetOccurred;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  isResetOccurred;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized    =    stateInitialized    &&    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  isResetOccurred	32	None	replace
163	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.escapeStates();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.escapeStates();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.escapeStates();	  StatefulODE    equations    =    stateInitialized.escapeStates();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
164	[BUG]  [BUGGY]  StatefulODE  equations  =  statesInitialized.escapeStates();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  statesInitialized.escapeStates();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  statesInitialized.escapeStates();	  StatefulODE    equations    =    stateInitialized.escapeStates();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
165	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.evaluateStates();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.evaluateStates();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.evaluateStates();	  StatefulODE    equations    =    stateInitialized.escapeStates();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	compilable	  [FE]  AssertionError  	99	1	add
167	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	compilable	  [FE]  AssertionError  	99	1	add
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	compilable	  [FE]  AssertionError  	99	1	add
169	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	compilable	  [FE]  AssertionError  	99	1	add
170	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
171	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  This.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  This.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    This.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  This	99	None	add
172	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	99	1	add
173	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	99	1	add
174	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  isFirstStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	102	None	replace
175	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	non-compiled	[CE]  cannot  find  symbol  isFirstStep	81	None	replace
176	[BUG]  [BUGGY]  stateInitialized  =  true;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  true;	  if(stateInitialized)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    ++i)    {    stateInitialized.add(i);    }    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	96	None	replace
177	[BUG]  [BUGGY]  stateInitialized  =  false;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  false;	  if(stateInitialized)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    ++i)    {    stateInitialized.add(i);    }    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	96	None	replace
178	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.getStatefulODE  equations();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.getStatefulODE  equations();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.getStatefulODE  equations();	  if(stateInitialized)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    ++i)    {    stateInitialized.add(i);    }    	non-compiled	[CE]  ';'  expected	96	None	replace
179	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.getElements();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.getElements();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.getElements();	  if(stateInitialized)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    ++i)    {    stateInitialized.add(i);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
180	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentState();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setAssignmentState();	  StatefulODE    equations    =    stateInitialized.setAssignedState();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
181	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignedState(stateInitialized);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignedState(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setAssignedState(stateInitialized);	  StatefulODE    equations    =    stateInitialized.setAssignedState();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
182	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansion);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansion);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expansion);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	6	None	replace
183	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  offset);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  offset);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  offset);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	6	None	replace
184	[BUG]  [BUGGY]  This.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);  [CE]  cannot  find  symbol  This  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  This.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	This.expandableODE  =  stateInitialized.evaluate(this,  isLastStep);	  this.expandableODE    =    isLastStep.evaluate(this,    stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  This	8	None	replace
185	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(this.statesInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(this.statesInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE().equals(this.statesInitialized);	  StatefulODE    equations    =    getStatefulODE().equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
186	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(stateInitialized,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(stateInitialized,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE().equals(stateInitialized,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE().equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
187	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(expandableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE().equals(expandableODE);	  StatefulODE    equations    =    getStatefulODE().equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
188	[BUG]  [BUGGY]  this.expandableODE  =  expansive.evaluate(this,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expansive.evaluate(this,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expansive.evaluate(this,  stateInitialized);	  this.expandableODE    =    stateInitialized.evaluate(this,    expansive);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	78	None	replace
189	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.getAssignmentState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.getAssignmentState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.getAssignmentState();	  StatefulODE    equations    =    stateInitialized.getAssignmentState();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
190	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentState(stateInitialized.getAssignmentState());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentState(stateInitialized.getAssignmentState());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setAssignmentState(stateInitialized.getAssignmentState());	  StatefulODE    equations    =    stateInitialized.getAssignmentState();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
191	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentState(stateInitialized);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setAssignmentState(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setAssignmentState(stateInitialized);	  StatefulODE    equations    =    stateInitialized.getAssignmentState();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
192	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized,  this.statesInitialized.setStatefulODE(stateInitialized);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized,  this.statesInitialized.setStatefulODE(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized,  this.statesInitialized.setStatefulODE(stateInitialized);	  StatefulODE    equations    =    stateInitialized,    this.statesInitialized.getStatefulODE();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
193	[BUG]  [BUGGY]  StatefulODE  equations  =  isLastStep,  this.statesInitialized.getStatefulODE();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  isLastStep,  this.statesInitialized.getStatefulODE();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  isLastStep,  this.statesInitialized.getStatefulODE();	  StatefulODE    equations    =    stateInitialized,    this.statesInitialized.getStatefulODE();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
194	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  isLastStep;  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  isLastStep;	  this.statesInitialized    =    isLastStep;    This.statesInitialized    =    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  This	45	None	replace
195	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  This.statesInitialized  =  stateInitialized;	  this.statesInitialized    =    isLastStep;    This.statesInitialized    =    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  This	45	None	replace
196	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.setInitialized(true);  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.setInitialized(true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.setInitialized(true);	          stateInitialized    =    stateInitialized.getInitialized();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	68	None	replace
197	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.resetOccurred();  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.resetOccurred();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.resetOccurred();	          stateInitialized    =    stateInitialized.getInitialized();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	68	None	replace
198	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.getState();  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.getState();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.getState();	          stateInitialized    =    stateInitialized.getInitialized();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	68	None	replace
199	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expandableODE	29	None	replace
200	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeable,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeable,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandeable,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expandeable);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
201	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeable,  this.stateInitialized);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeable,  this.stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandeable,  this.stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expandeable);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	compilable	  [FE]  AssertionError  	80	1	add
203	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	compilable	  [FE]  AssertionError  	80	1	add
204	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  This.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  This.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    This.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  This	80	None	add
205	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	80	None	add
206	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
207	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(expandableODE,  stateInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(expandableODE,  stateInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(expandableODE,  stateInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(equivalences,    stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
208	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(equivalences,  this.statesInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(equivalences,  this.statesInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(equivalences,  this.statesInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(equivalences,    stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
209	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(equivalences,  expandableODE.getStatefulODE());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(equivalences,  expandableODE.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(equivalences,  expandableODE.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(equivalences,    stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
210	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(stateInitialized);  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(stateInitialized);	  stateInitialized    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	9	None	replace
211	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.evaluate(this,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.evaluate(this,  expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.evaluate(this,  expansionableODE);	  stateInitialized    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	9	None	replace
212	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(expanable);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(expanable);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(expanable);	  this.expandableODE    =    expansionable.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	64	None	replace
213	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansionable,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansionable,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expansionable,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expansionable);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
214	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansionable,  this.stateInitialized);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansionable,  this.stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expansionable,  this.stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expansionable);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
215	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.isLastStep();  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.isLastStep();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.isLastStep();	  stateInitialized    =    stateInitialized.isLastStep()    ||    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	17	None	replace
216	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isFirstStep()  ||  stateInitialized.isLastStep();  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isFirstStep()  ||  stateInitialized.isLastStep();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isFirstStep()  ||  stateInitialized.isLastStep();	  stateInitialized    =    stateInitialized.isLastStep()    ||    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	17	None	replace
217	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isFirstStep()  &&  stateInitialized.isLastStep();  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isFirstStep()  &&  stateInitialized.isLastStep();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isFirstStep()  &&  stateInitialized.isLastStep();	  stateInitialized    =    stateInitialized.isLastStep()    ||    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	17	None	replace
218	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getAssignedStatements();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getAssignedStatements();	  StatefulODE    equations    =    this.statesInitialized.getAssignedStatements();    	non-compiled	[CE]  ';'  expected	25	None	replace
219	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setStatefulODE(stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setStatefulODE(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.setStatefulODE(stateInitialized);	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
220	[BUG]  [BUGGY]  StatefulODE  equations  =  statesInitialized.setStatefulODE(stateInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  statesInitialized.setStatefulODE(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  statesInitialized.setStatefulODE(stateInitialized);	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
221	[BUG]  [BUGGY]  StatefulODE  equations  =  state.setStatefulODE(stateInitialized);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  state.setStatefulODE(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  state.setStatefulODE(stateInitialized);	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
222	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expansionable.evaluate(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expansionable.evaluate(stateInitialized);	  this.expandableODE    =    expansionable.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	85	None	replace
223	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.booleanValue();  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.booleanValue();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.booleanValue();	  stateInitialized    =    stateInitialized;    	non-compiled	[CE]  boolean  cannot  be  dereferenced	16	None	replace
224	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isLastStep;  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isLastStep;	  stateInitialized    =    stateInitialized;    	non-compiled	[CE]  boolean  cannot  be  dereferenced	16	None	replace
225	[BUG]  [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  stateInitialized);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expansion.evaluate(this,  stateInitialized);	  stateInitialized    =    this.expansion.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansion	65	None	replace
226	[BUG]  [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  isLastStep);  [CE]  cannot  find  symbol  expansion  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expansion.evaluate(this,  isLastStep);	  stateInitialized    =    this.expansion.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansion	65	None	replace
227	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  stateInitialized);  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(this,  stateInitialized);	  stateInitialized    =    this.statesInitialized.evaluate(this);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	10	None	replace
228	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  isLastStep);  [CE]  boolean  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  isLastStep);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(this,  isLastStep);	  stateInitialized    =    this.statesInitialized.evaluate(this);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	10	None	replace
229	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(this,  expandableODE);	  stateInitialized    =    this.statesInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	10	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	101	1	add
231	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	101	1	add
232	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesIn  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesIn  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesIn	  	non-compiled	[CE]  not  a  statement	101	None	add
233	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.states  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.states  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.states	  	non-compiled	[CE]  not  a  statement	101	None	add
234	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
235	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.	  	non-compiled	[CE]  <identifier>  expected	101	None	add
236	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getStatefulODE();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getStatefulODE();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized,  stateInitialized.getStatefulODE();	  StatefulODE    equations    =    this.statesInitialized.getStatefulODE();    	non-compiled	[CE]  ';'  expected	33	None	replace
237	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expanable,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expanable,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expanable,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expanable);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
238	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expanable,  this.stateInitialized);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expanable,  this.stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expanable,  this.stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expanable);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
239	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	setStateInitialized(true);	  setStateInitialized(stateInitialized);    	compilable	  [FE]  StackOverflowError  	15	1	replace
240	[BUG]  [BUGGY]  setStateInitialized(true);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(true);	  setStateInitialized(stateInitialized);    	compilable	  [FE]  StackOverflowError  	15	1	replace
241	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	setStateInitialized(isLastStep);	  setStateInitialized(stateInitialized);    	compilable	  [FE]  StackOverflowError  	15	1	replace
242	[BUG]  [BUGGY]  setStateInitialized(isLastStep);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(isLastStep);	  setStateInitialized(stateInitialized);    	compilable	  [FE]  StackOverflowError  	15	1	replace
243	[BUG]  [BUGGY]  setStateInitialized(stateInitialized,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]        StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized,  expandableODE);	  setStateInitialized(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	15	None	replace
244	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(stateInitialized,  stateInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(stateInitialized,  stateInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(stateInitialized,  stateInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
245	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(this.statesInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(this.statesInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(this.statesInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
246	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(stateInitialized,  this.statesInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(stateInitialized,  this.statesInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(stateInitialized,  this.statesInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    this.statesInitialized  =  stateInitialized  ||  stateInitialized;	  	compilable	  [FE]  AssertionError  	69	1	add
248	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    this.statesInitialized  =  stateInitialized  ||  stateInitialized;	  	compilable	  [FE]  AssertionError  	69	1	add
249	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  This.statesInitialized  =  stateInitialized  ||  stateInitialized;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  This.statesInitialized  =  stateInitialized  ||  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    This.statesInitialized  =  stateInitialized  ||  stateInitialized;	  	non-compiled	[CE]  cannot  find  symbol  This	69	None	add
250	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  stateInitialized  =  stateInitialized  ||  stateInitialized;  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  stateInitialized  =  stateInitialized  ||  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    stateInitialized  =  stateInitialized  ||  stateInitialized;	  	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	69	None	add
251	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  this.statesInitialized  =  stateInitialized  ||  stateInitialized);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  this.statesInitialized  =  stateInitialized  ||  stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    this.statesInitialized  =  stateInitialized  ||  stateInitialized);	  	non-compiled	[CE]  ';'  expected	69	None	add
252	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isResetOccurred;  [CE]  cannot  find  symbol  isResetOccurred  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isResetOccurred;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  isResetOccurred;	  this.statesInitialized    =    stateInitialized    ||    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  isResetOccurred	37	None	replace
253	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  expandableODE;  [CE]  cannot  find  symbol  expandableODE  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  expandableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  expandableODE;	  this.statesInitialized    =    stateInitialized    ||    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expandableODE	37	None	replace
254	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep  +  1;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  isLastStep  +  1;	  this.statesInitialized    =    stateInitialized    ||    isLastStep;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	37	None	replace
255	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setStatefulODE(stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setStatefulODE(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.setStatefulODE(stateInitialized);	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
256	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setAssignedState(stateInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setAssignedState(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.setAssignedState(stateInitialized);	  StatefulODE    equations    =    this.statesInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
257	[BUG]  [BUGGY]  this.expandableODE  =  entityInitialized.evaluate(null,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  entityInitialized.evaluate(null,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  entityInitialized.evaluate(null,  stateInitialized);	  this.expandableODE    =    entityInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	84	None	replace
258	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  new  ExpandableStatefulODE();  }  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  new  ExpandableStatefulODE();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  new  ExpandableStatefulODE();  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	47	None	replace
259	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(new  ExpandableStatefulODE(stateInitialized));  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(new  ExpandableStatefulODE(stateInitialized));  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(new  ExpandableStatefulODE(stateInitialized));	  this.expandableODE    =    stateInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	3	None	replace
260	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(null,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(null,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(null,  stateInitialized);	  this.expandableODE    =    stateInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	3	None	replace
261	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized,  stateInitialized.getAssignedState();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized,  stateInitialized.getAssignedState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized,  stateInitialized.getAssignedState();	  StatefulODE    equations    =    this.stateInitialized.getAssignedState();    	non-compiled	[CE]  ';'  expected	105	None	replace
262	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.getAssignmentState();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.getAssignmentState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.getAssignmentState();	  StatefulODE    equations    =    this.stateInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
263	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(equivalences);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(equivalences);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(equivalences);	  this.expandableODE    =    statesInitialized.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	5	None	replace
264	[BUG]  [BUGGY]  StatefulODE  equations  =  expandableODE,  this.statesInitialized.getStatefulODE();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  expandableODE,  this.statesInitialized.getStatefulODE();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  expandableODE,  this.statesInitialized.getStatefulODE();	  StatefulODE    equations    =    stateInitialized,    this.statesInitialized.getStatefulODE();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
265	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.getEquivalences();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.getEquivalences();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.getEquivalences();	  if(stateInitialized)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    ++i)    {    stateInitialized.add(i);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	43	1	add
267	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	43	1	add
268	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.evaluate(this,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.evaluate(this,  expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.evaluate(this,  expandableODE);	  stateInitialized    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	9	None	replace
269	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandeableODE);	  StatefulODE    equations    =    getStatefulODE(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
270	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.assertAssignedStatements();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.assertAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.assertAssignedStatements();	  StatefulODE    equations    =    stateInitialized.setAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
271	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.elements.getState();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.elements.getState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.elements.getState();	  StatefulODE    equations    =    stateInitialized.getState();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
272	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.escapeStatements();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.escapeStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.escapeStatements();	  StatefulODE    equations    =    stateInitialized.getState();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
273	[BUG]  [BUGGY]  this.stateStatesInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  stateStatesInitialized  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.stateStatesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.stateStatesInitialized  =  stateInitialized;	  this.statesInitialized    =    stateStateInitialized;    	non-compiled	[CE]  cannot  find  symbol  stateStatesInitialized	1	None	replace
274	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  expansionableODE;  [CE]  cannot  find  symbol  expansionableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  expansionableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  expansionableODE;	  this.statesInitialized    =    stateInitialized    ||    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	70	None	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	28	1	add
276	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	compilable	  [FE]  AssertionError  	28	1	add
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	88	1	replace
278	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	88	1	replace
279	[BUG]  [BUGGY]  StatefulStatefulODE  equations  =  this.statesInitialized.evaluate(this);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulStatefulODE  equations  =  this.statesInitialized.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulStatefulODE  equations  =  this.statesInitialized.evaluate(this);	  StatefulStatefulODE    equations    =    stateInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
280	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  stateInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  stateInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;  stateInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    stateInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expandableODE	31	None	replace
281	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(this,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expandable.evaluate(this,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expandable.evaluate(this,  stateInitialized);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	6	None	replace
282	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(this.expanableODE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(this.expanableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(this.expanableODE);	  StatefulODE    equations    =    getStatefulODE(expanable);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
283	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  expandableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  expandableODE;	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    setStatesInitialized(stateInitialized);    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	92	None	replace
284	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  expandableODE;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  expandableODE;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    setStatesInitialized(stateInitialized);    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	92	None	replace
285	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	69	1	add
286	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	69	1	add
287	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(null);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expandable.evaluate(null);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expandable.evaluate(null);	  this.expandableODE    =    expansionable.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	85	None	replace
288	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep);	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized    =    stateInitialized    &&    isLastStep);    	non-compiled	[CE]  ';'  expected	32	None	replace
289	[BUG]  [BUGGY]  stateInitialized  =  statesInitialized.evaluate(this,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  statesInitialized.evaluate(this,  expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  statesInitialized.evaluate(this,  expandableODE);	  stateInitialized    =    statesInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	12	None	replace
290	[BUG]  [BUGGY]  stateInitialized  =  statesInitialized.evaluate(this,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]                      AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  statesInitialized.evaluate(this,  expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  statesInitialized.evaluate(this,  expansionableODE);	  stateInitialized    =    statesInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	12	None	replace
291	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(this.expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(this.expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(this.expandableODE);	  this.expandableODE    =    stateInitialized.equals(expandableODE);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	21	None	replace
292	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized;  }  [CE]  final  parameter  stateInitialized  may  not  be  assigned  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  stateInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    stateInitialized    =    isLastStep;    	non-compiled	[CE]  final  parameter  stateInitialized  may  not  be  assigned	48	None	replace
293	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.equals(this.statesInitialized);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.equals(this.statesInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.equals(this.statesInitialized);	  StatefulODE    equations    =    stateInitialized.getStatements();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
294	[BUG]  [BUGGY]  this.expandableODE  =  expandable.evaluate(this);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expandable.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expandable.evaluate(this);	  this.expandableODE    =    entityInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	75	None	replace
295	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    initStates();    this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expandableODE	82	None	replace
296	[BUG]  [BUGGY]  setState(stateInitialized);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setState(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setState(stateInitialized);	  setStateInitialized(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
297	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeableODE,  stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandeableODE,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandeableODE,  stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
298	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansionableODE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expansionableODE);	  StatefulODE    equations    =    getStatefulODE(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
299	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
300	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  cannot  find  symbol  expandableODE  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	46	None	add
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	46	1	add
302	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	46	1	add
303	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
304	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
305	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    for(int    i    =    0;    i    <    statesInitialized;    ++i)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
306	[BUG]  [BUGGY]  this.stateInitialized  =  stateInitialized  +  1;  [CE]  cannot  find  symbol  stateInitialized  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.stateInitialized  =  stateInitialized  +  1;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.stateInitialized  =  stateInitialized  +  1;	  this.stateInitialized    =    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	13	None	replace
307	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.elements.getAssignedStatements();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.elements.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.elements.getAssignedStatements();	  StatefulODE    equations    =    this.statesInitialized.getAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
308	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(this,  expansionableODE);	  stateInitialized    =    this.statesInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	10	None	replace
309	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.setInitialized(stateInitialized);  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.setInitialized(stateInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.setInitialized(stateInitialized);	          stateInitialized    =    stateInitialized.getInitialized();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	68	None	replace
310	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.cloneTree();  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.cloneTree();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.cloneTree();	          stateInitialized    =    stateInitialized.getInitialized();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	68	None	replace
311	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionableODE;  This.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expansionableODE  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionableODE;  This.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expansionableODE;  This.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    This.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	30	None	replace
312	[BUG]  [BUGGY]  StatefulODE  equations  =  isLastStep,  stateInitialized.getAssignedStatements();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  isLastStep,  stateInitialized.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  isLastStep,  stateInitialized.getAssignedStatements();	  StatefulODE    equations    =    statesInitialized.getAssignedStatements();    	non-compiled	[CE]  ';'  expected	83	None	replace
313	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(expandeableODE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(expandeableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE().equals(expandeableODE);	  StatefulODE    equations    =    getStatefulODE().equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
314	[BUG]  [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expansion.evaluate(this,  expansionableODE);	  stateInitialized    =    this.expansion.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	65	None	replace
315	[BUG]  [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expansion.evaluate(this,  expandableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expansion.evaluate(this,  expandableODE);	  stateInitialized    =    this.expansion.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	65	None	replace
316	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized  +  1;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized  +  1;	  stateInitialized    =    stateInitialized;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	16	None	replace
317	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized?  statesInitialized  +  1  :  stateInitialized;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized?  statesInitialized  +  1  :  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized?  statesInitialized  +  1  :  stateInitialized;	  this.statesInitialized    =    stateInitialized?    stateInitialized    +    1    :    stateInitialized;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
318	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableStatefulODE;  [CE]  cannot  find  symbol  expandableStatefulODE  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableStatefulODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableStatefulODE;	  this.statesInitialized    =    stateInitialized    &&    expansionableODE;    	non-compiled	[CE]  cannot  find  symbol  expandableStatefulODE	98	None	replace
319	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized,  stateInitialized.getAssignedStatements();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized,  stateInitialized.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized,  stateInitialized.getAssignedStatements();	  StatefulODE    equations    =    this.stateInitialized.getAssignedStatements();    	non-compiled	[CE]  ';'  expected	86	None	replace
320	[BUG]  [BUGGY]  StatefulODE  equations  =  entity.getAssignedStatements();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  entity.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  entity.getAssignedStatements();	  StatefulODE    equations    =    this.stateInitialized.getAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
321	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansionableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.evaluate(this,  expansionableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.evaluate(this,  expansionableODE);	  this.expandableODE    =    stateInitialized.evaluate(this,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	103	None	replace
322	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  cannot  find  symbol  isFirstStep  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isFirstStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  isFirstStep	99	None	add
323	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  initStates();  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  initStates();  this.statesInitialized  =  stateInitialized  ||  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    initStates();  this.statesInitialized  =  stateInitialized  ||  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
324	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  stateInitialized;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  stateInitialized;	  this.statesInitialized    =    stateInitialized    +    expandableODE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
325	[BUG]  [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setStatefulODE(stateInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.statesInitialized.setStatefulODE(stateInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.statesInitialized.setStatefulODE(stateInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
326	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesIn  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesIn  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesIn	  	non-compiled	[CE]  not  a  statement	80	None	add
327	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this	  	non-compiled	[CE]  not  a  statement	80	None	add
328	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.states  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.states  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.states	  	non-compiled	[CE]  not  a  statement	80	None	add
329	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
330	[BUG]  [BUGGY]  this.expandableODE  =  stateInitialized.equals(extendable);  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  stateInitialized.equals(extendable);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  stateInitialized.equals(extendable);	  this.expandableODE    =    expandable.equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	87	None	replace
331	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	81	None	replace
332	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	81	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	81	1	replace
334	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	81	1	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	59	1	add
336	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	59	1	add
337	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.getAssignmentState(this.expansion);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.getAssignmentState(this.expansion);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.getAssignmentState(this.expansion);	  StatefulODE    equations    =    stateInitialized.getAssignmentState();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
338	[BUG]  [BUGGY]  StatefulODE  equations  =  state.getAssignmentState();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  state.getAssignmentState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  state.getAssignmentState();	  StatefulODE    equations    =    stateInitialized.getAssignmentState();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
339	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  else  {  expandableODE  =  stateInitialized;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  else  {  expandableODE  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  else  {  expandableODE  =  stateInitialized;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	add
340	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  else  {  stateInitialized  =  expandableODE;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  else  {  stateInitialized  =  expandableODE;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    if(stateInitialized!=  null)  {  setStateInitialized(stateInitialized);  }  else  {  stateInitialized  =  expandableODE;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	14	None	add
341	[BUG]  [BUGGY]  Iterator  <  State>  statesInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  Iterator  <  State>  statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	Iterator  <  State>  statesInitialized  =  stateInitialized;	  This.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    this.statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	44	1	replace
343	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    this.statesInitialized    =    isLastStep;    	compilable	  [FE]  AssertionError  	44	1	replace
344	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if  [CE]  '('  expected  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if	  	non-compiled	[CE]  '('  expected	101	None	add
345	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateIn  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateIn  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateIn	  	non-compiled	[CE]  ';'  expected	101	None	add
346	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
347	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized;  if(this.statesInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	61	1	replace
348	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(this.statesInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(this.statesInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	compilable	  [FE]  AssertionError  	61	1	replace
349	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  expandableODE;  }  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  expandableODE;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  expandableODE;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	61	None	replace
350	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
351	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  expandableODE;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  cannot  find  symbol  expandableODE  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  expandableODE;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  expandableODE;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	89	None	add
352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	89	1	add
353	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	89	1	add
354	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  ||  stateInitialized.isFirstStep();  [CE]  boolean  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  ||  stateInitialized.isFirstStep();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isLastStep()  ||  stateInitialized.isFirstStep();	  stateInitialized    =    stateInitialized.isLastStep()    ||    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	17	None	replace
355	[BUG]  [BUGGY]  this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	60	None	replace
356	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  isLastStep;  this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        this.statesInitialized    =    stateInitialized    &&    isLastStep;    this.statesInitialized  =  stateInitialized  &&  expandableODE;  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	28	None	add
357	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.equivalenceStatements.getAssignedStatements();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.equivalenceStatements.getAssignedStatements();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.equivalenceStatements.getAssignedStatements();	  StatefulODE    equations    =    this.stateInitialized.getAssignedStatements();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
358	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	43	1	add
359	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  stateInitialized;	  	compilable	  [FE]  AssertionError  	43	1	add
360	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  expandableODE;  this.statesInitialized  =  isLastStep;  [CE]  cannot  find  symbol  expandableODE  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    this.statesInitialized  =  isLastStep;  this.statesInitialized  =  expandableODE;  this.statesInitialized  =  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        this.statesInitialized    =    isLastStep;    this.statesInitialized  =  expandableODE;  this.statesInitialized  =  isLastStep;	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	43	None	add
361	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  +  expansionableODE;  [CE]  cannot  find  symbol  expansionableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  +  expansionableODE;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  +  expansionableODE;	  this.statesInitialized    =    stateInitialized    +    expandableODE;    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	95	None	replace
362	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(this.stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE().equals(this.stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE().equals(this.stateInitialized);	  StatefulODE    equations    =    getStatefulODE().equals(stateInitialized);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
363	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  expandableODE;  setStatesInitialized(stateInitialized);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  expandableODE;  setStatesInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  expandableODE;  setStatesInitialized(stateInitialized);  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    expandableODE;    setStatesInitialized(stateInitialized);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
364	[BUG]  [BUGGY]  StatefulODE  equations  =  expandable,  this.statesInitialized.getStatefulODE();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  expandable,  this.statesInitialized.getStatefulODE();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  expandable,  this.statesInitialized.getStatefulODE();	  StatefulODE    equations    =    stateInitialized,    this.statesInitialized.getStatefulODE();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
365	[BUG]  [BUGGY]  Iterator  <  State>  stateInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  Iterator  <  State>  stateInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	Iterator  <  State>  stateInitialized  =  stateInitialized;	  This.statesInitialized    =    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
366	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  /  1L;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  /  1L;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  /  1L;	  this.statesInitialized    =    stateInitialized    +    1L;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	55	None	replace
367	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	100	1	replace
368	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	100	1	replace
369	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized  =  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	100	1	replace
370	[BUG]  [BUGGY]  this.statesInitialized  =  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	100	1	replace
371	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  *  0;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  *  0;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  *  0;	  this.statesInitialized    =    stateInitialized    +    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	62	None	replace
372	[BUG]  [BUGGY]  stateInitialized  =  this.expanableODE.evaluate(this);  [CE]  cannot  find  symbol  expanableODE  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.expanableODE.evaluate(this);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.expanableODE.evaluate(this);	  stateInitialized    =    equations.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expanableODE	11	None	replace
373	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	102	1	replace
374	[BUG]  [BUGGY]  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	102	1	replace
375	[BUG]  [BUGGY]  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	102	1	replace
377	[BUG]  [BUGGY]  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    	compilable	  [FE]  AssertionError  	102	1	replace
378	[BUG]  [BUGGY]  this.expandableODE  =  expansionable.evaluate(null,  stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expansionable.evaluate(null,  stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expansionable.evaluate(null,  stateInitialized);	  this.expandableODE    =    expansionable.evaluate(null);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	85	None	replace
379	[BUG]  [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandableODE,  this.stateInitialized);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  getStatefulODE(expandableODE,  this.stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  getStatefulODE(expandableODE,  this.stateInitialized);	  StatefulODE    equations    =    getStatefulODE(expandableODE);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
380	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isInitialized();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isInitialized();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isInitialized();	  if(stateInitialized)    {    for(int    i    =    0,    isLastStep;    i    <    isLastStep;    ++i)    {    stateInitialized.add(i);    }    	non-compiled	[CE]  boolean  cannot  be  dereferenced	96	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized!=  stateInitialized)  {  setStateInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	if(stateInitialized!=  stateInitialized)  {  setStateInitialized(stateInitialized);  }	  setStateInitialized(stateInitialized);    	compilable	  [FE]  AssertionError  	15	1	replace
382	[BUG]  [BUGGY]  if(stateInitialized!=  stateInitialized)  {  setStateInitialized(stateInitialized);  }  [FE]  AssertionError  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized!=  stateInitialized)  {  setStateInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized!=  stateInitialized)  {  setStateInitialized(stateInitialized);  }	  setStateInitialized(stateInitialized);    	compilable	  [FE]  AssertionError  	15	1	replace
383	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  expandableODE)  {  setStateInitialized(stateInitialized);  }  [CE]  cannot  find  symbol  expandableODE  [FE]    StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  if(stateInitialized!=  expandableODE)  {  setStateInitialized(stateInitialized);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    if(stateInitialized!=  expandableODE)  {  setStateInitialized(stateInitialized);  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	14	None	add
384	[BUG]  [BUGGY]  setStateInitialized(stateInitialized);  this.stateInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  stateInitialized  [FE]      StackOverflowError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  setStateInitialized(stateInitialized);  this.stateInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	setStateInitialized(stateInitialized);    this.stateInitialized  =  stateInitialized;	  	non-compiled	[CE]  cannot  find  symbol  stateInitialized	14	None	add
385	[BUG]  [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  expandedableODE);  [CE]  cannot  find  symbol  expandedableODE  [FE]                AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  this.statesInitialized.evaluate(this,  expandedableODE);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  this.statesInitialized.evaluate(this,  expandedableODE);	  stateInitialized    =    this.statesInitialized.evaluate(this);    	non-compiled	[CE]  cannot  find  symbol  expandedableODE	10	None	replace
386	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionableODE;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  cannot  find  symbol  expansionableODE  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  &&  expansionableODE;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized  =  stateInitialized  &&  expansionableODE;  initStates();  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  this.statesInitialized    =    stateInitialized    &&    isLastStep;    initStates();    this.statesInitialized    =    stateInitialized    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	82	None	replace
387	[BUG]  [BUGGY]  This.stateInitialized  =  stateInitialized;  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  This.stateInitialized  =  stateInitialized;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	This.stateInitialized  =  stateInitialized;	  this.stateInitialized    =    stateInitialized;    	non-compiled	[CE]  cannot  find  symbol  This	13	None	replace
388	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.elements.getAssignedState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.elements.getAssignedState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.elements.getAssignedState();	  StatefulODE    equations    =    this.stateInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
389	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedState(stateInitialized);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.setAssignedState(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.setAssignedState(stateInitialized);	  StatefulODE    equations    =    this.stateInitialized.getAssignedState();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
390	[BUG]  [BUGGY]  StatefulODE  equations  =  this.stateInitialized.escapeStates();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  this.stateInitialized.escapeStates();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  this.stateInitialized.escapeStates();	  StatefulODE    equations    =    stateInitialized.escapeStates();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
391	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
392	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  This.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  This.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    This.statesInitialized  =  stateInitialized;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  isLastStep;  }	  	non-compiled	[CE]  cannot  find  symbol  This	89	None	add
393	[BUG]  [BUGGY]  this.expandableODE  =  expandedable.equals(stateInitialized);  [CE]  cannot  find  symbol  expandableODE  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.expandableODE  =  expandedable.equals(stateInitialized);  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.expandableODE  =  expandedable.equals(stateInitialized);	  this.expandableODE    =    stateInitialized.equals(extendableODE);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	63	None	replace
394	[BUG]  [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(isLastStep!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized;  }	  this.statesInitialized    =    isLastStep;    if(isLastStep!=    stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    for(int    i    =    0;    i    <    statesInitialized;    ++i)    {    this.statesInitialized    =    stateInitialized;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
395	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
396	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
397	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }	  	compilable	  [FE]  AssertionError  	36	1	add
398	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }	  	compilable	  [FE]  AssertionError  	36	1	add
399	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }	  	compilable	  [FE]  AssertionError  	36	1	add
400	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  ||  isLastStep;  }	  	compilable	  [FE]  AssertionError  	36	1	add
401	[BUG]  [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    stateInitialized    &&    isLastStep;    if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        stateInitialized        &&        isLastStep;        if(this.statesInitialized    ==    stateInitialized)    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized    &&    isLastStep;    }    this.statesInitialized  =  stateInitialized  &&  isLastStep;  if(this.statesInitialized  ==  stateInitialized)  {  this.statesInitialized  =  stateInitialized  &&  isLastStep;  }  else  {  this	  	non-compiled	[CE]  not  a  statement	101	None	add
402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	add	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	69	1	add
403	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }	  	compilable	  [FE]  AssertionError  	69	1	add
404	[BUG]  [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  else  {  this.statesInitialized  =  expandableODE;  }  [CE]  cannot  find  symbol  expandableODE  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  else  {  this.statesInitialized  =  expandableODE;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized    =    stateInitialized    ||    stateInitialized;    if(this.statesInitialized!=  stateInitialized)  {  this.statesInitialized  =  stateInitialized  ||  stateInitialized;  }  else  {  this.statesInitialized  =  expandableODE;  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	69	None	add
405	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  expandableODE;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }	  	non-compiled	[CE]  cannot  find  symbol  expandableODE	59	None	add
406	[BUG]  [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  this.statesInitialized    =    isLastStep;    if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this.statesInitialized  =  stateInitialized;  }  this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	this.statesInitialized        =        isLastStep;        if(stateInitialized)    {    this.statesInitialized    =    isLastStep;    }    else    {    this.statesInitialized    =    stateInitialized;    }    this.statesInitialized  =  stateInitialized;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  if(stateInitialized)  {  this.statesInitialized  =  isLastStep;  }  else  {  this	  	non-compiled	[CE]  not  a  statement	59	None	add
407	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  isLastStep;  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  isLastStep;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isLastStep()  &&  isLastStep;	          stateInitialized    =    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	58	None	replace
408	[BUG]  [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.isFirstStep();  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.isFirstStep();  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	stateInitialized  =  stateInitialized.isLastStep()  &&  stateInitialized.isFirstStep();	          stateInitialized    =    stateInitialized.isLastStep();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	58	None	replace
409	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(expableODE,  stateInitialized.getStatefulODE());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.setStatefulODE(expableODE,  stateInitialized.getStatefulODE());  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.setStatefulODE(expableODE,  stateInitialized.getStatefulODE());	  StatefulODE    equations    =    stateInitialized.setStatefulODE(equivalences,    stateInitialized.getStatefulODE());    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
410	[BUG]  [BUGGY]  StatefulODE  equations  =  stateInitialized.elements.getAssignmentState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  setStateInitialized(final  boolean  stateInitialized)  {      [BUGGY]  StatefulODE  equations  =  stateInitialized.elements.getAssignmentState();  [BUGGY]      this.statesInitialized  =  stateInitialized;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  setStateInitialized  [RETURN_TYPE]  void  final  boolean  stateInitialized  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	261	261	1	replace	StatefulODE  equations  =  stateInitialized.elements.getAssignmentState();	  StatefulODE    equations    =    stateInitialized.getAssignmentState();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
