bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	115	None	replace
2	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	115	None	replace
3	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	115	None	replace
4	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    nDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	84	None	replace
5	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  nDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  nDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  nDot.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    nDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	84	None	replace
6	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    values);    	non-compiled	[CE]  cannot  find  symbol  convergence	14	None	replace
7	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    values);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	14	None	replace
8	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
9	[BUG]  [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
10	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	53	None	replace
11	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  >  expected	53	None	replace
12	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	1	None	replace
13	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  evaluations,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
14	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  values);  [CE]  cannot  find  symbol  values  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  values);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  values);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  values	1	None	replace
15	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isInitialized);  [CE]  cannot  find  symbol  isInitialized  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isInitialized);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  isInitialized	1	None	replace
16	[BUG]  [BUGGY]  if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expansion  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansion	95	None	replace
17	[BUG]  [BUGGY]  because(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  because(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	because(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  ';'  expected	95	None	replace
18	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandable);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y    +    1,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	109	None	replace
19	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y    +    1,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	109	None	replace
20	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandableODE);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y    +    1,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	109	None	replace
21	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandable.doubleValue());  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandable.doubleValue());  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  expandable.doubleValue());  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y    +    1,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	109	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	30	1	add
23	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	30	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	30	1	add
25	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	30	1	add
26	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	30	1	add
28	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	30	1	add
29	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expandableODE);	  evaluateDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	16	None	replace
30	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isLastStep,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isLastStep,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  isLastStep,  convergence);	  evaluateDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	16	None	replace
31	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isInitialized);  [CE]  cannot  find  symbol  isInitialized  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  isInitialized);	  evaluateDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  isInitialized	16	None	replace
32	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
33	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
34	[BUG]  [BUGGY]  if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
35	[BUG]  [BUGGY]  if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	38	None	replace
39	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	90	None	replace
40	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	90	None	replace
41	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	90	None	replace
42	[BUG]  [BUGGY]  nullExpandables.computeDerivatives(t,  y,  yDot);  [CE]  cannot  find  symbol  nullExpandables  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  nullExpandables.computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	nullExpandables.computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    iDot);    }    	non-compiled	[CE]  cannot  find  symbol  nullExpandables	62	None	replace
43	[BUG]  [BUGGY]  null.computeDerivatives(t,  y,  yDot);  [CE]  <null>  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  null.computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	null.computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    iDot);    }    	non-compiled	[CE]  <null>  cannot  be  dereferenced	62	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	93	1	add
45	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	93	1	add
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	93	1	add
47	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	93	1	add
48	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  ';'  expected	93	None	add
49	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  assessments  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  assessments	93	None	add
50	[BUG]  [BUGGY]  if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expansionable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	125	None	replace
51	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    values);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	122	None	replace
52	[BUG]  [BUGGY]  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  extendable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  extendable	96	None	replace
53	[BUG]  [BUGGY]  if(expandable!=  null)  {  expanded.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expanded  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expanded.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expanded.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expanded	96	None	replace
54	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  luateDerivatives(t,  y,  yDot,  expandable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	luateDerivatives(t,  y,  yDot,  expandable);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
55	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  luateDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	luateDerivatives(t,  y,  yDot,  expansionable);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionable	68	None	replace
56	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  luateDerivatives(t,  y,  yDot,  expansion);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	luateDerivatives(t,  y,  yDot,  expansion);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansion	68	None	replace
57	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	70	None	replace
58	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	70	None	replace
59	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	70	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    extendable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	29	None	replace
61	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
62	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
63	[BUG]  [BUGGY]  int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  >  expected  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  >  expected	10	None	replace
64	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
65	[BUG]  [BUGGY]  if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
66	[BUG]  [BUGGY]  if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
67	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expansionableODE);	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	4	None	replace
68	[BUG]  [BUGGY]  if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expansionable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	107	None	replace
69	[BUG]  [BUGGY]  because(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  because(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	because(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  ';'  expected	107	None	replace
70	[BUG]  [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
71	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	69	None	replace
72	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	69	None	replace
73	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandableODE);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	69	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  extendable  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    extendable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	25	None	replace
75	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>'}  [CE]  unclosed  character  literal  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>'}  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>'}	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    '    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
76	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	98	None	replace
77	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	98	None	replace
78	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	98	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	47	1	add
80	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	47	1	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	47	1	add
82	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	47	1	add
83	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  assessments  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  assessments	47	None	add
84	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  ';'  expected	47	None	add
85	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  isInitialized);  [CE]  cannot  find  symbol  isInitialized  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  isInitialized);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  isInitialized);	  validateDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  isInitialized	63	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	42	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expansionable);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	41	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.length;  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	41	None	replace
95	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  yDot,  convergence);	  this.expandable.computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  convergence	8	None	replace
96	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  yDot,  isLastStep);	  this.expandable.computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	8	None	replace
97	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  evaluations);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  yDot,  evaluations);	  this.expandable.computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	8	None	replace
98	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  assessments  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    assessments.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  assessments	50	None	replace
99	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  expansion  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    assessments.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansion	50	None	replace
100	[BUG]  [BUGGY]  if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
101	[BUG]  [BUGGY]  if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
102	[BUG]  [BUGGY]  if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);	  	compilable	  [FE]  AssertionError  	5	1	add
104	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);	  	compilable	  [FE]  AssertionError  	5	1	add
105	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  (  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  (  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    (  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);	  	non-compiled	[CE]  not  a  statement	5	None	add
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  y);	  	compilable	  [FE]  AssertionError  	5	1	add
107	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  y);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  y);	  	compilable	  [FE]  AssertionError  	5	1	add
108	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  iDot);  [CE]  cannot  find  symbol  iDot  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  iDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  iDot);	  	non-compiled	[CE]  cannot  find  symbol  iDot	5	None	add
109	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDOt);  [CE]  cannot  find  symbol  yDOt  [FE]            AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDOt);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDOt);	  	non-compiled	[CE]  cannot  find  symbol  yDOt	5	None	add
110	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
111	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	23	None	replace
112	[BUG]  [BUGGY]  tehnicătehnică  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  tehnicătehnică  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	tehnicătehnică  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    YDot);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
113	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex	  	non-compiled	[CE]  ')'  expected	59	None	add
114	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expand  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expand  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expand	  	non-compiled	[CE]  ')'  expected	59	None	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	59	1	add
116	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	59	1	add
117	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(exp  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(exp  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(exp	  	non-compiled	[CE]  ')'  expected	59	None	add
118	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex	  	non-compiled	[CE]  ')'  expected	59	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	45	1	add
120	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	45	1	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	45	1	add
122	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	45	1	add
123	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  assessments  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  assessments	45	None	add
124	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  ';'  expected	45	None	add
125	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  evaluations.computeDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  evaluations.computeDerivatives(t,  y,  yDot,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  evaluations.computeDerivatives(t,  y,  yDot,  expandable);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
126	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  evaluates.computeDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  evaluates.computeDerivatives(t,  y,  yDot,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  evaluates.computeDerivatives(t,  y,  yDot,  expandable);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  evaluates	2	None	replace
127	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expansionable,  evaluations);  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expansionable,  evaluations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expansionable,  evaluations);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  expansionable	2	None	replace
128	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	2	None	replace
129	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
130	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
131	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
132	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  yDot[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  yDot[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  yDot[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
133	[BUG]  [BUGGY]  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  extendable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  extendable	81	None	replace
134	[BUG]  [BUGGY]  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  extendable  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  extendable	81	None	replace
135	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
136	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
137	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [CE]  >  expected  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable[0],    y[1]);    }    	non-compiled	[CE]  >  expected	11	None	replace
138	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  convergence);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  convergence);	  evaluateDerivatives(t,    y,    yDot,    expansionable);    	non-compiled	[CE]  cannot  find  symbol  convergence	18	None	replace
139	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandedable);  [CE]  cannot  find  symbol  expandedable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandedable);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expandedable);	  evaluateDerivatives(t,    y,    yDot,    expansionable);    	non-compiled	[CE]  cannot  find  symbol  expandedable	18	None	replace
140	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  t,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  t,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  t,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	126	None	replace
141	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  isLastStep.computeDerivatives(t,  y,  yDot,  expandable,  isLastStep);  [CE]  boolean  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  isLastStep.computeDerivatives(t,  y,  yDot,  expandable,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  isLastStep.computeDerivatives(t,  y,  yDot,  expandable,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	126	None	replace
142	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	126	None	replace
143	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expandable,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expandable,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expandable,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  double  cannot  be  dereferenced	126	None	replace
144	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	129	None	replace
145	[BUG]  [BUGGY]  evaluateDerivatives.add(null);  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives.add(null);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives.add(null);	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	129	None	replace
146	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	129	None	replace
147	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluations.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	129	None	replace
148	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	75	None	replace
149	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	75	None	replace
150	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[2]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
151	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[2]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
152	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[2]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[2]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[2]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[2]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	106	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
155	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
156	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(ex	  	non-compiled	[CE]  ')'  expected	57	None	add
157	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expand  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expand  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expand	  	non-compiled	[CE]  ')'  expected	57	None	add
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	57	1	add
159	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	57	1	add
160	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(exp  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(exp  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(exp	  	non-compiled	[CE]  ')'  expected	57	None	add
161	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  nu  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  nu  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  nu	  	non-compiled	[CE]  ')'  expected	57	None	add
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	32	1	add
163	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	32	1	add
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	32	1	add
165	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	32	1	add
166	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  ';'  expected	32	None	add
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	32	1	add
168	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	32	1	add
169	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	67	None	replace
170	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	67	None	replace
171	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives.add(y,  t);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives.add(y,  t);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives.add(y,  t);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	67	None	replace
172	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  >  expected	74	None	replace
173	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  isLastStep,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    convergence);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	13	None	replace
174	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  size);  [CE]  cannot  find  symbol  size  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  size);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  size);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    convergence);    	non-compiled	[CE]  cannot  find  symbol  size	13	None	replace
175	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	9	None	replace
176	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  >  expected	9	None	replace
177	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  array.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	71	None	replace
178	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	71	None	replace
179	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	71	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	124	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    assessDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
183	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	92	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expandable.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  expandable.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  expandable.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  length	88	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  array  required,  but  ExpandableStatefulODE  found  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  array  required,  but  ExpandableStatefulODE  found	88	None	replace
186	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  expandable.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  expandable.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  expandable.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
187	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  t);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  t);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  t);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	66	None	replace
188	[BUG]  [BUGGY]  if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
189	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  For(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	For(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	54	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length  -  1;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	26	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	26	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
193	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  convergence);	  ((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  convergence	6	None	replace
194	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  isLastStep);	  ((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	6	None	replace
195	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  this);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  this);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  this);	  ((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	6	None	replace
196	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  expanse[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  expanse[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  expanse[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expanse[0],    expanse[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	100	None	replace
197	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expanse[0],    expanse[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	100	None	replace
198	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expanse[0],    expanse[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	100	None	replace
199	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  new  double[]  {  yDot  }  );	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
200	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)y).computeDerivatives(t,  expandable,  new  double[]  {  yDot  }  );  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)y).computeDerivatives(t,  expandable,  new  double[]  {  yDot  }  );  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)y).computeDerivatives(t,  expandable,  new  double[]  {  yDot  }  );	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
201	[BUG]  [BUGGY]  int  expandableODE  =  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  expandableODE  =  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  expandableODE  =  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
202	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  isLastStep);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansionable	127	None	replace
203	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansionable	127	None	replace
204	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  isResetOccurred,  isLastStep);  [CE]  cannot  find  symbol  isResetOccurred  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  isResetOccurred,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  isResetOccurred,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  isResetOccurred	127	None	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	35	1	add
206	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	35	1	add
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	35	1	add
208	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	35	1	add
209	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  y  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  y  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  y	  	non-compiled	[CE]  ')'  expected	35	None	add
210	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,	  	non-compiled	[CE]  ')'  expected	35	None	add
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  yDot);	  	compilable	  [FE]  AssertionError  	7	1	add
212	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  yDot);	  	compilable	  [FE]  AssertionError  	7	1	add
213	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  This.expandable.computeDerivatives(t,  y,  yDot);  [CE]  package  This  does  not  exist  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  This.expandable.computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    This.expandable.computeDerivatives(t,  y,  yDot);	  	non-compiled	[CE]  package  This  does  not  exist	7	None	add
214	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
215	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  true;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  true;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	7	1	add
216	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  iDot);  [CE]  cannot  find  symbol  iDot  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  iDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  iDot);	  	non-compiled	[CE]  cannot  find  symbol  iDot	7	None	add
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	7	1	add
218	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  false;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  false;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  yDot);  isLastStep  =  false;	  	compilable	  [FE]  AssertionError  	7	1	add
219	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
220	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluateDerivatives.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  evaluateDerivatives.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  evaluateDerivatives.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
221	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  evaluations.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  evaluations.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
222	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y  +=  2)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
223	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
224	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
225	[BUG]  [BUGGY]  evaluateDerivatives(t,  y[0],  yDot[1]);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y[0],  yDot[1]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y[0],  yDot[1]);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
226	[BUG]  [BUGGY]  evaluateDerivatives(t,  y[0],  yDot);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y[0],  yDot);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y[0],  yDot);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
227	[BUG]  [BUGGY]  evaluateDerivatives(t,  y[0],  yDot,  t[1]);  [CE]  array  required,  but  double  found  [FE]                              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y[0],  yDot,  t[1]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y[0],  yDot,  t[1]);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  array  required,  but  double  found	12	None	replace
228	[BUG]  [BUGGY]  evaluateDerivatives(t,  y[0],  yDot,  1]);  [CE]  ')'  expected  [FE]                                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y[0],  yDot,  1]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y[0],  yDot,  1]);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  ')'  expected	12	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  1;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	24	None	replace
230	[BUG]  [BUGGY]  if(expandable!=  null)  {  evaluates.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [CE]  cannot  find  symbol  evaluates  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  evaluates.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  evaluates.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluates.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	51	None	replace
231	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    size);    	non-compiled	[CE]  cannot  find  symbol  convergence	3	None	replace
232	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    size);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	3	None	replace
233	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	120	None	replace
234	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  this);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  this);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  this);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	120	None	replace
235	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  expansion);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  cannot  find  symbol  expansion	120	None	replace
236	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
237	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isResetOccurred,  isLastStep);  [CE]  cannot  find  symbol  isResetOccurred  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isResetOccurred,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isResetOccurred,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  isResetOccurred	91	None	replace
238	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  maxCheckInterval);	  validateDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	64	None	replace
239	[BUG]  [BUGGY]  if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expansion  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expansion	77	None	replace
240	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	77	None	replace
241	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  expandable);	  validateDerivatives(t,    y,    yDot,    expansion);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
242	[BUG]  [BUGGY]  if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expansion  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expansion	97	None	replace
243	[BUG]  [BUGGY]  because(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  because(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	because(expansion!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  ';'  expected	97	None	replace
244	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	52	None	replace
245	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	52	None	replace
246	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	52	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  assessments  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	89	None	replace
248	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
249	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  y.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
250	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  >  expected	22	None	replace
251	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  convergence	86	None	replace
252	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  contiguous);  [CE]  cannot  find  symbol  contiguous  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  contiguous);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  contiguous);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    maxCheckInterval);    	non-compiled	[CE]  cannot  find  symbol  contiguous	86	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  xDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  xDot  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  xDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  xDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    xDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  xDot	111	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  x  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    xDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  x	111	None	replace
255	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  contiguous);  [CE]  cannot  find  symbol  contiguous  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  contiguous);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  contiguous);	  validateDerivatives(t,    y,    yDot,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  contiguous	103	None	replace
256	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  cond);  [CE]  cannot  find  symbol  cond  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  cond);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  cond);	  validateDerivatives(t,    y,    yDot,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  cond	103	None	replace
257	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	82	1	add
258	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	82	1	add
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }	  	compilable	  [FE]  AssertionError  	82	1	add
260	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }	  	compilable	  [FE]  AssertionError  	82	1	add
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	82	1	add
262	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	82	1	add
263	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  ';'  expected	82	None	add
264	[BUG]  [BUGGY]  if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expansionable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	118	None	replace
265	[BUG]  [BUGGY]  because(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  because(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	because(expansionable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  ';'  expected	118	None	replace
266	[BUG]  [BUGGY]  nisipable.computeDerivatives(t,  y,  yDot);  [CE]  cannot  find  symbol  nisipable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  nisipable.computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	nisipable.computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  nisipable	99	None	replace
267	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateStates);  [CE]  cannot  find  symbol  stateStates  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateStates);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateStates);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    stateHandlers);    	non-compiled	[CE]  cannot  find  symbol  stateStates	15	None	replace
268	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	73	None	replace
269	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	73	None	replace
270	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	73	None	replace
271	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	72	None	replace
272	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y  +=  2)  {  evaluateDerivatives(t,  y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	72	None	replace
273	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	72	None	replace
274	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	20	None	replace
275	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	20	None	replace
276	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    ')'    	non-compiled	[CE]  ')'  expected	79	None	replace
277	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
278	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
279	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  evaluations,  isLastStep);	  validateDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
280	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  evaluations.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  evaluations.length);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  evaluations.length);	  validateDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  length	65	None	replace
281	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  values);  [CE]  cannot  find  symbol  values  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  values);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  values);	  validateDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  values	65	None	replace
282	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
283	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	108	None	replace
284	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	108	None	replace
285	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	108	None	replace
286	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	108	None	replace
287	[BUG]  [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
288	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	19	None	replace
289	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  expansion);  }  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  expansion);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  expansion);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expansion	27	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	27	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  isLastStep);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  isLastStep);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  isLastStep);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	27	None	replace
292	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
293	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
294	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	123	None	replace
295	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  ==  ')'  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  ==  ')'  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  ==  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    ')'    	non-compiled	[CE]  ')'  expected	80	None	replace
296	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	35	1	add
297	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	35	1	add
298	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  extendable  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  extendable	35	None	add
299	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expanable  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	35	None	add
300	[BUG]  [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
301	[BUG]  [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
302	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
303	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
304	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
305	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
306	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0,  isLastStep;  i  <  isLastStep;  i++)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
307	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	21	None	replace
308	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
309	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  y  }  );  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  y  }  );  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  y  }  );  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    iDot);    }    	non-compiled	[CE]  incompatible  types	62	None	replace
310	[BUG]  [BUGGY]  if(expandable!=  null)  {  evaluates.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  evaluates  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  evaluates.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  evaluates.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluates.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	51	None	replace
311	[BUG]  [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluates.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
312	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [CE]  cannot  find  symbol  evaluates  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  evaluates	93	None	add
313	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  extendable  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  extendable	93	None	add
314	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  equations);  }  [CE]  cannot  find  symbol  equations  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  equations);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  equations);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  equations	27	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [CE]  cannot  find  symbol  assessments  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  x[i],  y[i]);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    assessments.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  assessments	89	None	replace
316	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  scope);  [CE]  cannot  find  symbol  scope  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  scope);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  scope);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  scope	2	None	replace
317	[BUG]  [BUGGY]  if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
318	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  expandedableODE);  [CE]  cannot  find  symbol  expandedableODE  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  expandedableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  expandedableODE);	  validateDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  expandedableODE	64	None	replace
319	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  expansion);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    expansion);    	non-compiled	[CE]  cannot  find  symbol  expansion	87	None	replace
320	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    y);    }    	non-compiled	[CE]  >  expected	19	None	replace
321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	61	1	replace
322	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	61	1	replace
323	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  yDot,  expandableODE);	  this.expandable.computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	8	None	replace
324	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0]);  }	  if(expansions    ==    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
325	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	96	None	replace
326	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	96	None	replace
327	[BUG]  [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(y))  {  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
328	[BUG]  [BUGGY]  if(expansions!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expansions  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansions	96	None	replace
329	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  YDot);  [CE]  cannot  find  symbol  YDot  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  YDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  YDot);	  	non-compiled	[CE]  cannot  find  symbol  YDot	5	None	add
330	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  >  expected	70	None	replace
331	[BUG]  [BUGGY]  if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableOTE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableOTE	77	None	replace
332	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  null);	  validateDerivatives(t,    y,    yDot,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
333	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  true);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  true);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  true);	  validateDerivatives(t,    y,    yDot,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
334	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  expandable[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  expandable[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  expandable[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expanse[0],    expanse[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	100	None	replace
335	[BUG]  [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
336	[BUG]  [BUGGY]  if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expandableOTE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expandableOTE	118	None	replace
337	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	97	None	replace
338	[BUG]  [BUGGY]  if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expandableOTE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expandableOTE	97	None	replace
339	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    expandable[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
340	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateState);  [CE]  cannot  find  symbol  stateState  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateState);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateState);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    convergence);    	non-compiled	[CE]  cannot  find  symbol  stateState	13	None	replace
341	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	125	None	replace
342	[BUG]  [BUGGY]  if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableOTE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableOTE	125	None	replace
343	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  xDot);  [CE]  cannot  find  symbol  xDot  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  xDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  xDot);	  	non-compiled	[CE]  cannot  find  symbol  xDot	7	None	add
344	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  id);  [CE]  cannot  find  symbol  id  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  id);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  id);	  	non-compiled	[CE]  cannot  find  symbol  id	7	None	add
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  y);	  	compilable	  [FE]  AssertionError  	7	1	add
346	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  y);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  y);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  y);	  	compilable	  [FE]  AssertionError  	7	1	add
347	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	95	None	replace
348	[BUG]  [BUGGY]  if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableOTE  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableOTE!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableOTE	95	None	replace
349	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableODE  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	95	None	replace
350	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	71	None	replace
351	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	71	None	replace
352	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	81	None	replace
353	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	81	None	replace
354	[BUG]  [BUGGY]  if(expandableType!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableType  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableType!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableType!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableType	81	None	replace
355	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if  [CE]  '('  expected  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if	  	non-compiled	[CE]  '('  expected	59	None	add
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	82	1	add
357	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	82	1	add
358	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expanable  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	82	None	add
359	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  >  expected	69	None	replace
360	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expanable  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	45	None	add
361	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	73	None	replace
362	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  >  expected  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  >  expected	73	None	replace
363	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    expandable);    }    	non-compiled	[CE]  >  expected	72	None	replace
364	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
365	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
366	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	123	None	replace
367	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	123	None	replace
368	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
369	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	52	None	replace
370	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  assessments,  maxCheckInterval);  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  assessments,  maxCheckInterval);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  assessments,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    size);    	non-compiled	[CE]  cannot  find  symbol  assessments	3	None	replace
371	[BUG]  [BUGGY]  if(expandableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableODE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	107	None	replace
372	[BUG]  [BUGGY]  if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expandableOTE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expandableOTE	107	None	replace
373	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	108	None	replace
374	[BUG]  [BUGGY]  if(expandable.getState()!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.getState()!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.getState()!=  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	36	1	replace
376	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	36	1	replace
377	[BUG]  [BUGGY]  evaluateDerivatives(t,  expandable[0],  y[1]);  [CE]  array  required,  but  ExpandableStatefulODE  found  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  expandable[0],  y[1]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  expandable[0],  y[1]);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  array  required,  but  ExpandableStatefulODE  found	12	None	replace
378	[BUG]  [BUGGY]  assessDerivatives(t,  y[0],  yDot[1]);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  assessDerivatives(t,  y[0],  yDot[1]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	assessDerivatives(t,  y[0],  yDot[1]);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
379	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandedableODE);  [CE]  cannot  find  symbol  expandedableODE  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandedableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expandedableODE);	  evaluateDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expandedableODE	16	None	replace
380	[BUG]  [BUGGY]  assessDerivatives(t,  y,  yDot,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  assessDerivatives(t,  y,  yDot,  expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	assessDerivatives(t,  y,  yDot,  expandableODE);	  evaluateDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	16	None	replace
381	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
382	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
383	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  0,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  0,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  0,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	126	None	replace
384	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  expansion,  isLastStep);  [CE]  cannot  find  symbol  expansion  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  expansion,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  expansion,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansion	126	None	replace
385	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  ')'  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  ')'  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    ')'    	non-compiled	[CE]  ')'  expected	80	None	replace
386	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expansionable.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	67	None	replace
387	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)extendable).computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  extendable  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)extendable).computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  ((  ExpandableStatefulODE)extendable).computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	58	None	replace
388	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
389	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  0,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  0,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  0,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
390	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	91	None	replace
391	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
392	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
393	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	105	None	replace
394	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if  [CE]  '('  expected  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if	  	non-compiled	[CE]  '('  expected	57	None	add
395	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  For(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	For(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  '.class'  expected	55	None	replace
396	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  expected;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  expected;  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  expected;  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
397	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(isLastStep)  {  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(isLastStep)  {  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
398	[BUG]  [BUGGY]  if(isLastStep)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(isLastStep)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(isLastStep)  {  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  extendable  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    extendable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	29	None	replace
400	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	129	None	replace
401	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	  if(expandable!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
402	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  >  expected	66	None	replace
403	[BUG]  [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(y))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    assessments.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
404	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    assessments.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
405	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    ')'    	non-compiled	[CE]  ')'  expected	79	None	replace
406	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expanable  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expanable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  expanable	30	None	add
407	[BUG]  [BUGGY]  if(!isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(!isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(!isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
408	[BUG]  [BUGGY]  if(!isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(!isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(!isLastStep)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
409	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i],  t);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i],  t);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i],  t);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	26	None	replace
410	[BUG]  [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  instanceof  ExpandableStatefulODE)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
411	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  expandable);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  evaluations,  expandable);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    values);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	122	None	replace
412	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  valueHandlers);  [CE]  cannot  find  symbol  valueHandlers  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  valueHandlers);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  valueHandlers);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    values);    	non-compiled	[CE]  cannot  find  symbol  valueHandlers	122	None	replace
413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    YDot);    }    	compilable	  [FE]  AssertionError  	110	1	replace
414	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    YDot);    }    	compilable	  [FE]  AssertionError  	110	1	replace
415	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  nDots;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  nDots;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  nDots;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    nDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	84	None	replace
416	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  expandableODE,  isLastStep);  [CE]  cannot  find  symbol  expandableODE  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  expandableODE,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  expandableODE,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	127	None	replace
417	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  resetOccurred,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansionable	127	None	replace
418	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  expansionable,  isLastStep);  [CE]  cannot  find  symbol  expansionable  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  expansionable,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  expansionable,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansionable	127	None	replace
419	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  expansionSize,  isLastStep);  [CE]  cannot  find  symbol  expansionSize  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  expansionSize,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  expansionSize,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  expansionSize	127	None	replace
420	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  null);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  null);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	90	None	replace
421	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  this);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  this);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  this);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	90	None	replace
422	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  expansion);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  expansion	90	None	replace
423	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandable);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
424	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  new  double[]  {  y  }  );  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  new  double[]  {  y  }  );  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  new  double[]  {  y  }  );  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
425	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  progressStart,  isLastStep);  [CE]  cannot  find  symbol  progressStart  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  progressStart,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  progressStart,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  progressStart	1	None	replace
426	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  this.isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  this.isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  this.isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	1	None	replace
427	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  valueHandler);  [CE]  cannot  find  symbol  valueHandler  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  valueHandler);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  valueHandler);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  valueHandler	1	None	replace
428	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansions.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expansions.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expansions.length;  y  +=  2)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
429	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansions.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  expansions.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expansions.length;  y  +=  1)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
430	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  this.events.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  events	41	None	replace
431	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluates  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluates.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	41	None	replace
432	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  convergence);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  cannot  find  symbol  convergence	120	None	replace
433	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	120	None	replace
434	[BUG]  [BUGGY]  if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
435	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  expected  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  expected  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  expected	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    '    	non-compiled	[CE]  ')'  expected	112	None	replace
436	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  extendable,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  extendable,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  extendable,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	73	None	replace
437	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot,  expansionable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    expandable,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	73	None	replace
438	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
439	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  arrays.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  arrays.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  arrays.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }	  for(int    y    =    0;    y    <    expansions.length;    y++)    {    evaluateDerivatives(t,    y,    expansionable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	78	None	replace
440	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  expansion);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  expansion	90	None	replace
441	[BUG]  [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE.computeDerivatives(t,  y,  yDot,  expansionable);	  expandable.computeDerivatives(t,    y,    yDot,    convergence);    	non-compiled	[CE]  cannot  find  symbol  expansionable	90	None	replace
442	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  equations,  expandable);  [CE]  cannot  find  symbol  equations  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  evaluateDerivatives(t,  y,  yDot,  equations,  expandable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  equations,  expandable);	  evaluateDerivatives(t,    y,    yDot,    expandable);    	non-compiled	[CE]  cannot  find  symbol  equations	4	None	replace
443	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  >  expected	10	None	replace
444	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
445	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	71	None	replace
446	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives(t,  y,  expandable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  ')'  expected	71	None	replace
447	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	26	None	replace
448	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i],  isLastStep);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i],  isLastStep);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i],  isLastStep);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	26	None	replace
449	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot,  expansionableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  yDot,  expansionableODE);	  this.expandable.computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	8	None	replace
450	[BUG]  [BUGGY]  if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
451	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  integrations);  [CE]  cannot  find  symbol  integrations  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  integrations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  integrations);	  validateDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  integrations	65	None	replace
452	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  expansionable  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    assessments.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	50	None	replace
453	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  assessments  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    assessments.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  assessments	50	None	replace
454	[BUG]  [BUGGY]  if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
455	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  adjustment,  isLastStep);  [CE]  cannot  find  symbol  adjustment  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  adjustment,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  adjustment,  isLastStep);	  expansionable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  adjustment	127	None	replace
456	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandableODE);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	72	None	replace
457	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[1],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
458	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  expandableODE);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
459	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  else  {  return;  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	30	None	add
460	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
461	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  adjustment);  [CE]  cannot  find  symbol  adjustment  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  adjustment);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  adjustment);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    convergence);    	non-compiled	[CE]  cannot  find  symbol  adjustment	13	None	replace
462	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  expansion);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  expansion);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    convergence);    	non-compiled	[CE]  cannot  find  symbol  expansion	13	None	replace
463	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
464	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot,  expansionableODE  }  );  }  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot,  expansionableODE  }  );  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot,  expansionableODE  }  );  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
465	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    new    double[]    {    yDot    }    );    }    	non-compiled	[CE]  incompatible  types	119	None	replace
466	[BUG]  [BUGGY]  if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    ')'    	non-compiled	[CE]  ')'  expected	79	None	replace
467	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  x  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  x	55	None	replace
468	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  t);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  t);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  t);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    values);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	122	None	replace
469	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  yDot  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  yDot  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  yDot  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
470	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(null);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
471	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  t.computeDerivatives(y,  yDot,  expansionable);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  expansionable	2	None	replace
472	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expansionable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [CE]  cannot  find  symbol  expansionable  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expansionable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expansionable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  expansionable	2	None	replace
473	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  offset);  [CE]  cannot  find  symbol  offset  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  offset);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  offset);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  cannot  find  symbol  offset	120	None	replace
474	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  extension);  [CE]  cannot  find  symbol  extension  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  extension);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null,  extension);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    null);    	non-compiled	[CE]  cannot  find  symbol  extension	120	None	replace
475	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expansionable);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y,    expandable);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	69	None	replace
476	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  nu  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  nu  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  nu	  	non-compiled	[CE]  ')'  expected	59	None	add
477	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  nu  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  nu  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  nu	  	non-compiled	[CE]  ')'  expected	59	None	add
478	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y[0],  yDot);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
479	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  adjustment,  isLastStep);  [CE]  cannot  find  symbol  adjustment  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  adjustment,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  adjustment,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  adjustment	91	None	replace
480	[BUG]  [BUGGY]  if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable.equals(t))  {  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
481	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[1]);    }    	non-compiled	[CE]  >  expected	75	None	replace
482	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot,  evaluations);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  luateDerivatives(t,  y,  yDot,  evaluations);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	luateDerivatives(t,  y,  yDot,  evaluations);	  luateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
483	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  state);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  state);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  state);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  state	1	None	replace
484	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  orientation);  [CE]  cannot  find  symbol  orientation  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  orientation);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep,  orientation);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  orientation	1	None	replace
485	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot,  expansionable);	  ((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionable	6	None	replace
486	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  expandableODE);  }	  if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
487	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  state,  isLastStep);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  state,  isLastStep);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  state,  isLastStep);	  ExpandableStatefulODE    equations    =    expandable.computeDerivatives(t,    y,    yDot,    convergence,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  state	126	None	replace
488	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	41	None	replace
489	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  evaluators  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  this.evaluators.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol  evaluators	41	None	replace
490	[BUG]  [BUGGY]  if(expandableDot!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expandableDot  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableDot!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableDot!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expandableDot	77	None	replace
491	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
492	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  y[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
493	[BUG]  [BUGGY]  if(expandableDot!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expandableDot  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandableDot!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandableDot!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expandableDot	97	None	replace
494	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandableODE.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  expandableODE.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expandableODE.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansion.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expandableODE	97	None	replace
495	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot,  expansionable);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	21	None	replace
496	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  equations);  [CE]  cannot  find  symbol  equations  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  equations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  equations);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep,    stateHandlers);    	non-compiled	[CE]  cannot  find  symbol  equations	15	None	replace
497	[BUG]  [BUGGY]  if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
498	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]  }	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  ')'  expected	37	None	replace
499	[BUG]  [BUGGY]  if(expandable  ==  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  extendable  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable  ==  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=    null)    {    extendable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  extendable	96	None	replace
500	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  else  {  return;  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable    ==    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	32	None	add
501	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  =(  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  =(  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((    ExpandableStatefulODE)expandable).computeDerivatives(t,    y,    yDot);    =(  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
502	[BUG]  [BUGGY]  if(expableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expableOTE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expableOTE	118	None	replace
503	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [CE]  cannot  find  symbol  evaluates  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        evaluations.incrementCount();        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  evaluates	45	None	add
504	[BUG]  [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  >  expected	24	None	replace
505	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  equations);  [CE]  cannot  find  symbol  equations  [FE]              AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  equations);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  equations);	  validateDerivatives(t,    y,    yDot,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  equations	103	None	replace
506	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  equations.expandableODE);  [CE]  cannot  find  symbol  equations  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  validateDerivatives(t,  y,  yDot,  equations.expandableODE);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  equations.expandableODE);	  validateDerivatives(t,    y,    yDot,    expandableODE);    	non-compiled	[CE]  cannot  find  symbol  equations	103	None	replace
507	[BUG]  [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  y  =  0;  y  <  yDot.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  >  expected	67	None	replace
508	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  1;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  1;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y);  }	  for(int    y    =    0;    y    <    expandable.length;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	67	None	replace
509	[BUG]  [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	  for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    }    	non-compiled	[CE]  >  expected	38	None	replace
510	[BUG]  [BUGGY]  if(expableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expableODE  [FE]        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expableODE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expableODE	125	None	replace
511	[BUG]  [BUGGY]  if(expableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expableOTE  [FE]          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expableOTE!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expableOTE	125	None	replace
512	[BUG]  [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  evaluations.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expansionable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
513	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  -  '  [CE]  illegal  line  end  in  character  literal  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  -  '  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  -  '	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >=    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	40	None	replace
514	[BUG]  [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=        null)        {        expandable.computeDerivatives(t,        y,        yDot);        }        else        {        return;        }        if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    return;    }    if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  expansionable	82	None	add
515	[BUG]  [BUGGY]  if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(yDot!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '	  if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    >>    '    	non-compiled	[CE]  ')'  expected	39	None	replace
516	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  n,  yDot);  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  this.expandable.computeDerivatives(t,  y,  n,  yDot);  [BUGGY]      }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,    y,    yDot);    this.expandable.computeDerivatives(t,  y,  n,  yDot);	  	non-compiled	[CE]  cannot  find  symbol  n	7	None	add
517	[BUG]  [BUGGY]  determineDerivatives(t,  y[0],  yDot[1]);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  determineDerivatives(t,  y[0],  yDot[1]);  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	determineDerivatives(t,  y[0],  yDot[1]);	  evaluateDerivatives(t,    y[0],    y[1]);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
518	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  evaluateDerivatives  [FE]                AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluateDerivatives.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  evaluateDerivatives	42	None	replace
519	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendedable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  extendedable  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendedable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  extendedable.computeDerivatives(t,  y[i],  yDot);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    extendable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  extendedable	29	None	replace
520	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  yDot[1]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
521	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }	  if(expansions!=    null)    {    for(int    y    =    0;    y    <    this.expansions.length;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
522	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  extendable.computeDerivatives(t,  y[0],  yDot);  }	  for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y[0],    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	22	None	replace
523	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  expansionable);  }  [CE]  cannot  find  symbol  expansionable  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  expansionable);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot,  expansionable);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	27	None	replace
524	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError      [CONTEXT]      public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();      [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]      expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  extendable.computeDerivatives(t,  y,  yDot);  }	  for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	19	None	replace
