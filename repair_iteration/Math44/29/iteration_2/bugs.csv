bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	21	None	replace
2	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  evaluations);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	21	None	replace
3	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  size);  [CE]  cannot  find  symbol  size  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  size);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  size);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  size	21	None	replace
4	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expandable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expandable);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	13	1	replace
6	[BUG]  [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  ((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	((  ExpandableStatefulODE)expandable).computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	13	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	this.expandable.computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	13	1	replace
8	[BUG]  [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  this.expandable.computeDerivatives(t,  y,  yDot);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	this.expandable.computeDerivatives(t,  y,  yDot);	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	compilable	  [FE]  AssertionError  	13	1	replace
9	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	5	None	replace
10	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	5	None	replace
11	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable[0],  y[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	5	None	replace
12	[BUG]  [BUGGY]  evaluateDerivatives(t,  y[0],  y[1]);  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  evaluateDerivatives(t,  y[0],  y[1]);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y[0],  y[1]);	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  convergence);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	7	None	replace
14	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  values);  [CE]  cannot  find  symbol  values  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  values);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  values);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  values	7	None	replace
15	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateHandlers);  [CE]  cannot  find  symbol  stateHandlers  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateHandlers);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  isLastStep,  stateHandlers);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  stateHandlers	7	None	replace
16	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isLastStep);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
17	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansion);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expansion);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansion	1	None	replace
18	[BUG]  [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  evaluateDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	evaluateDerivatives(t,  y,  yDot,  expansionable);	      evaluateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionable	1	None	replace
19	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  y);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
20	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	11	None	replace
21	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
22	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	10	None	replace
23	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	16	None	replace
25	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	16	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	19	None	replace
28	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  extendable  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  extendable.computeDerivatives(t,  y[i],  yDot);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  extendable	19	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	22	1	add
31	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	22	1	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	22	1	add
33	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	compilable	  [FE]  AssertionError  	22	1	add
34	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	22	1	add
36	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	22	1	add
37	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	20	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	20	None	replace
39	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  '  [CE]  illegal  line  end  in  character  literal  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  '  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  '	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  illegal  line  end  in  character  literal	20	None	replace
40	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  '  [CE]  illegal  line  end  in  character  literal  [FE]                      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  '  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >=  '	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  illegal  line  end  in  character  literal	20	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
43	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluateDerivatives(t,  y[i],  yDot);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	14	1	add
46	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	14	1	add
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	14	1	add
48	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	compilable	  [FE]  AssertionError  	14	1	add
49	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  ';'  expected	14	None	add
50	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [CE]  cannot  find  symbol  assessments  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  assessments.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  assessments	14	None	add
51	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [CE]  cannot  find  symbol  evaluates  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluates.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  evaluates	15	None	replace
52	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	8	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
56	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	12	1	add
58	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	12	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	12	1	add
60	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	compilable	  [FE]  AssertionError  	12	1	add
61	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    If(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }	  	non-compiled	[CE]  ';'  expected	12	None	add
62	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  iDot);  }  [CE]  cannot  find  symbol  iDot  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  iDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  iDot);  }	  	non-compiled	[CE]  cannot  find  symbol  iDot	12	None	add
63	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  isLastStep);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  isLastStep);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
64	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  convergence);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  convergence);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  convergence	6	None	replace
65	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  evaluations);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  evaluations);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  evaluations);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
66	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
67	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives.add(y);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
68	[BUG]  [BUGGY]  luateDerivatives(t,  y,  yDot);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  luateDerivatives(t,  y,  yDot);  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	luateDerivatives(t,  y,  yDot);	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
69	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(y,  expandable);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
70	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
71	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expandable.length;  y++)  {  evaluateDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
72	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y,  expandable);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
73	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expandable,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
74	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	9	None	replace
75	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	9	None	replace
76	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expansion  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expansion	23	None	replace
78	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  expansions.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  expansions.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  expansions.length;  y++)  {  evaluateDerivatives(t,  y,  expansionable);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	4	None	replace
79	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  ')'	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	20	None	replace
80	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  ')'  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  ')'  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  >>  ')'	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	20	None	replace
81	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  extendable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  extendable	22	None	add
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }	  	compilable	  [FE]  AssertionError  	22	1	add
83	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  return;  }	  	compilable	  [FE]  AssertionError  	22	1	add
84	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(y);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(y);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  nDot;  y++)  {  evaluateDerivatives.add(y);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	3	None	replace
85	[BUG]  [BUGGY]  if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  maxCheckInterval);  [CE]  cannot  find  symbol  maxCheckInterval  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  maxCheckInterval);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  maxCheckInterval);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  maxCheckInterval	21	None	replace
87	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  expansion);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  expansion);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  expansion	21	None	replace
88	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  evaluateDerivatives(t,  expandable[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  assessments.size();  i++)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  convergence);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  convergence);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	7	None	replace
91	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);  [CE]  cannot  find  symbol  convergence  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	7	None	replace
92	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	8	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	add	if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	compilable	  [FE]  AssertionError  	15	1	replace
94	[BUG]  [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable  ==  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	compilable	  [FE]  AssertionError  	15	1	replace
95	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expansion  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansion	15	None	replace
96	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  extendable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  extendable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  extendable	14	None	add
97	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expansion  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansion.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expansion	13	None	replace
98	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  y[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  	non-compiled	[CE]  cannot  find  symbol  expansionable	12	None	add
100	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }  [CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  expanse[0],  expanse[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  variable  y  is  already  defined  in  method  computeDerivatives(double,double[],double[])	5	None	replace
101	[BUG]  [BUGGY]  if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions  ==  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
102	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  expansionableODE);  [CE]  cannot  find  symbol  expansionableODE  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  expansionableODE);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  expansionableODE);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	6	None	replace
103	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  expandableODE);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  expandableODE);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	6	None	replace
104	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  expansion);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  expansion);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansion	6	None	replace
105	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  this.expansions.length;  y++)  {  evaluateDerivatives(t,  y[0],  y[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  y[2]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y[0],    y[1]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	15	None	replace
108	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
109	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  yDot);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives(t,  y  +  1,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
110	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  YDot);  }  [CE]  cannot  find  symbol  YDot  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  YDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  YDot);  }	  	non-compiled	[CE]  cannot  find  symbol  YDot	12	None	add
111	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  xDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  xDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  xDot.length;  ++i)  {  evaluateDerivatives(t,  y[i],  y[i]);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  y[i]  }  '	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    yDot.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    y[i]    	non-compiled	[CE]  ')'  expected	20	None	replace
113	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    evaluations.incrementCount();    }    if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  evaluations.incrementCount();  }	  	non-compiled	[CE]  cannot  find  symbol  expansionable	14	None	add
114	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot[1]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
116	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  y  =  0;  y  <  yDot.length;  y++)  {  expandable.computeDerivatives(t,  y,  yDot[0]);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot.length;    y++)    {    expandable.computeDerivatives(t,    y,    yDot[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
117	[BUG]  [BUGGY]  validateDerivatives(t,  y,  yDot,  expansionable);  [CE]  cannot  find  symbol  expansionable  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  validateDerivatives(t,  y,  yDot,  expansionable);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	validateDerivatives(t,  y,  yDot,  expansionable);	  validateDerivatives(t,    y,    yDot);    	non-compiled	[CE]  cannot  find  symbol  expansionable	6	None	replace
118	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	13	None	replace
119	[BUG]  [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expandable.computeDerivatives(t,  y,  new  double[]  {  yDot  }  );  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  incompatible  types	13	None	replace
120	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null);  [CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  null);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  method  computeDerivatives  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	21	None	replace
121	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  state);  [CE]  cannot  find  symbol  state  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  state);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  state);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  state	21	None	replace
122	[BUG]  [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  values);  [CE]  cannot  find  symbol  values  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expandable.computeDerivatives(t,  y,  yDot,  evaluations,  values);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expandable.computeDerivatives(t,  y,  yDot,  evaluations,  values);	  expandable.computeDerivatives(t,    y,    yDot,    evaluations);    	non-compiled	[CE]  cannot  find  symbol  values	21	None	replace
123	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  expandable.computeDerivatives(t,  y[0],  yDot);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    expandable.computeDerivatives(t,    y,    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  assessDerivatives(t,  y[i],  y[i]);  }	      if(expansions!=    null)    {    for(int    i    =    0;    i    <    evaluations.size();    i++)    {    evaluateDerivatives(t,    y[i],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
125	[BUG]  [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [CE]  cannot  find  symbol  expansionable  [FE]    AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  expansionable.computeDerivatives(t,  y,  yDot);  }  else  {  return;  }	  if(expandable!=    null)    {    expandable.computeDerivatives(t,    y,    yDot);    }    else    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  expansionable	23	None	replace
126	[BUG]  [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);  [CE]  cannot  find  symbol  convergence  [FE]          AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	ExpandableStatefulODE  equations  =  expandable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	7	None	replace
127	[BUG]  [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);  [CE]  cannot  find  symbol  convergence  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  expansionable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);  [BUGGY]    }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	expansionable.computeDerivatives(t,  y,  yDot,  convergence,  isLastStep);	  expandable.computeDerivatives(t,    y,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  convergence	7	None	replace
128	[BUG]  [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expandable!=  null)  {  for(int  i  =  0;  i  <  yDot.length;  ++i)  {  expandable.computeDerivatives(t,  y[i],  yDot);  }	      if(expandable!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    expandable.computeDerivatives(t,    y[i],    yDot);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  computeDerivatives(final  double  t,  final  double[]  y,  final  double[]  yDot)  throws  MaxCountExceededException  {  evaluations.incrementCount();    [BUGGY]  if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }  [BUGGY]    expandable.computeDerivatives(t,  y,  yDot);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  computeDerivatives  [RETURN_TYPE]  void  final  double  t  final  double[]  y  final  double[]  yDot  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  yDot  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	250	250	1	replace	if(expansions!=  null)  {  for(int  y  =  0;  y  <  yDot;  y++)  {  evaluateDerivatives.add(null);  }	      if(expansions!=    null)    {    for(int    y    =    0;    y    <    yDot;    y++)    {    evaluateDerivatives.add(y);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
