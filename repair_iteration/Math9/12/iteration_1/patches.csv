bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p2.dotProduct(delta)/  zero,  delta);  [CE]  ')'  expected  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p2.dotProduct(delta)/  zero,  delta);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.setZero(new  Vector3D(0.0,  p1,  -p2.dotProduct(delta)/  zero,  delta);	      this.direction.setZero(new    Vector3D(0.0,    p1,    -p1.dotProduct(delta)/    zero,    delta);    	non-compiled	[CE]  ')'  expected	6	None	replace
2	[BUG]  [BUGGY]  p1.dotProduct(delta)/  norm2,  zero);  [CE]  not  a  statement  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(delta)/  norm2,  zero);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(delta)/  norm2,  zero);	  p1.dotProduct(delta)/    zero);    	non-compiled	[CE]  not  a  statement	8	None	replace
3	[BUG]  [BUGGY]  p1.dotProduct(delta)/  norm2);  [CE]  not  a  statement  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(delta)/  norm2);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(delta)/  norm2);	  p1.dotProduct(delta)/    zero);    	non-compiled	[CE]  not  a  statement	8	None	replace
4	[BUG]  [BUGGY]  p1.dotProduct(norm2),  delta);  [CE]  ';'  expected  [FE]            arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(norm2),  delta);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(norm2),  delta);	      	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  this.direction.reset(p1,  zero);  [CE]  illegal  start  of  expression  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.reset(p1,  zero);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.reset(p1,  zero);	  this.direction.reset(p1,    p2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  this.direction.reset(zero,  p1,  p2);  [CE]  illegal  start  of  expression  [FE]            arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.reset(zero,  p1,  p2);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.reset(zero,  p1,  p2);	  this.direction.reset(p1,    p2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  zero,  -p1.dotProduct(delta)/  norm2,  delta);  [CE]  ')'  expected  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  zero,  -p1.dotProduct(delta)/  norm2,  delta);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.setZero(new  Vector3D(0.0,  zero,  -p1.dotProduct(delta)/  norm2,  delta);	      this.direction.setZero(new    Vector3D(0.0,    p1,    -p1.dotProduct(delta)/    norm2,    delta);    	non-compiled	[CE]  ')'  expected	5	None	replace
8	[BUG]  [BUGGY]  p1.dotProduct(delta)/  norm2,  delta);  [CE]  not  a  statement  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(delta)/  norm2,  delta);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(delta)/  norm2,  delta);	  p1.dotProduct(delta)/    zero,    delta);    	non-compiled	[CE]  not  a  statement	9	None	replace
9	[BUG]  [BUGGY]  p1.dotProduct(norm2,  zero);  [CE]  illegal  start  of  expression  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(norm2,  zero);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(norm2,  zero);	      p1.dotProduct(norm2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  p1.dotProduct(zero,  norm2);  [CE]  illegal  start  of  expression  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(zero,  norm2);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(zero,  norm2);	      p1.dotProduct(norm2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  this.direction.reset(zero,  zero);  [CE]  illegal  start  of  expression  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.reset(zero,  zero);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.reset(zero,  zero);	      this.direction.reset(zero);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  zero,  -p1.dotProduct(delta)/  p1),  delta);  [CE]  illegal  start  of  expression  [FE]            arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  zero,  -p1.dotProduct(delta)/  p1),  delta);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.setZero(new  Vector3D(0.0,  zero,  -p1.dotProduct(delta)/  p1),  delta);	      this.direction.setZero(new    Vector3D(0.0,    p1,    -p1.dotProduct(delta)/    zero),    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  this.direction.dotProduct(zero);  [CE]  illegal  start  of  expression  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.dotProduct(zero);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.dotProduct(zero);	  this.direction.dotProduct(norm2);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  this.direction.dotProduct(norm1,  zero);  [CE]  illegal  start  of  expression  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.dotProduct(norm1,  zero);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.dotProduct(norm1,  zero);	  this.direction.dotProduct(norm2);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  p1.dotProduct(delta);  [CE]  illegal  start  of  expression  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(delta);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(delta);	      p1.dotProduct(norm2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  p1.dotProduct(delta)/  norm1,  delta);  [CE]  not  a  statement  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(delta)/  norm1,  delta);  [BUGGY]      [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(delta)/  norm1,  delta);	  p1.dotProduct(delta)/    zero,    delta);    	non-compiled	[CE]  not  a  statement	9	None	replace
17	[BUG]  [BUGGY]  this.direction.reset(zero,  p1);  [CE]  illegal  start  of  expression  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.reset(zero,  p1);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.reset(zero,  p1);	      this.direction.reset(zero);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p1.dotProduct(delta)/  norm2,  zero);  [CE]  ')'  expected  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p1.dotProduct(delta)/  norm2,  zero);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.setZero(new  Vector3D(0.0,  p1,  -p1.dotProduct(delta)/  norm2,  zero);	      this.direction.setZero(new    Vector3D(0.0,    p1,    -p1.dotProduct(delta)/    norm2,    delta);    	non-compiled	[CE]  ')'  expected	5	None	replace
19	[BUG]  [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p2.dotProduct(delta)/  norm2,  delta);  [CE]  ')'  expected  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p2.dotProduct(delta)/  norm2,  delta);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.setZero(new  Vector3D(0.0,  p1,  -p2.dotProduct(delta)/  norm2,  delta);	      this.direction.setZero(new    Vector3D(0.0,    p1,    -p1.dotProduct(delta)/    norm2,    delta);    	non-compiled	[CE]  ')'  expected	5	None	replace
20	[BUG]  [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p1.dotProduct(delta)/  norm2),  delta);  [CE]  illegal  start  of  expression  [FE]            arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.setZero(new  Vector3D(0.0,  p1,  -p1.dotProduct(delta)/  norm2),  delta);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.setZero(new  Vector3D(0.0,  p1,  -p1.dotProduct(delta)/  norm2),  delta);	      this.direction.setZero(new    Vector3D(0.0,    p1,    -p1.dotProduct(delta)/    zero),    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  p1.dotProduct(zero);  [CE]  illegal  start  of  expression  [FE]        arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  p1.dotProduct(zero);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	p1.dotProduct(zero);	      p1.dotProduct(norm2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  this.direction.reset(zero,  p2);  [CE]  illegal  start  of  expression  [FE]          arrays  first  differed    [CONTEXT]    public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);    [BUGGY]  this.direction.reset(zero,  p2);  [BUGGY]    }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	81	81	1	replace	this.direction.reset(zero,  p2);	      this.direction.reset(zero);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
