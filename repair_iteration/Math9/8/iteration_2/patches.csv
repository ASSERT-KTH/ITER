bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  normSq  =  delta.getSq();  if(delta!=  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  delta.getSq();  if(delta!=  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  delta.getSq();  if(delta!=  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.getSq();    if(delta!=    null)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
2	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.subtract(p2.subtract(p2));  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p1.subtract(p2.subtract(p2));  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p1.subtract(p2.subtract(p2));	  final    Vector3D    delta    =    p1.subtract(p2.subtract(p1));    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	15	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    MathIllegalArgumentException    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  double  norm2  =  p2.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	add	double  norm2  =  p2.dotProduct(delta);	  double    norm2    =    p1.dotProduct(delta);    	compilable	  [FE]  AssertionError  	8	6	replace
4	[BUG]  [BUGGY]  double  norm2  =  p2.dotProduct(delta);  [FE]  AssertionError  [FE]    MathIllegalArgumentException    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  double  norm2  =  p2.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	double  norm2  =  p2.dotProduct(delta);	  double    norm2    =    p1.dotProduct(delta);    	compilable	  [FE]  AssertionError  	8	6	replace
5	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.subtract(p2);  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p1.subtract(p2);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p1.subtract(p2);	  final    Vector3D    delta    =    p1.subtract(delta);    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	21	None	replace
6	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p2);  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p2);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p1.dotProduct(p2);	  final    Vector3D    delta    =    p1.dotProduct(delta);    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	27	None	replace
7	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p2,  delta);  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                    arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p2,  delta);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p1.dotProduct(p2,  delta);	  final    Vector3D    delta    =    p1.dotProduct(delta);    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	27	None	replace
8	[BUG]  [BUGGY]  final  double  normSq  =  p2.dotProduct(delta);  [CE]  cannot  find  symbol  norm2  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p2.dotProduct(delta);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p2.dotProduct(delta);	  final    double    normSq    =    p1.dotProduct(delta);    	non-compiled	[CE]  cannot  find  symbol  norm2	3	None	replace
9	[BUG]  [BUGGY]  Vector3D  p1  =  p2.subtract(delta);  [CE]  variable  p1  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  Vector3D  p1  =  p2.subtract(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	Vector3D  p1  =  p2.subtract(delta);	  Vector3D    p1    =    p2.subtract(p1);    	non-compiled	[CE]  variable  p1  is  already  defined  in  method  reset(Vector3D,Vector3D)	9	None	replace
10	[BUG]  [BUGGY]  Vector3D  p1  =  p1.subtract(p2);  [CE]  variable  p1  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  Vector3D  p1  =  p1.subtract(p2);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	Vector3D  p1  =  p1.subtract(p2);	  Vector3D    p1    =    p2.subtract(p1);    	non-compiled	[CE]  variable  p1  is  already  defined  in  method  reset(Vector3D,Vector3D)	9	None	replace
11	[BUG]  [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  delta.getNormSq();  if(delta  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(normSq    >    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	12	None	replace
12	[BUG]  [BUGGY]  static  final  double  normSq  =  delta.getNormSq();  if(delta  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  illegal  start  of  expression  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  static  final  double  normSq  =  delta.getNormSq();  if(delta  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	static  final  double  normSq  =  delta.getNormSq();  if(delta  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(normSq    >    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  final  double  norm2  =  p2.getNormSq();  final  double  norm2  =  p2.getNormSq();  [CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]    AssertionError    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  norm2  =  p2.getNormSq();  final  double  norm2  =  p2.getNormSq();  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final    double    norm2    =    p2.getNormSq();    final  double  norm2  =  p2.getNormSq();	  	non-compiled	[CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)	16	None	add
14	[BUG]  [BUGGY]  final  double  norm2  =  p2.getNormSq();  Final  double  norm2  =  p2.getNormSq();  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  norm2  =  p2.getNormSq();  Final  double  norm2  =  p2.getNormSq();  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final    double    norm2    =    p2.getNormSq();    Final  double  norm2  =  p2.getNormSq();	  	non-compiled	[CE]  not  a  statement	16	None	add
15	[BUG]  [BUGGY]  Vector3D  norm2  =  p1.dotProduct(delta,  p2);  [CE]  incompatible  types  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  Vector3D  norm2  =  p1.dotProduct(delta,  p2);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	Vector3D  norm2  =  p1.dotProduct(delta,  p2);	  Vector3D    norm2    =    p1.dotProduct(delta);    	non-compiled	[CE]  incompatible  types	18	None	replace
16	[BUG]  [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta!=  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  norm2  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta!=  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  delta.getNormSq();  if(delta!=  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(delta    ==    null)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  norm2	22	None	replace
17	[BUG]  [BUGGY]  Node  delta2  =  p1.dotProduct(delta);  [CE]  cannot  find  symbol  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  Node  delta2  =  p1.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	Node  delta2  =  p1.dotProduct(delta);	  Node    nom2    =    p1.dotProduct(delta);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
18	[BUG]  [BUGGY]  Node  name2  =  p1.dotProduct(delta);  [CE]  cannot  find  symbol  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  Node  name2  =  p1.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	Node  name2  =  p1.dotProduct(delta);	  Node    nom2    =    p1.dotProduct(delta);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
19	[BUG]  [BUGGY]  final  Vector3D  delta  =  p2.getSize();  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p2.getSize();  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p2.getSize();	  final    Vector3D    delta    =    p1.getSize();    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	26	None	replace
20	[BUG]  [BUGGY]  for(final  Vector3D  delta  :  p1.getSize())  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM,  p2);  }  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  for(final  Vector3D  delta  :  p1.getSize())  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM,  p2);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	for(final  Vector3D  delta  :  p1.getSize())  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM,  p2);  }	  for(final    Vector3D    delta    :    p1.getSize())    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	14	None	replace
21	[BUG]  [BUGGY]  final  Vector3D  delta  =  p2.subtract(p1);  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p2.subtract(p1);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p2.subtract(p1);	  final    Vector3D    delta    =    p2.subtract(delta);    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	20	None	replace
22	[BUG]  [BUGGY]  double  norm2  =  p1.dotProduct(delta);  double  norm2  =  p1.dotProduct(delta);  [CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]    MathIllegalArgumentException    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  double  norm2  =  p1.dotProduct(delta);  double  norm2  =  p1.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	double    norm2    =    p1.dotProduct(delta);    double  norm2  =  p1.dotProduct(delta);	  	non-compiled	[CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)	7	None	add
23	[BUG]  [BUGGY]  double  norm2  =  p1.dotProduct(delta);  Double  norm2  =  p1.dotProduct(delta);  [CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]      MathIllegalArgumentException    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  double  norm2  =  p1.dotProduct(delta);  Double  norm2  =  p1.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	double    norm2    =    p1.dotProduct(delta);    Double  norm2  =  p1.dotProduct(delta);	  	non-compiled	[CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)	7	None	add
24	[BUG]  [BUGGY]  double  norm2  =  p1.dotProduct(delta);  double  norm2  =  p2.dotProduct(delta);  [CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]        MathIllegalArgumentException    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  double  norm2  =  p1.dotProduct(delta);  double  norm2  =  p2.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	double    norm2    =    p1.dotProduct(delta);    double  norm2  =  p2.dotProduct(delta);	  	non-compiled	[CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)	7	None	add
25	[BUG]  [BUGGY]  static  final  double  normSq  =  delta.getNormSq();  if(delta  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  illegal  start  of  expression  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  static  final  double  normSq  =  delta.getNormSq();  if(delta  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	static  final  double  normSq  =  delta.getNormSq();  if(delta  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(normSq    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  final  double  normSq  =  p1.getNormSq();  [CE]  cannot  find  symbol  norm2  [FE]            AssertionError      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.getNormSq();  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.getNormSq();	  final    double    norm2    =    p1.getNormSq();    final    double    normSq    =    p1.getNormSq();    	non-compiled	[CE]  cannot  find  symbol  norm2	6	None	replace
27	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(permSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  permSq  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(permSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(permSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    >    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  permSq	11	None	replace
28	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(remainingSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  remainingSq  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(remainingSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(remainingSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    >    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  remainingSq	11	None	replace
29	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(permSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  permSq  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(permSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(permSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  permSq	25	None	replace
30	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(remainingSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  remainingSq  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(remainingSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(remainingSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  remainingSq	25	None	replace
31	[BUG]  [BUGGY]  final  double  normSq  =  p1.getNormSq();  if(delta  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  incomparable  types:  Vector3D  and  double  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.getNormSq();  if(delta  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.getNormSq();  if(delta  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(delta    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  incomparable  types:  Vector3D  and  double	23	None	replace
32	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.subtractProduct(p2);  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p1.subtractProduct(p2);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p1.subtractProduct(p2);	  final    Vector3D    delta    =    p1.subtract(delta);    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	21	None	replace
33	[BUG]  [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta  <  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta  <  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  delta.getNormSq();  if(delta  <  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(delta    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	23	None	replace
34	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(normalSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  normalSq  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(normalSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(normalSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  normalSq	25	None	replace
35	[BUG]  [BUGGY]  final  Vector3D  delta  =  p2.subtract(p2);  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  Vector3D  delta  =  p2.subtract(p2);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  Vector3D  delta  =  p2.subtract(p2);	  final    Vector3D    delta    =    p2.subtract(delta);    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	20	None	replace
36	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(normalSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  normalSq  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(normalSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(normalSq  >  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    >    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  normalSq	11	None	replace
37	[BUG]  [BUGGY]  for(final  Vector3D  delta  :  p1.getSize())  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM,  delta);  }  [CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  for(final  Vector3D  delta  :  p1.getSize())  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM,  delta);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	for(final  Vector3D  delta  :  p1.getSize())  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM,  delta);  }	  for(final    Vector3D    delta    :    p1.getSize())    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  variable  delta  is  already  defined  in  method  reset(Vector3D,Vector3D)	14	None	replace
38	[BUG]  [BUGGY]  double  norm2  =  p1.dotProduct(delta);  double  no2  =  p1.dotProduct(delta);  [CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)  [FE]    MathIllegalArgumentException    [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  double  norm2  =  p1.dotProduct(delta);  double  no2  =  p1.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	double    norm2    =    p1.dotProduct(delta);    double  no2  =  p1.dotProduct(delta);	  	non-compiled	[CE]  variable  norm2  is  already  defined  in  method  reset(Vector3D,Vector3D)	7	None	add
39	[BUG]  [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta!=  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  incomparable  types:  Vector3D  and  double  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  delta.getNormSq();  if(delta!=  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  delta.getNormSq();  if(delta!=  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(normSq    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  incomparable  types:  Vector3D  and  double	13	None	replace
40	[BUG]  [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(valueSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  cannot  find  symbol  valueSq  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  final  double  normSq  =  p1.dotProduct(delta);  if(valueSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	final  double  normSq  =  p1.dotProduct(delta);  if(valueSq  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    p1.dotProduct(delta);    if(normSq    ==    0.0)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  cannot  find  symbol  valueSq	25	None	replace
41	[BUG]  [BUGGY]  Node  node2  =  p1.dotProduct(delta);  [CE]  cannot  find  symbol  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  Node  node2  =  p1.dotProduct(delta);  [BUGGY]      if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	Node  node2  =  p1.dotProduct(delta);	  Node    nom2    =    p1.dotProduct(delta);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
42	[BUG]  [BUGGY]  static  final  double  normSq  =  delta.getNormSq();  if(delta  ==  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [CE]  illegal  start  of  expression  [FE]            arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {  final  Vector3D  delta  =  p2.subtract(p1);      [BUGGY]  static  final  double  normSq  =  delta.getNormSq();  if(delta  ==  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	75	75	1	replace	static  final  double  normSq  =  delta.getNormSq();  if(delta  ==  null)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }	  final    double    normSq    =    delta.getNormSq();    if(delta    ==    null)    {    throw    new    MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
