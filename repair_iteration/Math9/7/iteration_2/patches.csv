bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  p1.set(p2.set(p1));  [CE]  cannot  find  symbol  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  p1.set(p2.set(p1));  [BUGGY]      final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	p1.set(p2.set(p1));	  p1.set(p2.set(p1);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
2	[BUG]  [BUGGY]  p1.set(p2.subtract(p1));  [CE]  cannot  find  symbol  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  p1.set(p2.subtract(p1));  [BUGGY]      final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	p1.set(p2.subtract(p1));	  p1.set(p2.set(p1);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
3	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p2,  p1);  [CE]  incompatible  types  [FE]        arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p2,  p1);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	final  Vector3D  delta  =  p1.dotProduct(p2,  p1);	  final    Vector3D    delta    =    p1.dotProduct(p2);    	non-compiled	[CE]  incompatible  types	9	None	replace
4	[BUG]  [BUGGY]  p1.set(p2.getLineNumber(),  p2);  [CE]  cannot  find  symbol  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  p1.set(p2.getLineNumber(),  p2);  [BUGGY]      final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	p1.set(p2.getLineNumber(),  p2);	  p1.set(p2.getLineNumber());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
5	[BUG]  [BUGGY]  p1.setRange(new  LineRange(p2,  p2));  [CE]  cannot  find  symbol  [FE]                arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  p1.setRange(new  LineRange(p2,  p2));  [BUGGY]      final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	p1.setRange(new  LineRange(p2,  p2));	  p1.setRange(new    LineRange(p2,    p1));    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
6	[BUG]  [BUGGY]  p1.setRange(new  LineRange(p1,  p2));  [CE]  cannot  find  symbol  [FE]                  arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  p1.setRange(new  LineRange(p1,  p2));  [BUGGY]      final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	p1.setRange(new  LineRange(p1,  p2));	  p1.setRange(new    LineRange(p2,    p1));    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
7	[BUG]  [BUGGY]  final  Vector3D  delta  =  p2.dotProduct(p1);  [CE]  incompatible  types  [FE]        arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  final  Vector3D  delta  =  p2.dotProduct(p1);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	final  Vector3D  delta  =  p2.dotProduct(p1);	  final    Vector3D    delta    =    p1.dotProduct(p2);    	non-compiled	[CE]  incompatible  types	9	None	replace
8	[BUG]  [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p1);  [CE]  incompatible  types  [FE]        arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  final  Vector3D  delta  =  p1.dotProduct(p1);  [BUGGY]      final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	final  Vector3D  delta  =  p1.dotProduct(p1);	  final    Vector3D    delta    =    p1.dotProduct(p2);    	non-compiled	[CE]  incompatible  types	9	None	replace
9	[BUG]  [BUGGY]  p1.set(p2.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]              arrays  first  differed      [CONTEXT]      public  void  reset(final  Vector3D  p1,  final  Vector3D  p2)  throws  MathIllegalArgumentException  {      [BUGGY]  p1.set(p2.getCharacterIndex());  [BUGGY]      final  Vector3D  delta  =  p2.subtract(p1);  final  double  norm2  =  delta.getNormSq();  if  (norm2  ==  0.0)  {  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  [CLASS]  Line  [METHOD]  reset  [RETURN_TYPE]  void  Vector3D  p1  Vector3D  p2  [VARIABLES]  Vector3D  delta  direction  p1  p2  zero  double  norm2  boolean  	projects/Math9/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java	0.3779644730092272	74	74	1	replace	p1.set(p2.getCharacterIndex());	  p1.set(p2.getLineNumber());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
