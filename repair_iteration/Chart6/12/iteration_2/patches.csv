bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  stream.writeInt(0,  count,  3);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0,  count,  3);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0,  count,  3);	  stream.writeInt(0,    count,    0);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	19	None	replace
2	[BUG]  [BUGGY]  stream.writeInt(0,  count,  1,  0);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0,  count,  1,  0);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0,  count,  1,  0);	  stream.writeInt(0,    count,    0);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	19	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();  stream.defaultWriteObject();  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.defaultWriteObject();        stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();	  	compilable	  [FE]  AssertionFailedError  	4	2	add
4	[BUG]  [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();  stream.defaultWriteObject();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();  stream.defaultWriteObject();  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.defaultWriteObject();        stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();	  	compilable	  [FE]  AssertionFailedError  	4	2	add
5	[BUG]  [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  Stream.defaultWriteObject();  stream.defaultWriteObject();  [CE]  cannot  find  symbol  Stream  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  Stream.defaultWriteObject();  stream.defaultWriteObject();  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.defaultWriteObject();        stream.defaultWriteObject();    Stream.defaultWriteObject();  stream.defaultWriteObject();	  	non-compiled	[CE]  cannot  find  symbol  Stream	4	None	add
6	[BUG]  [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.defaultWriteObject();        stream.defaultWriteObject();    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	4	None	add
7	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  count);  [CE]  cannot  find  symbol  shape  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(shape,  stream,  count);  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(shape,  stream,  count);	  SerialUtilities.writeShape(this.shape,    stream,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	1	None	replace
8	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  count  -  1);  [CE]  cannot  find  symbol  shape  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  count  -  1);  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(this.shape,  stream,  count  -  1);	  SerialUtilities.writeShape(this.shape,    stream,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	1	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0);  stream.writeInt(0);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(0);    stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError  	24	2	add
10	[BUG]  [BUGGY]  stream.writeInt(0);  stream.writeInt(0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0);  stream.writeInt(0);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0);    stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError  	24	2	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0);  stream.writeInt(1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(0);    stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError  	24	2	add
12	[BUG]  [BUGGY]  stream.writeInt(0);  stream.writeInt(1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0);  stream.writeInt(1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0);    stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError  	24	2	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0);  stream.writeInt(  count);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(0);    stream.writeInt(  count);	  	compilable	  [FE]  AssertionFailedError  	24	2	add
14	[BUG]  [BUGGY]  stream.writeInt(0);  stream.writeInt(  count);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0);  stream.writeInt(  count);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0);    stream.writeInt(  count);	  	compilable	  [FE]  AssertionFailedError  	24	2	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  -  2);  stream.writeInt(count  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count    -    2);    stream.writeInt(count  -  2);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
16	[BUG]  [BUGGY]  stream.writeInt(count  -  2);  stream.writeInt(count  -  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  -  2);  stream.writeInt(count  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count    -    2);    stream.writeInt(count  -  2);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
17	[BUG]  [BUGGY]  stream.writeInt(count  -  2);  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count    -    2);    SerialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	2	None	add
18	[BUG]  [BUGGY]  stream.writeInt(count  -  2);  SerialUtilities.writeShape(stream,  count  -  2);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  -  2);  SerialUtilities.writeShape(stream,  count  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count    -    2);    SerialUtilities.writeShape(stream,  count  -  2);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	2	None	add
19	[BUG]  [BUGGY]  stream.writeInt(0,  count,  count  +  1);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0,  count,  count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0,  count,  count  +  1);	  stream.writeInt(0,    count    +    1);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	30	None	replace
20	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  count,  this.shape);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(stream,  count,  this.shape);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(stream,  count,  this.shape);	          SerialUtilities.writeShape(stream,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	26	None	replace
21	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  count  -  1);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(stream,  count  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(stream,  count  -  1);	  stream.writeInt(count    -    1);    SerialUtilities.writeShape(stream,    count    -    1);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	17	None	replace
22	[BUG]  [BUGGY]  int  count  =  this.size()  -  1;  [CE]  variable  count  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  int  count  =  this.size()  -  1;  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	int  count  =  this.size()  -  1;	  int    count    =    this.size();    	non-compiled	[CE]  variable  count  is  already  defined  in  method  writeObject(ObjectOutputStream)	29	None	replace
23	[BUG]  [BUGGY]  stream.writeInt(count,  count  +  1);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count,  count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count,  count  +  1);	  stream.writeInt(count    +    1);    SerialUtilities.writeShape(stream,    count    +    1);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	11	None	replace
24	[BUG]  [BUGGY]  stream.writeInt(count  +  1);  SerialUtilities.writeShape(shape,  stream,  count  +  1);  [CE]  cannot  find  symbol  shape  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  +  1);  SerialUtilities.writeShape(shape,  stream,  count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  +  1);  SerialUtilities.writeShape(shape,  stream,  count  +  1);	  stream.writeInt(count    +    1);    SerialUtilities.writeShape(stream,    count    +    1);    	non-compiled	[CE]  cannot  find  symbol  shape	11	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count        -        1);        stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  stream.writeInt(count  -  1);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
26	[BUG]  [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count        -        1);        stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  stream.writeInt(count  -  1);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
27	[BUG]  [BUGGY]  int  count  =  length();  [CE]  variable  count  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  int  count  =  length();  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	int  count  =  length();	  int    count    =    size()    -    1;    	non-compiled	[CE]  variable  count  is  already  defined  in  method  writeObject(ObjectOutputStream)	12	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count        +        1);        stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  stream.writeInt(count  +  1);	  	compilable	  [FE]  AssertionFailedError  	8	2	add
29	[BUG]  [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count        +        1);        stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  stream.writeInt(count  +  1);	  	compilable	  [FE]  AssertionFailedError  	8	2	add
30	[BUG]  [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  Stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  [CE]  cannot  find  symbol  Stream  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  Stream.writeInt(count  +  1);  stream.writeInt(count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count        +        1);        stream.writeInt(count    +    1);    Stream.writeInt(count  +  1);  stream.writeInt(count  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Stream	8	None	add
31	[BUG]  [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    +    1);    stream.writeInt(count  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count        +        1);        stream.writeInt(count    +    1);    SerialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	8	None	add
32	[BUG]  [BUGGY]  stream.writeInt(count  -  2);  SerialUtilities.writeShape(stream,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  -  2);  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count    -    2);    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	2	None	add
33	[BUG]  [BUGGY]  stream.writeObject();  SerialUtilities.writeShape(this.shape,  stream);  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeObject();  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeObject();  SerialUtilities.writeShape(this.shape,  stream);	  stream.defaultWriteObject();    SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	6	None	replace
34	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  count  +  1);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(stream,  count  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(stream,  count  +  1);	  stream.writeInt(count    +    1);    SerialUtilities.writeShape(stream,    count    +    1);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	11	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(size()  -  1);	  stream.writeInt(count    -    1);    stream.writeInt(count    -    1);    	compilable	  [FE]  AssertionFailedError  	15	2	replace
36	[BUG]  [BUGGY]  stream.writeInt(size()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(size()  -  1);	  stream.writeInt(count    -    1);    stream.writeInt(count    -    1);    	compilable	  [FE]  AssertionFailedError  	15	2	replace
37	[BUG]  [BUGGY]  stream.writeObject();  SerialUtilities.writeShape(shape,  stream);  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeObject();  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeObject();  SerialUtilities.writeShape(shape,  stream);	  stream.defaultWriteObject();    SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	7	None	replace
38	[BUG]  [BUGGY]  stream.writeInt(0,  count  -  1,  size());  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0,  count  -  1,  size());  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0,  count  -  1,  size());	  stream.writeInt(0,    count    -    1);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	23	None	replace
39	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  count,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(stream,  count,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(stream,  count,  stream);	          SerialUtilities.writeShape(stream,    count);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	26	None	replace
40	[BUG]  [BUGGY]  stream.writeObject();  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeObject();  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeObject();	  stream.defaultWriteObject();    stream.defaultWriteObject();    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	5	None	replace
41	[BUG]  [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  count);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  count);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  count);	  stream.defaultWriteObject();    SerialUtilities.writeShape(stream,    stream);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	22	None	replace
42	[BUG]  [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  Stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  [CE]  cannot  find  symbol  Stream  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  Stream.writeInt(count  -  1);  stream.writeInt(count  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count        -        1);        stream.writeInt(count    -    1);    Stream.writeInt(count  -  1);  stream.writeInt(count  -  1);	  	non-compiled	[CE]  cannot  find  symbol  Stream	14	None	add
43	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  0);  [CE]  cannot  find  symbol  shape  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  0);  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(this.shape,  stream,  0);	  SerialUtilities.writeShape(this.shape,    stream,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	1	None	replace
44	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  count,  0);  [CE]  cannot  find  symbol  shape  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  count,  0);  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(this.shape,  stream,  count,  0);	  SerialUtilities.writeShape(this.shape,    stream,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	1	None	replace
45	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  count  +  1,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  SerialUtilities.writeShape(stream,  count  +  1,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	SerialUtilities.writeShape(stream,  count  +  1,  stream);	  stream.writeInt(count    +    1);    SerialUtilities.writeShape(stream,    count    +    1);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	11	None	replace
46	[BUG]  [BUGGY]  stream.writeInt(count);  SerialUtilities.writeShape(this.shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count);  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count);  SerialUtilities.writeShape(this.shape,  stream);	  stream.defaultWriteObject();    SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	6	None	replace
47	[BUG]  [BUGGY]  stream.writeInt(0,  count  +  1,  size());  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(0,  count  +  1,  size());  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(0,  count  +  1,  size());	  stream.writeInt(0,    count    +    1);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	30	None	replace
48	[BUG]  [BUGGY]  stream.writeInt(count  -  1);  SerialUtilities.writeShape(shape,  stream,  count  -  1);  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  -  1);  SerialUtilities.writeShape(shape,  stream,  count  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  -  1);  SerialUtilities.writeShape(shape,  stream,  count  -  1);	  stream.writeInt(count    -    1);    SerialUtilities.writeShape(stream,    count    -    1);    	non-compiled	[CE]  cannot  find  symbol  shape	17	None	replace
49	[BUG]  [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count    -    1);    stream.writeInt(count  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count        -        1);        stream.writeInt(count    -    1);    SerialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	14	None	add
50	[BUG]  [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.defaultWriteObject();        stream.defaultWriteObject();    SerialUtilities.writeShape(this,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	4	None	add
