bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  for(int  i  =  1;  i  <  count;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  for(int  i  =  1;  i  <  count;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    1;    i    <    count;    i++)    {    for(int  i  =  1;  i  <  count;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
2	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  For(int  i  =  1;  i  <  count;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  For(int  i  =  1;  i  <  count;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    1;    i    <    count;    i++)    {    For(int  i  =  1;  i  <  count;  i++)  {	  	non-compiled	[CE]  '.class'  expected	4	None	add
3	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  for(int  i  =  2;  i  <  count;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  for(int  i  =  2;  i  <  count;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    1;    i    <    count;    i++)    {    for(int  i  =  2;  i  <  count;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  1;  i++)  {  SerialUtilities.writeShape(stream,  stream);  }  [CE]  class  or  interface  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  1;  i++)  {  SerialUtilities.writeShape(stream,  stream);  }  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  1;  i++)  {  SerialUtilities.writeShape(stream,  stream);  }	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    SerialUtilities.writeShape(stream,    stream);    	non-compiled	[CE]  class  or  interface  expected	8	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  stream);  }  [CE]  class  or  interface  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  stream);  }  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  stream);  }	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    SerialUtilities.writeShape(stream,    stream);    	non-compiled	[CE]  class  or  interface  expected	8	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  ObjectOutputStream  stream  =  new  ObjectOutputStream();  [CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  ObjectOutputStream  stream  =  new  ObjectOutputStream();  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  2;  i++)  {  ObjectOutputStream  stream  =  new  ObjectOutputStream();	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    ObjectOutputStream    stream    =    new    ObjectOutputStream();    	non-compiled	[CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)	2	None	replace
7	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  size();  i++)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  For(int  i  =  0;  i  <  size();  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	For(int  i  =  0;  i  <  size();  i++)  {	  For(int    i    =    0;    i    <    count;    i++)    {    	non-compiled	[CE]  '.class'  expected	10	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  count  <  count;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	for(int  i  =  0;  count  <  count;  i++)  {	  for(int    i    =    0;    count    <    size;    i++)    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  count  <  count;  i++)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  count  <  count;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  count  <  count;  i++)  {	  for(int    i    =    0;    count    <    size;    i++)    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  int  count  =  size();  [CE]  variable  count  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  int  count  =  size();  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  2;  i++)  {  int  count  =  size();	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    int    count    =    size();    	non-compiled	[CE]  variable  count  is  already  defined  in  method  writeObject(ObjectOutputStream)	3	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  1;  i++)  {  int  count  =  size();  }  [CE]  class  or  interface  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  1;  i++)  {  int  count  =  size();  }  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  1;  i++)  {  int  count  =  size();  }	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    int    count    =    size();    	non-compiled	[CE]  class  or  interface  expected	3	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  int  i  =  0;  i  <  count  +  1;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  int  i  =  0;  i  <  count  +  1;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count;  i++)  {  int  i  =  0;  i  <  count  +  1;  i++)  {	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    int    i    =    0;    i    <    count    +    1;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  int  i  =  0;  i  <  count;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  int  i  =  0;  i  <  count;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count;  i++)  {  int  i  =  0;  i  <  count;  i++)  {	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    int    i    =    0;    i    <    count    +    1;    i++)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  for(int  i  =  0;  i  <  count  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  for(int  i  =  0;  i  <  count  +  2;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    for(int  i  =  0;  i  <  count  +  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  For(int  i  =  0;  i  <  count  +  2;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  For(int  i  =  0;  i  <  count  +  2;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    For(int  i  =  0;  i  <  count  +  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	6	None	add
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  for(int  i  =  0;  i  <  count  +  2;  --i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  for(int  i  =  0;  i  <  count  +  2;  --i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    for(int  i  =  0;  i  <  count  +  2;  --i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  i);  }  [CE]  class  or  interface  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  i);  }  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  i);  }	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  1;  i++)  {  SerialUtilities.writeShape(stream,  i);  }  [CE]  class  or  interface  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  1;  i++)  {  SerialUtilities.writeShape(stream,  i);  }  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count  +  1;  i++)  {  SerialUtilities.writeShape(stream,  i);  }	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
19	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  size;  i++)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  For(int  i  =  0;  i  <  size;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	For(int  i  =  0;  i  <  size;  i++)  {	  For(int    i    =    0;    i    <    count;    i++)    {    	non-compiled	[CE]  '.class'  expected	10	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  stream);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  i);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  SerialUtilities.writeShape(stream,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    SerialUtilities.writeShape(stream,  i);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
22	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  SerialUtilities.writeShape(stream,  i);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  SerialUtilities.writeShape(stream,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    1;    i    <    count;    i++)    {    SerialUtilities.writeShape(stream,  i);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
23	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  SerialUtilities.writeShape(stream,  stream);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    1;    i    <    count;    i++)    {    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
24	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  ObjectOutputStream  stream  =  SerialUtilities.writeShape(stream);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  ObjectOutputStream  stream  =  SerialUtilities.writeShape(stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    1;    i    <    count;    i++)    {    ObjectOutputStream  stream  =  SerialUtilities.writeShape(stream);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  ObjectOutputStream  stream  =  new  ObjectOutputStream();  [CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  ObjectOutputStream  stream  =  new  ObjectOutputStream();  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  0;  i  <  count;  i++)  {  ObjectOutputStream  stream  =  new  ObjectOutputStream();	  for(int    i    =    0;    i    <    count    +    1;    i++)    {    ObjectOutputStream    stream    =    new    ObjectOutputStream();    	non-compiled	[CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)	2	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  int  i  =  0;  i  <  count  +  2;  i++)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  int  i  =  0;  i  <  count  +  2;  i++)  {  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    int  i  =  0;  i  <  count  +  2;  i++)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	add
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  ObjectOutputStream  stream  =  SerialUtilities.writeShape(stream);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  for(int  i  =  0;  i  <  count  +  2;  i++)  {  ObjectOutputStream  stream  =  SerialUtilities.writeShape(stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int    i    =    0;    i    <    count    +    2;    i++)    {    ObjectOutputStream  stream  =  SerialUtilities.writeShape(stream);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
