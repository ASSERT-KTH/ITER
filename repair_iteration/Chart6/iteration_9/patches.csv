bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
2009452370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  *  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  *  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(++i    -    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	334908729	2
2009452371	[BUG]  [BUGGY]  stream.writeInt(++i  *  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  *  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  *  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(++i    -    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	334908729	2
2914796498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  4  +  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  4  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	485799417	2
2914796499	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  4  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  4  +  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  4  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	485799417	2
2914796499	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(i  *  4  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  4  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	485799417	2
2914796500	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  4  +  stream.readInt());  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(i  *  4  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  4  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	485799417	2
2009164442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  if(shape!=    null)    {    stream.writeInt(-2);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	334860741	2
2009164443	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  if(shape!=    null)    {    stream.writeInt(-2);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	334860741	2
1878202407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033735	2
1878202408	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033735	2
2010882975	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	335147163	2
2010882976	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	335147163	2
1878201261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033544	2
1878201262	[BUG]  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033544	2
2854531017	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(double)stream.readShort();  if(index!=  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readShort();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531018	[BUG]  [BUGGY]  double  shape  =(double)stream.readShort();  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(double)stream.readShort();  if(index!=  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readShort();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475755170	2
1875075313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(size()    -    1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	312512553	2
1875075314	[BUG]  [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(size()    -    1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	312512553	2
2854531028	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  ==  0)?  stream.readInt()  :  -1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readInt()  :  -1;	  double    shape    =(index    ==    0)?    stream.readDouble()    :    -1;    	compilable	  [FE]  AssertionFailedError	475755172	2
2854531029	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readInt()  :  -1;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  ==  0)?  stream.readInt()  :  -1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readInt()  :  -1;	  double    shape    =(index    ==    0)?    stream.readDouble()    :    -1;    	compilable	  [FE]  AssertionFailedError	475755172	2
2009452376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  /  3);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  /  3);	  stream.writeInt(++i    -    3);    	compilable	  [FE]  AssertionFailedError	334908730	2
2009452377	[BUG]  [BUGGY]  stream.writeInt(++i  /  3);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  /  3);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  /  3);	  stream.writeInt(++i    -    3);    	compilable	  [FE]  AssertionFailedError	334908730	2
2009452184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  +  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  +  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	334908698	2
2009452185	[BUG]  [BUGGY]  stream.writeInt(++i  +  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  +  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  +  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	334908698	2
2854531047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >  0)?  stream.readDouble()  :  -1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  >  0)?  stream.readDouble()  :  -1;	  	compilable	  [FE]  AssertionFailedError	475755175	2
2854531048	[BUG]  [BUGGY]  double  shape  =(index  >  0)?  stream.readDouble()  :  -1;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >  0)?  stream.readDouble()  :  -1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  >  0)?  stream.readDouble()  :  -1;	  	compilable	  [FE]  AssertionFailedError	475755175	2
1878202382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1878202383	[BUG]  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1875075344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	312512558	2
1875075345	[BUG]  [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	312512558	2
1875075345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	312512558	2
1875075346	[BUG]  [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	312512558	2
2009452400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  /  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  /  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	334908734	2
2009452401	[BUG]  [BUGGY]  stream.writeInt(++i  /  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  /  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  /  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	334908734	2
2914796504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  0)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  0)  {  return;  }	  Shape    shape    =    getShape(i    *    4    +    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799418	2
2914796505	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  0)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  0)  {  return;  }	  Shape    shape    =    getShape(i    *    4    +    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799418	2
2009164437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	334860740	2
2009164438	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	334860740	2
545099366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  boolean  equals(Object  obj)  {                    [BUGGY]  if(this  ==  null)  {  return  true;  }  [BUGGY]                    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	90849895	2
545099367	[BUG]  [BUGGY]  if(this  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]                    public  boolean  equals(Object  obj)  {                    [BUGGY]  if(this  ==  null)  {  return  true;  }  [BUGGY]                    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	90849895	2
1875075344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size()  -  i);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size()  -  i);	  	compilable	  [FE]  AssertionFailedError	312512558	2
1875075345	[BUG]  [BUGGY]  stream.writeInt(size()  -  i);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size()  -  i);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size()  -  i);	  	compilable	  [FE]  AssertionFailedError	312512558	2
2009476995	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	334912833	2
2009476996	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	334912833	2
2914796487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	485799415	2
2914796488	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	485799415	2
2854531016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  stream.readShort();  if(index  ==  -1)  {  index  =  0;  i++;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readShort();  if(index  ==  -1)  {  index  =  0;  i++;  }	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531017	[BUG]  [BUGGY]  stream.readShort();  if(index  ==  -1)  {  index  =  0;  i++;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  stream.readShort();  if(index  ==  -1)  {  index  =  0;  i++;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readShort();  if(index  ==  -1)  {  index  =  0;  i++;  }	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531017	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  stream.readShort();  if(index  ==  -1)  {  index  =  0;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readShort();  if(index  ==  -1)  {  index  =  0;  }	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531018	[BUG]  [BUGGY]  stream.readShort();  if(index  ==  -1)  {  index  =  0;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  stream.readShort();  if(index  ==  -1)  {  index  =  0;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readShort();  if(index  ==  -1)  {  index  =  0;  }	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531022	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readDouble()  :  1;	  	compilable	  [FE]  AssertionFailedError	475755171	2
2854531023	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  1;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readDouble()  :  1;	  	compilable	  [FE]  AssertionFailedError	475755171	2
2009164689	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	334860782	2
2009164690	[BUG]  [BUGGY]  stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	334860782	2
2854531023	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =  stream.readShort();  if(index  ==  0)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readShort();  if(index  ==  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475755171	2
2854531024	[BUG]  [BUGGY]  double  shape  =  stream.readShort();  if(index  ==  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =  stream.readShort();  if(index  ==  0)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readShort();  if(index  ==  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475755171	2
2854531021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >  0)?  stream.readFloat()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  >  0)?  stream.readFloat()  :  -index;	  	compilable	  [FE]  AssertionFailedError	475755171	2
2854531022	[BUG]  [BUGGY]  double  shape  =(index  >  0)?  stream.readFloat()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >  0)?  stream.readFloat()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  >  0)?  stream.readFloat()  :  -index;	  	compilable	  [FE]  AssertionFailedError	475755171	2
1827774980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	304629164	2
1827774981	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	304629164	2
1827774981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	304629164	2
1827774982	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  6);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	304629164	2
2854531017	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  ==  0)?  stream.readFloat()  :  -1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readFloat()  :  -1;	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531018	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readFloat()  :  -1;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  ==  0)?  stream.readFloat()  :  -1;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readFloat()  :  -1;	  	compilable	  [FE]  AssertionFailedError	475755170	2
2914796467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(i  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }	  Shape    shape    =    getShape(i    *    3    +    stream.readInt());    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	485799412	2
2914796468	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(i  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }	  Shape    shape    =    getShape(i    *    3    +    stream.readInt());    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	485799412	2
2854531057	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >  0)?  stream.readInt()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  >  0)?  stream.readInt()  :  -index;	  double    shape    =(index    ==    0)?    stream.readInt()    :    -index;    	compilable	  [FE]  AssertionFailedError	475755177	2
2854531058	[BUG]  [BUGGY]  double  shape  =(index  >  0)?  stream.readInt()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >  0)?  stream.readInt()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  >  0)?  stream.readInt()  :  -index;	  double    shape    =(index    ==    0)?    stream.readInt()    :    -index;    	compilable	  [FE]  AssertionFailedError	475755177	2
1878202382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1878202383	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
2010882974	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	335147163	2
2010882975	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	335147163	2
2010882975	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	335147163	2
2010882976	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	335147163	2
1878202382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1878202383	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1878202383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1878202384	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
2914796498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	485799417	2
2914796499	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	485799417	2
2009452370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  -  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  3);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(++i    -    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	334908729	2
2009452371	[BUG]  [BUGGY]  stream.writeInt(++i  -  3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  -  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  3);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(++i    -    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	334908729	2
1878202370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	313033729	2
1878202371	[BUG]  [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	313033729	2
2854531051	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  <  0)?  stream.readDouble()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  <  0)?  stream.readDouble()  :  -index;	  long    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	475755176	2
2854531052	[BUG]  [BUGGY]  double  shape  =(index  <  0)?  stream.readDouble()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  <  0)?  stream.readDouble()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  <  0)?  stream.readDouble()  :  -index;	  long    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	475755176	2
2854531052	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >=  0)?  stream.readDouble()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  >=  0)?  stream.readDouble()  :  -index;	  long    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	475755176	2
2854531053	[BUG]  [BUGGY]  double  shape  =(index  >=  0)?  stream.readDouble()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(index  >=  0)?  stream.readDouble()  :  -index;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  >=  0)?  stream.readDouble()  :  -index;	  long    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	475755176	2
2914796504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  11  +  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  11  +  stream.readInt());	  Shape    shape    =    getShape(i    *    4    +    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799418	2
2914796505	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  11  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  11  +  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  11  +  stream.readInt());	  Shape    shape    =    getShape(i    *    4    +    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799418	2
2009452406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  %  2);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  %  2);	  stream.writeInt(++i    /    2);    	compilable	  [FE]  AssertionFailedError	334908735	2
2009452407	[BUG]  [BUGGY]  stream.writeInt(++i  %  2);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  %  2);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  %  2);	  stream.writeInt(++i    /    2);    	compilable	  [FE]  AssertionFailedError	334908735	2
2009452376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  -  6);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  6);	  stream.writeInt(++i    -    3);    	compilable	  [FE]  AssertionFailedError	334908730	2
2009452377	[BUG]  [BUGGY]  stream.writeInt(++i  -  6);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(++i  -  6);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  6);	  stream.writeInt(++i    -    3);    	compilable	  [FE]  AssertionFailedError	334908730	2
1875075350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }	  stream.writeInt(size()    +    1);    if(shape!=    null)    {    stream.writeInt(size()    +    1);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	312512559	2
1875075351	[BUG]  [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }	  stream.writeInt(size()    +    1);    if(shape!=    null)    {    stream.writeInt(size()    +    1);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	312512559	2
1886591390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(-6);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-6);	  	compilable	  [FE]  AssertionFailedError	314431899	2
1886591391	[BUG]  [BUGGY]  stream.writeInt(-6);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(-6);  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-6);	  	compilable	  [FE]  AssertionFailedError	314431899	2
2009452401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(i  /  2);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  /  2);	  	compilable	  [FE]  AssertionFailedError	334908734	2
2009452402	[BUG]  [BUGGY]  stream.writeInt(i  /  2);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  stream.writeInt(i  /  2);  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  /  2);	  	compilable	  [FE]  AssertionFailedError	334908734	2
2854531017	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(double)stream.readShort();  i++;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readShort();  i++;	  	compilable	  [FE]  AssertionFailedError	475755170	2
2854531018	[BUG]  [BUGGY]  double  shape  =(double)stream.readShort();  i++;  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  double  shape  =(double)stream.readShort();  i++;  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readShort();  i++;	  	compilable	  [FE]  AssertionFailedError	475755170	2
2009164442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  ==  0)  {  stream.writeInt(-1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	SerialUtilities.writeShape(shape,  stream);  if(i  ==  0)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    stream.writeInt(-2);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	334860741	2
2009164443	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  ==  0)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  ==  0)  {  stream.writeInt(-1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	SerialUtilities.writeShape(shape,  stream);  if(i  ==  0)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    stream.writeInt(-2);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	334860741	2
2009164472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	334860746	2
2009164473	[BUG]  [BUGGY]  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	334860746	2
2009164473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape  ==  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape  ==  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	334860746	2
2009164474	[BUG]  [BUGGY]  if(shape  ==  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape  ==  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape  ==  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	334860746	2
2854371824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  if(index  <  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	setShape(index,  SerialUtilities.readShape(stream));  if(index  <  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475728638	2
2854371825	[BUG]  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  if(index  <  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  if(index  <  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	setShape(index,  SerialUtilities.readShape(stream));  if(index  <  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475728638	2
1878202412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	313033736	2
1878202413	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	313033736	2
2914796714	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(i  -  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  -  stream.readInt());	  Shape    shape    =    getShape(index    -    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799453	2
2914796715	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  -  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(i  -  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  -  stream.readInt());	  Shape    shape    =    getShape(index    -    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799453	2
2853779371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  if(index  ==  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(index  ==  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475629896	2
2853779372	[BUG]  [BUGGY]  if(index  ==  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  if(index  ==  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(index  ==  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475629896	2
2853779373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  if(index  <  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(index  <  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475629896	2
2853779374	[BUG]  [BUGGY]  if(index  <  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  if(index  <  -1)  {  return;  }  [BUGGY]                    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(index  <  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	475629896	2
545099379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  boolean  equals(Object  obj)  {                    [BUGGY]  if(this  ==  null)  {  if(!getClass().equals(obj))  return  false;  }  [BUGGY]                    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  null)  {  if(!getClass().equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	90849897	2
545099380	[BUG]  [BUGGY]  if(this  ==  null)  {  if(!getClass().equals(obj))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]                    public  boolean  equals(Object  obj)  {                    [BUGGY]  if(this  ==  null)  {  if(!getClass().equals(obj))  return  false;  }  [BUGGY]                    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  null)  {  if(!getClass().equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	90849897	2
2914796504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  12  +  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  12  +  stream.readInt());	  Shape    shape    =    getShape(i    *    4    +    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799418	2
2914796505	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  12  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  12  +  stream.readInt());  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  12  +  stream.readInt());	  Shape    shape    =    getShape(i    *    4    +    stream.readInt());    	compilable	  [FE]  AssertionFailedError	485799418	2
2914570820	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  12);  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  12);	  Shape    shape    =    getShape(index    *    7);    	compilable	  [FE]  AssertionFailedError	485761804	2
2914570821	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  12);  [FE]  AssertionFailedError  [CONTEXT]                    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                    [BUGGY]  Shape  shape  =  getShape(index  *  12);  [BUGGY]                    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  12);	  Shape    shape    =    getShape(index    *    7);    	compilable	  [FE]  AssertionFailedError	485761804	2
1878202382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
1878202383	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	313033731	2
545099367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    public  boolean  equals(Object  obj)  {                    [BUGGY]  if(this  ==  null)  {  return  this  ==  null;  }  [BUGGY]                    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  null)  {  return  this  ==  null;  }	  	compilable	  [FE]  AssertionFailedError	90849895	2
545099368	[BUG]  [BUGGY]  if(this  ==  null)  {  return  this  ==  null;  }  [FE]  AssertionFailedError  [CONTEXT]                    public  boolean  equals(Object  obj)  {                    [BUGGY]  if(this  ==  null)  {  return  this  ==  null;  }  [BUGGY]                    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  null)  {  return  this  ==  null;  }	  	compilable	  [FE]  AssertionFailedError	90849895	2
2010884265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	335147378	2
2010884266	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	335147378	2
2010882969	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	335147162	2
2010882970	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	335147162	2
1878202377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  return;  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  return;  }	  	compilable	  [FE]  AssertionFailedError	313033730	2
1878202378	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  return;  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  return;  }	  	compilable	  [FE]  AssertionFailedError	313033730	2
1886553590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }	  	compilable	  [FE]  AssertionFailedError	314425599	2
1886553591	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }	  	compilable	  [FE]  AssertionFailedError	314425599	2
1827775233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(i  +  1);  if(shape  ==  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape  ==  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	304629206	2
1827775234	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape  ==  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(i  +  1);  if(shape  ==  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape  ==  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	304629206	2
1875075345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-i);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	312512558	2
1875075346	[BUG]  [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-i);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size());  if(shape!=  null)  {  stream.writeInt(size());  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	312512558	2
1886591390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }	  	compilable	  [FE]  AssertionFailedError	314431899	2
1886591391	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  7);  }	  	compilable	  [FE]  AssertionFailedError	314431899	2
1878202407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	313033735	2
1878202408	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	313033735	2
