bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
304635687	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  7);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  7);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	50772615	2
304635688	[BUG]  [BUGGY]  stream.writeInt(i  +  7);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  7);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  7);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	50772615	2
334912833	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	55818806	2
334912834	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	55818806	2
475728638	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(double)stream.readInt();  if(index  >  0)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readInt();  if(index  >  0)  {  return;  }	  double    shape    =(double)stream.readInt();    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	79288107	2
475728639	[BUG]  [BUGGY]  double  shape  =(double)stream.readInt();  if(index  >  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(double)stream.readInt();  if(index  >  0)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readInt();  if(index  >  0)  {  return;  }	  double    shape    =(double)stream.readInt();    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	79288107	2
312512558	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(size()  +  1);  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size()  +  1);  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(size()    -    1);    	compilable	  [FE]  AssertionFailedError	52085427	2
312512559	[BUG]  [BUGGY]  stream.writeInt(size()  +  1);  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(size()  +  1);  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size()  +  1);  if(shape!=  null)  {  stream.writeInt(size()  +  1);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(size()    -    1);    	compilable	  [FE]  AssertionFailedError	52085427	2
314431899	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	52405317	2
314431900	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	52405317	2
485799415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  3  +  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  3  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799416	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  3  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  3  +  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  3  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(i  *  4  +  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  4  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799418	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  4  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(i  *  4  +  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  4  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(i  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	80966569	2
485799412	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(i  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  3  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	80966569	2
475755171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  -1;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readDouble()  :  -1;	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755172	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  -1;  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  -1;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readDouble()  :  -1;	  	compilable	  [FE]  AssertionFailedError	79292529	2
334860782	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	55810131	2
334860783	[BUG]  [BUGGY]  stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	55810131	2
312512552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(size()  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size()  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	52085426	2
312512553	[BUG]  [BUGGY]  stream.writeInt(size()  -  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(size()  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size()  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	52085426	2
314425599	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	52404267	2
314425600	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  6);  }	  	compilable	  [FE]  AssertionFailedError	52404267	2
475755175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  long  shape  =  stream.readInt();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	long  shape  =  stream.readInt();	  double    shape    =    stream.readShort();    	compilable	  [FE]  AssertionFailedError	79292530	2
475755176	[BUG]  [BUGGY]  long  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  long  shape  =  stream.readInt();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	long  shape  =  stream.readInt();	  double    shape    =    stream.readShort();    	compilable	  [FE]  AssertionFailedError	79292530	2
304629164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	50771528	2
304629165	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	50771528	2
304635644	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	50772608	2
304635645	[BUG]  [BUGGY]  stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	50772608	2
485799416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799417	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  0)  {  return;  }  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799418	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  0)  {  return;  }  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  stream.readInt());  if(index!=  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	80966570	2
335147163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	55857861	2
335147164	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	55857861	2
313033735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	52172290	2
313033736	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	52172290	2
313033731	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
313033732	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
475755175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  >  0)?  stream.readDouble()  :  -index;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  >  0)?  stream.readDouble()  :  -index;	  double    shape    =    stream.readShort();    	compilable	  [FE]  AssertionFailedError	79292530	2
475755176	[BUG]  [BUGGY]  double  shape  =(index  >  0)?  stream.readDouble()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  >  0)?  stream.readDouble()  :  -index;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  >  0)?  stream.readDouble()  :  -index;	  double    shape    =    stream.readShort();    	compilable	  [FE]  AssertionFailedError	79292530	2
475755176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  ==  0)?  stream.readInt()  :  -index;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readInt()  :  -index;	  double    shape    =    stream.readShort();    	compilable	  [FE]  AssertionFailedError	79292530	2
475755177	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readInt()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  ==  0)?  stream.readInt()  :  -index;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readInt()  :  -index;	  double    shape    =    stream.readShort();    	compilable	  [FE]  AssertionFailedError	79292530	2
304629170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	50771529	2
304629171	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	50771529	2
304629171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	50771529	2
304629172	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	50771529	2
313033730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
313033731	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
485799452	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  -  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  -  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966576	2
485799453	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  -  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  -  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  -  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966576	2
334908734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  /  2);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  /  2);	  stream.writeInt(++i    -    2);    	compilable	  [FE]  AssertionFailedError	55818123	2
334908735	[BUG]  [BUGGY]  stream.writeInt(++i  /  2);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  /  2);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  /  2);	  stream.writeInt(++i    -    2);    	compilable	  [FE]  AssertionFailedError	55818123	2
304629206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  stream.writeInt(i    -    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	50771535	2
304629207	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  stream.writeInt(i    -    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	50771535	2
334908728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	55818122	2
334908729	[BUG]  [BUGGY]  stream.writeInt(++i  -  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	55818122	2
475629896	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  if(i  >  0)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(i  >  0)  {  return;  }	  if(index    >    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	79271650	2
475629897	[BUG]  [BUGGY]  if(i  >  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  if(i  >  0)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(i  >  0)  {  return;  }	  if(index    >    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	79271650	2
313033730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
313033731	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
334908698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  +  1);  SerialUtilities.writeShape(shape,  stream);	  if(shape!=    null)    {    stream.writeInt(++i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(++i);    }    	compilable	  [FE]  AssertionFailedError	55818117	2
334908699	[BUG]  [BUGGY]  stream.writeInt(++i  +  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  +  1);  SerialUtilities.writeShape(shape,  stream);	  if(shape!=    null)    {    stream.writeInt(++i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(++i);    }    	compilable	  [FE]  AssertionFailedError	55818117	2
334875249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	55812542	2
334875250	[BUG]  [BUGGY]  stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	55812542	2
475755170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =  stream.readShort();  if(index!=  -1)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readShort();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755171	[BUG]  [BUGGY]  double  shape  =  stream.readShort();  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =  stream.readShort();  if(index!=  -1)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readShort();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =  stream.readShort();  if(index  ==  -1)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readShort();  if(index  ==  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755172	[BUG]  [BUGGY]  double  shape  =  stream.readShort();  if(index  ==  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =  stream.readShort();  if(index  ==  -1)  {  return;  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readShort();  if(index  ==  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	79292529	2
334860740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	55810124	2
334860741	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	55810124	2
334908729	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  -  3);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  3);	  	compilable	  [FE]  AssertionFailedError	55818122	2
334908730	[BUG]  [BUGGY]  stream.writeInt(++i  -  3);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  -  3);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  3);	  	compilable	  [FE]  AssertionFailedError	55818122	2
475754301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  float  shape  =(float)stream.readDouble();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	float  shape  =(float)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	79292384	2
475754302	[BUG]  [BUGGY]  float  shape  =(float)stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  float  shape  =(float)stream.readDouble();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	float  shape  =(float)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	79292384	2
304629170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	50771529	2
304629171	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	50771529	2
90849897	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  public  boolean  equals(Object  obj)  {                  [BUGGY]  if(this  ==  null)  {  if(!this.equals(obj))  return  true;  }  [BUGGY]                  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  null)  {  if(!this.equals(obj))  return  true;  }	  	compilable	  [FE]  AssertionFailedError	15141650	2
90849898	[BUG]  [BUGGY]  if(this  ==  null)  {  if(!this.equals(obj))  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]                  public  boolean  equals(Object  obj)  {                  [BUGGY]  if(this  ==  null)  {  if(!this.equals(obj))  return  true;  }  [BUGGY]                  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  null)  {  if(!this.equals(obj))  return  true;  }	  	compilable	  [FE]  AssertionFailedError	15141650	2
313033729	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	52172289	2
313033730	[BUG]  [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	52172289	2
485799417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  7  +  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  7  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966570	2
485799418	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  7  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  7  +  stream.readInt());  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  7  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	80966570	2
304629205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  stream.writeInt(i    -    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	50771535	2
304629206	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  stream.writeInt(i    -    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	50771535	2
304629206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  stream.writeInt(i    -    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	50771535	2
304629207	[BUG]  [BUGGY]  stream.writeInt(i);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(i);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  stream.writeInt(i    -    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	50771535	2
475755170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  stream.readShort();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readShort();	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755171	[BUG]  [BUGGY]  stream.readShort();  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  stream.readShort();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readShort();	  	compilable	  [FE]  AssertionFailedError	79292529	2
313033736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	52172290	2
313033737	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	52172290	2
334908693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  +  1);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  +  1);	  	compilable	  [FE]  AssertionFailedError	55818116	2
334908694	[BUG]  [BUGGY]  stream.writeInt(++i  +  1);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(++i  +  1);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  +  1);	  	compilable	  [FE]  AssertionFailedError	55818116	2
475755170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(double)stream.readShort();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readShort();	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755171	[BUG]  [BUGGY]  double  shape  =(double)stream.readShort();  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(double)stream.readShort();  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readShort();	  	compilable	  [FE]  AssertionFailedError	79292529	2
335147378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	55857897	2
335147379	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	55857897	2
335147379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	55857897	2
335147380	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	55857897	2
312512558	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(size()  +  i);  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size()  +  i);	  stream.writeInt(size()    -    1);    	compilable	  [FE]  AssertionFailedError	52085427	2
312512559	[BUG]  [BUGGY]  stream.writeInt(size()  +  i);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  stream.writeInt(size()  +  i);  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size()  +  i);	  stream.writeInt(size()    -    1);    	compilable	  [FE]  AssertionFailedError	52085427	2
90849895	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  public  boolean  equals(Object  obj)  {                  [BUGGY]  if(this  ==  null)  {  return  false;  }  [BUGGY]                  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	15141650	2
90849896	[BUG]  [BUGGY]  if(this  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]                  public  boolean  equals(Object  obj)  {                  [BUGGY]  if(this  ==  null)  {  return  false;  }  [BUGGY]                  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	15141650	2
334860783	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(i  +  7);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  7);	  	compilable	  [FE]  AssertionFailedError	55810131	2
334860784	[BUG]  [BUGGY]  stream.writeInt(i  +  7);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  stream.writeInt(i  +  7);  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  7);	  	compilable	  [FE]  AssertionFailedError	55810131	2
334860741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	55810124	2
334860742	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	55810124	2
485761803	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  7);  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  7);	  	compilable	  [FE]  AssertionFailedError	80960301	2
485761804	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  7);  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  Shape  shape  =  getShape(index  *  7);  [BUGGY]                  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  7);	  	compilable	  [FE]  AssertionFailedError	80960301	2
475755170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  ==  0)?  stream.readFloat()  :  -index;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readFloat()  :  -index;	  	compilable	  [FE]  AssertionFailedError	79292529	2
475755171	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readFloat()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  double  shape  =(index  ==  0)?  stream.readFloat()  :  -index;  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readFloat()  :  -index;	  	compilable	  [FE]  AssertionFailedError	79292529	2
313033544	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	52172258	2
313033545	[BUG]  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	52172258	2
313033545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	52172258	2
313033546	[BUG]  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	52172258	2
335147162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	55857861	2
335147163	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	55857861	2
335147163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	55857861	2
335147164	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	55857861	2
335147191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	55857866	2
335147192	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	55857866	2
335147192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	55857866	2
335147193	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	55857866	2
313033730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
313033731	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]                  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	52172289	2
334860746	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  if(shape!=    null)    {    stream.writeInt(-2);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	55810125	2
334860747	[BUG]  [BUGGY]  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  if(shape!=    null)    {    stream.writeInt(-2);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	55810125	2
334860782	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	55810131	2
334860783	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                  [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	55810131	2
475629891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  if(index  >  0)  {  return;  }  else  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(index  >  0)  {  return;  }  else  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	79271649	2
475629892	[BUG]  [BUGGY]  if(index  >  0)  {  return;  }  else  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]                  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                  [BUGGY]  if(index  >  0)  {  return;  }  else  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]                  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(index  >  0)  {  return;  }  else  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	79271649	2
