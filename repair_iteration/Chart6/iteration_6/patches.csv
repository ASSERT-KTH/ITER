bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
13494434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  +  i);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  i);	  Shape    shape    =    getShape(index    *    2    +    i);    	compilable	  [FE]  AssertionFailedError	2249073	2
13494435	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  i);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  +  i);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  i);	  Shape    shape    =    getShape(index    *    2    +    i);    	compilable	  [FE]  AssertionFailedError	2249073	2
13493360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  /  4);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  /  4);	  Shape    shape    =    getShape(index    *    4);    	compilable	  [FE]  AssertionFailedError	2248894	2
13493361	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  /  4);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  /  4);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  /  4);	  Shape    shape    =    getShape(index    *    4);    	compilable	  [FE]  AssertionFailedError	2248894	2
8462103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1410351	2
8462104	[BUG]  [BUGGY]  stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  6);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1410351	2
13215577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }	  double    shape    =    stream.readInt();    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2202597	2
13215578	[BUG]  [BUGGY]  double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }	  double    shape    =    stream.readInt();    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2202597	2
13215578	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }	  double    shape    =    stream.readInt();    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2202597	2
13215579	[BUG]  [BUGGY]  double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }	  double    shape    =    stream.readInt();    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2202597	2
8695382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1449231	2
8695383	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1449231	2
9301695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1550283	2
9301696	[BUG]  [BUGGY]  stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1550283	2
13215422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readLong();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readLong();	  	compilable	  [FE]  AssertionFailedError	2202571	2
13215423	[BUG]  [BUGGY]  double  shape  =  stream.readLong();  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readLong();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readLong();	  	compilable	  [FE]  AssertionFailedError	2202571	2
8727561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }	  	compilable	  [FE]  AssertionFailedError	1454594	2
8727562	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }	  	compilable	  [FE]  AssertionFailedError	1454594	2
8461892	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  stream.writeInt(i    +    2);    if(shape!=    null)    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	1410316	2
8461893	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  stream.writeInt(i    +    2);    if(shape!=    null)    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	1410316	2
8135720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);              [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [BUGGY]              if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }    }	  	compilable	  [FE]  AssertionFailedError	1355954	2
8135721	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);              [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [BUGGY]              if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }    }	  	compilable	  [FE]  AssertionFailedError	1355954	2
8461922	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  stream.writeInt(i    +    1);    if(shape!=    null)    {    stream.writeInt(i    +    1);    }    	compilable	  [FE]  AssertionFailedError	1410321	2
8461923	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  stream.writeInt(i    +    1);    if(shape!=    null)    {    stream.writeInt(i    +    1);    }    	compilable	  [FE]  AssertionFailedError	1410321	2
9333189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1555532	2
9333190	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1555532	2
13211942	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index!=    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2201991	2
13211943	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index!=    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2201991	2
9301689	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(i  +  5);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  5);	  	compilable	  [FE]  AssertionFailedError	1550282	2
9301690	[BUG]  [BUGGY]  stream.writeInt(i  +  5);  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(i  +  5);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  5);	  	compilable	  [FE]  AssertionFailedError	1550282	2
11208315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();              [BUGGY]  int  shape  =(int)stream.readDouble();  [BUGGY]              int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	int  shape  =(int)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	1868053	2
11208316	[BUG]  [BUGGY]  int  shape  =(int)stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();              [BUGGY]  int  shape  =(int)stream.readDouble();  [BUGGY]              int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	int  shape  =(int)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	1868053	2
8462102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  -  5);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  5);	  	compilable	  [FE]  AssertionFailedError	1410351	2
8462103	[BUG]  [BUGGY]  stream.writeInt(i  -  5);  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(i  -  5);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  5);	  	compilable	  [FE]  AssertionFailedError	1410351	2
13494428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  *  2  +  i);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2  +  i);	  	compilable	  [FE]  AssertionFailedError	2249072	2
13494429	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2  +  i);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  *  2  +  i);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2  +  i);	  	compilable	  [FE]  AssertionFailedError	2249072	2
13494429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  *  2  +  index);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  index);	  	compilable	  [FE]  AssertionFailedError	2249072	2
13494430	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  index);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  *  2  +  index);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  index);	  	compilable	  [FE]  AssertionFailedError	2249072	2
9303020	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(++i  -  1);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  1);	  	compilable	  [FE]  AssertionFailedError	1550504	2
9303021	[BUG]  [BUGGY]  stream.writeInt(++i  -  1);  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(++i  -  1);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  1);	  	compilable	  [FE]  AssertionFailedError	1550504	2
2527467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  boolean  equals(Object  obj)  {              [BUGGY]  if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }  [BUGGY]              if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	421245	2
2527468	[BUG]  [BUGGY]  if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]              public  boolean  equals(Object  obj)  {              [BUGGY]  if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }  [BUGGY]              if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	421245	2
13494470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  -  2);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  -  2);	  Shape    shape    =    getShape(index    -    1);    	compilable	  [FE]  AssertionFailedError	2249079	2
13494471	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  -  2);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  -  2);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  -  2);	  Shape    shape    =    getShape(index    -    1);    	compilable	  [FE]  AssertionFailedError	2249079	2
13214684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }	  double    shape    =(double)stream.readInt();    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2202448	2
13214685	[BUG]  [BUGGY]  double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }	  double    shape    =(double)stream.readInt();    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	2202448	2
9309644	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	1551608	2
9309645	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	1551608	2
9309650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  if(shape!=    null)    {    stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	1551609	2
9309651	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  if(shape!=    null)    {    stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	1551609	2
8734220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt((2));    }    	compilable	  [FE]  AssertionFailedError	1455704	2
8734221	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt((2));    }    	compilable	  [FE]  AssertionFailedError	1455704	2
8734214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }	  	compilable	  [FE]  AssertionFailedError	1455703	2
8734215	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }	  	compilable	  [FE]  AssertionFailedError	1455703	2
8680905	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(size());  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size());	  	compilable	  [FE]  AssertionFailedError	1446818	2
8680906	[BUG]  [BUGGY]  stream.writeInt(size());  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  stream.writeInt(size());  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size());	  	compilable	  [FE]  AssertionFailedError	1446818	2
2523609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              public  boolean  equals(Object  obj)  {              [BUGGY]  if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  [BUGGY]              if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	420602	2
2523610	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]              public  boolean  equals(Object  obj)  {              [BUGGY]  if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  [BUGGY]              if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	420602	2
13493180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  *  5);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  5);	  Shape    shape    =    getShape(index    +    5);    	compilable	  [FE]  AssertionFailedError	2248864	2
13493181	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  5);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  *  5);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  5);	  Shape    shape    =    getShape(index    +    5);    	compilable	  [FE]  AssertionFailedError	2248864	2
13494469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  *  1);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  1);	  Shape    shape    =    getShape(index    -    1);    	compilable	  [FE]  AssertionFailedError	2249079	2
13494470	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  1);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  *  1);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  1);	  Shape    shape    =    getShape(index    -    1);    	compilable	  [FE]  AssertionFailedError	2249079	2
9302091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(i  -  3);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  3);	  	compilable	  [FE]  AssertionFailedError	1550349	2
9302092	[BUG]  [BUGGY]  stream.writeInt(i  -  3);  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  stream.writeInt(i  -  3);  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  3);	  	compilable	  [FE]  AssertionFailedError	1550349	2
13493390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  /  2  +  1);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  /  2  +  1);	  Shape    shape    =    getShape(index    /    2);    	compilable	  [FE]  AssertionFailedError	2248899	2
13493391	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  /  2  +  1);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(index  /  2  +  1);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  /  2  +  1);	  Shape    shape    =    getShape(index    /    2);    	compilable	  [FE]  AssertionFailedError	2248899	2
13215421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readDouble();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	2202571	2
13215422	[BUG]  [BUGGY]  double  shape  =  stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =  stream.readDouble();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	2202571	2
13215423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  stream.readDouble();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	2202571	2
13215424	[BUG]  [BUGGY]  stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  stream.readDouble();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	2202571	2
13215573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  readObject(stream);  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	readObject(stream);	  	compilable	  [FE]  AssertionFailedError	2202596	2
13215574	[BUG]  [BUGGY]  readObject(stream);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  readObject(stream);  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	readObject(stream);	  	compilable	  [FE]  AssertionFailedError	2202596	2
13215397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =(double)stream.readFloat();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readFloat();	  stream.readFloat();    	compilable	  [FE]  AssertionFailedError	2202567	2
13215398	[BUG]  [BUGGY]  double  shape  =(double)stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =(double)stream.readFloat();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readFloat();	  stream.readFloat();    	compilable	  [FE]  AssertionFailedError	2202567	2
13493384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  /  2);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  /  2);	  	compilable	  [FE]  AssertionFailedError	2248898	2
13493385	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  /  2);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  /  2);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  /  2);	  	compilable	  [FE]  AssertionFailedError	2248898	2
9303020	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	1550504	2
9303021	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	1550504	2
9303021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1550504	2
9303022	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1550504	2
8734045	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	1455675	2
8734046	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	1455675	2
8695376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	1449230	2
8695377	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	1449230	2
13215398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =(float)stream.readFloat();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(float)stream.readFloat();	  stream.readFloat();    	compilable	  [FE]  AssertionFailedError	2202567	2
13215399	[BUG]  [BUGGY]  double  shape  =(float)stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  double  shape  =(float)stream.readFloat();  [BUGGY]              }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(float)stream.readFloat();	  stream.readFloat();    	compilable	  [FE]  AssertionFailedError	2202567	2
9303135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	1550523	2
9303136	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	1550523	2
13493383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  *  4);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  4);	  	compilable	  [FE]  AssertionFailedError	2248898	2
13493384	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  4);  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  *  4);  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  4);	  	compilable	  [FE]  AssertionFailedError	2248898	2
8695382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1449231	2
8695383	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {              [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]              stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1449231	2
9309645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	1551608	2
9309646	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	1551608	2
13494429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  *  2  +  stream.readInt());  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	2249072	2
13494430	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]              private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {              [BUGGY]  Shape  shape  =  getShape(i  *  2  +  stream.readInt());  [BUGGY]              setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2  +  stream.readInt());	  	compilable	  [FE]  AssertionFailedError	2249072	2
9301688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	1550282	2
9301689	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	1550282	2
9301689	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	1550282	2
9301690	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]              private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);              [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]              SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	1550282	2
