bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
1550349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  -  2);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  2);	  	compilable	  [FE]  AssertionFailedError	258392	2
1550350	[BUG]  [BUGGY]  stream.writeInt(i  -  2);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  -  2);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  2);	  	compilable	  [FE]  AssertionFailedError	258392	2
1454594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt((2));    }    	compilable	  [FE]  AssertionFailedError	242433	2
1454595	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt((2));    }    	compilable	  [FE]  AssertionFailedError	242433	2
1037102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  *  2  +  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  *  2  +  1);	  stream.writeInt(count    /    2    +    1);    	compilable	  [FE]  AssertionFailedError	172851	2
1037103	[BUG]  [BUGGY]  stream.writeInt(count  *  2  +  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  *  2  +  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  *  2  +  1);	  stream.writeInt(count    /    2    +    1);    	compilable	  [FE]  AssertionFailedError	172851	2
2201990	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  0)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	366999	2
2201991	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  0)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	366999	2
2202571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  double  shape  =  stream.readFloat();  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readFloat();	  float    shape    =    stream.readFloat();    	compilable	  [FE]  AssertionFailedError	367096	2
2202572	[BUG]  [BUGGY]  double  shape  =  stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  double  shape  =  stream.readFloat();  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readFloat();	  float    shape    =    stream.readFloat();    	compilable	  [FE]  AssertionFailedError	367096	2
1315742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape  ==  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape  ==  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    if(shape    ==    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	219291	2
1315743	[BUG]  [BUGGY]  if(shape  ==  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape  ==  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape  ==  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    if(shape    ==    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	219291	2
1446818	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }	  	compilable	  [FE]  AssertionFailedError	241137	2
1446819	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }	  	compilable	  [FE]  AssertionFailedError	241137	2
1410314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	235053	2
1410315	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	235053	2
1410315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	235053	2
1410316	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	235053	2
1656758	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {            [BUGGY]  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	276127	2
1656759	[BUG]  [BUGGY]  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]            stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {            [BUGGY]  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	276127	2
1355948	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [BUGGY]            if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }    }	  	compilable	  [FE]  AssertionFailedError	225992	2
1355949	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [BUGGY]            if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }    }	  	compilable	  [FE]  AssertionFailedError	225992	2
477194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }            [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()  ==  getClass()))  return  true;  [BUGGY]            return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()  ==  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	79533	2
477195	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()  ==  getClass()))  return  true;  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }            [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()  ==  getClass()))  return  true;  [BUGGY]            return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()  ==  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	79533	2
477195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }            [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  false;  [BUGGY]            return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  false;	  	compilable	  [FE]  AssertionFailedError	79533	2
477196	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  false;  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }            [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  false;  [BUGGY]            return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  false;	  	compilable	  [FE]  AssertionFailedError	79533	2
2248893	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  *  4);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  4);	  	compilable	  [FE]  AssertionFailedError	374816	2
2248894	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  4);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  *  4);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  4);	  	compilable	  [FE]  AssertionFailedError	374816	2
1550283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	258381	2
1550284	[BUG]  [BUGGY]  stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	258381	2
1037096	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  %  2  +  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  %  2  +  1);	  stream.writeInt(count    /    2    -    1);    	compilable	  [FE]  AssertionFailedError	172850	2
1037097	[BUG]  [BUGGY]  stream.writeInt(count  %  2  +  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  %  2  +  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  %  2  +  1);	  stream.writeInt(count    /    2    -    1);    	compilable	  [FE]  AssertionFailedError	172850	2
1455703	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }	  	compilable	  [FE]  AssertionFailedError	242618	2
1455704	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }	  	compilable	  [FE]  AssertionFailedError	242618	2
420201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	70034	2
420202	[BUG]  [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	70034	2
2248863	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  +  5);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  5);	  	compilable	  [FE]  AssertionFailedError	374811	2
2248864	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  5);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  +  5);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  5);	  	compilable	  [FE]  AssertionFailedError	374811	2
2248898	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  /  2);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  /  2);	  Shape    shape    =    getShape(index    *    3);    	compilable	  [FE]  AssertionFailedError	374817	2
2248899	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  /  2);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  /  2);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  /  2);	  Shape    shape    =    getShape(index    *    3);    	compilable	  [FE]  AssertionFailedError	374817	2
2202596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  double  shape  =  stream.readInt();  if(index!=  -1)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readInt();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	367100	2
2202597	[BUG]  [BUGGY]  double  shape  =  stream.readInt();  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  double  shape  =  stream.readInt();  if(index!=  -1)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readInt();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	367100	2
1868055	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();            [BUGGY]  double  shape  =(float)stream.readLong();  [BUGGY]            int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	double  shape  =(float)stream.readLong();	  	compilable	  [FE]  AssertionFailedError	311343	2
1868056	[BUG]  [BUGGY]  double  shape  =(float)stream.readLong();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();            [BUGGY]  double  shape  =(float)stream.readLong();  [BUGGY]            int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	double  shape  =(float)stream.readLong();	  	compilable	  [FE]  AssertionFailedError	311343	2
1550353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    -    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	258393	2
1550354	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    -    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	258393	2
2202422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  int  shape  =(int)stream.readInt();  if(index!=  -1)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	int  shape  =(int)stream.readInt();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	367071	2
2202423	[BUG]  [BUGGY]  int  shape  =(int)stream.readInt();  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  int  shape  =(int)stream.readInt();  if(index!=  -1)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	int  shape  =(int)stream.readInt();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	367071	2
2202423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  int  shape  =(int)stream.readInt();  if(index!=  -1)  {  stream.readObject();  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	int  shape  =(int)stream.readInt();  if(index!=  -1)  {  stream.readObject();  }	  	compilable	  [FE]  AssertionFailedError	367071	2
2202424	[BUG]  [BUGGY]  int  shape  =(int)stream.readInt();  if(index!=  -1)  {  stream.readObject();  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  int  shape  =(int)stream.readInt();  if(index!=  -1)  {  stream.readObject();  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	int  shape  =(int)stream.readInt();  if(index!=  -1)  {  stream.readObject();  }	  	compilable	  [FE]  AssertionFailedError	367071	2
1775996	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {            [BUGGY]  stream.close();  if(stream  ==  null)  {  stream.close();  }  [BUGGY]            stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	stream.close();  if(stream  ==  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	296000	2
1775997	[BUG]  [BUGGY]  stream.close();  if(stream  ==  null)  {  stream.close();  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {            [BUGGY]  stream.close();  if(stream  ==  null)  {  stream.close();  }  [BUGGY]            stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	stream.close();  if(stream  ==  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	296000	2
1410344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	235058	2
1410345	[BUG]  [BUGGY]  stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	235058	2
1550504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(++i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	258418	2
1550505	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(++i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	258418	2
2241469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  >  0)  {  return;  }  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =(Shape)stream.readObject();  if(index  >  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	373579	2
2241470	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  >  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  >  0)  {  return;  }  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =(Shape)stream.readObject();  if(index  >  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	373579	2
1315742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    if(shape    ==    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	219291	2
1315743	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    if(shape    ==    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	219291	2
1410351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	235059	2
1410352	[BUG]  [BUGGY]  stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  5);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	235059	2
2249078	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  -  1);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  -  1);	  Shape    shape    =    getShape(index    *    2    -    1);    	compilable	  [FE]  AssertionFailedError	374847	2
2249079	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  -  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  -  1);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  -  1);	  Shape    shape    =    getShape(index    *    2    -    1);    	compilable	  [FE]  AssertionFailedError	374847	2
421250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj  ==  this)  {  if(obj!=  null)  {  return  super.equals(obj);  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this)  {  if(obj!=  null)  {  return  super.equals(obj);  }	  if(obj!=    null)    {    return    super.equals(obj);    }    	compilable	  [FE]  AssertionFailedError	70209	2
421251	[BUG]  [BUGGY]  if(obj  ==  this)  {  if(obj!=  null)  {  return  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj  ==  this)  {  if(obj!=  null)  {  return  super.equals(obj);  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this)  {  if(obj!=  null)  {  return  super.equals(obj);  }	  if(obj!=    null)    {    return    super.equals(obj);    }    	compilable	  [FE]  AssertionFailedError	70209	2
2249072	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  *  2  +  i);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  i);	  	compilable	  [FE]  AssertionFailedError	374846	2
2249073	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  i);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  *  2  +  i);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  i);	  	compilable	  [FE]  AssertionFailedError	374846	2
1449236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	241540	2
1449237	[BUG]  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	241540	2
1355954	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]            if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	225993	2
1355955	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]            if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	225993	2
1923560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();            [BUGGY]  if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]            int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	320594	2
1923561	[BUG]  [BUGGY]  if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();            [BUGGY]  if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]            int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	320594	2
420602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj!=  null)  {  if(!super.equals(obj))  return  false;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj!=  null)  {  if(!super.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	70101	2
420603	[BUG]  [BUGGY]  if(obj!=  null)  {  if(!super.equals(obj))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj!=  null)  {  if(!super.equals(obj))  return  false;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj!=  null)  {  if(!super.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	70101	2
420603	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj  ==  null)  {  if(!super.equals(obj))  return  true;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!super.equals(obj))  return  true;  }	  	compilable	  [FE]  AssertionFailedError	70101	2
420604	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!super.equals(obj))  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj  ==  null)  {  if(!super.equals(obj))  return  true;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!super.equals(obj))  return  true;  }	  	compilable	  [FE]  AssertionFailedError	70101	2
2249043	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  +  4);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  +  4);	  	compilable	  [FE]  AssertionFailedError	374841	2
2249044	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  4);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  +  4);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  +  4);	  	compilable	  [FE]  AssertionFailedError	374841	2
2202447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  double  shape  =(double)stream.readInt();  if(index!=  -1)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readInt();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	367075	2
2202448	[BUG]  [BUGGY]  double  shape  =(double)stream.readInt();  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  double  shape  =(double)stream.readInt();  if(index!=  -1)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readInt();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	367075	2
1410349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  4);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  4);	  	compilable	  [FE]  AssertionFailedError	235059	2
1410350	[BUG]  [BUGGY]  stream.writeInt(i  +  4);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  4);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  4);	  	compilable	  [FE]  AssertionFailedError	235059	2
1410350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  5);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  5);	  	compilable	  [FE]  AssertionFailedError	235059	2
1410351	[BUG]  [BUGGY]  stream.writeInt(i  +  5);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  5);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  5);	  	compilable	  [FE]  AssertionFailedError	235059	2
2202566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  stream.readFloat();  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	367095	2
2202567	[BUG]  [BUGGY]  stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  stream.readFloat();  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	367095	2
1355919	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  stream.writeInt(-i);  [BUGGY]            if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	stream.writeInt(-i);	  	compilable	  [FE]  AssertionFailedError	225987	2
1355920	[BUG]  [BUGGY]  stream.writeInt(-i);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);            [BUGGY]  stream.writeInt(-i);  [BUGGY]            if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(-i);	  	compilable	  [FE]  AssertionFailedError	225987	2
2241476	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  >=  0)  {  return;  }  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =(Shape)stream.readObject();  if(index  >=  0)  {  return;  }	  Shape    shape    =(Shape)stream.readObject();    if(index    <    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	373580	2
2241477	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  >=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  >=  0)  {  return;  }  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =(Shape)stream.readObject();  if(index  >=  0)  {  return;  }	  Shape    shape    =(Shape)stream.readObject();    if(index    <    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	373580	2
1550503	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(++i);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i);	  stream.writeInt(++i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	258418	2
1550504	[BUG]  [BUGGY]  stream.writeInt(++i);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(++i);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i);	  stream.writeInt(++i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	258418	2
1410320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  stream.writeInt(i    +    3);    if(shape!=    null)    {    stream.writeInt(i    +    1);    }    	compilable	  [FE]  AssertionFailedError	235054	2
1410321	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  stream.writeInt(i    +    3);    if(shape!=    null)    {    stream.writeInt(i    +    1);    }    	compilable	  [FE]  AssertionFailedError	235054	2
2249048	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  *  2  +  1);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2  +  1);	  Shape    shape    =    getShape(i    +    3);    	compilable	  [FE]  AssertionFailedError	374842	2
2249049	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2  +  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  *  2  +  1);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2  +  1);	  Shape    shape    =    getShape(i    +    3);    	compilable	  [FE]  AssertionFailedError	374842	2
1868053	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();            [BUGGY]  double  shape  =(double)stream.readDouble();  [BUGGY]            int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	double  shape  =(double)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	311343	2
1868054	[BUG]  [BUGGY]  double  shape  =(double)stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();            [BUGGY]  double  shape  =(double)stream.readDouble();  [BUGGY]            int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	double  shape  =(double)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	311343	2
1868054	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();            [BUGGY]  double  shape  =(float)stream.readDouble();  [BUGGY]            int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	double  shape  =(float)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	311343	2
1868055	[BUG]  [BUGGY]  double  shape  =(float)stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();            [BUGGY]  double  shape  =(float)stream.readDouble();  [BUGGY]            int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	double  shape  =(float)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	311343	2
1037065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  %  2  -  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  %  2  -  1);	  stream.writeInt(count    %    2);    	compilable	  [FE]  AssertionFailedError	172845	2
1037066	[BUG]  [BUGGY]  stream.writeInt(count  %  2  -  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  %  2  -  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  %  2  -  1);	  stream.writeInt(count    %    2);    	compilable	  [FE]  AssertionFailedError	172845	2
1037096	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  *  2  -  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  *  2  -  1);	  stream.writeInt(count    /    2    -    1);    	compilable	  [FE]  AssertionFailedError	172850	2
1037097	[BUG]  [BUGGY]  stream.writeInt(count  *  2  -  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();            [BUGGY]  stream.writeInt(count  *  2  -  1);  [BUGGY]            for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  *  2  -  1);	  stream.writeInt(count    /    2    -    1);    	compilable	  [FE]  AssertionFailedError	172850	2
2201990	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  <  0)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  <  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	366999	2
2201991	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  <  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  <  0)  {  return;  }  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  <  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	366999	2
2248898	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  *  3);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  3);	  Shape    shape    =    getShape(index    *    3);    	compilable	  [FE]  AssertionFailedError	374817	2
2248899	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  3);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  *  3);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  3);	  Shape    shape    =    getShape(index    *    3);    	compilable	  [FE]  AssertionFailedError	374817	2
1550277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	258380	2
1550278	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	258380	2
905091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {            [BUGGY]  stream.flush();  [BUGGY]            stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.flush();	  	compilable	  [FE]  AssertionFailedError	150849	2
905092	[BUG]  [BUGGY]  stream.flush();  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {            [BUGGY]  stream.flush();  [BUGGY]            stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.flush();	  	compilable	  [FE]  AssertionFailedError	150849	2
2014503	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {            [BUGGY]  int  types  =  stream.readInt();  [BUGGY]            if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  types  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	335751	2
2014504	[BUG]  [BUGGY]  int  types  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {            [BUGGY]  int  types  =  stream.readInt();  [BUGGY]            if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  types  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	335751	2
420603	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj  instanceof  ShapeList)  {  if(!super.equals(obj))  return  false;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  instanceof  ShapeList)  {  if(!super.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	70101	2
420604	[BUG]  [BUGGY]  if(obj  instanceof  ShapeList)  {  if(!super.equals(obj))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(obj  instanceof  ShapeList)  {  if(!super.equals(obj))  return  false;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  instanceof  ShapeList)  {  if(!super.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	70101	2
1550528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	258422	2
1550529	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	258422	2
1550529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	258422	2
1550530	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	258422	2
421245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(!(obj  instanceof  ShapeList))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	70208	2
421246	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]            public  boolean  equals(Object  obj)  {            [BUGGY]  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]            if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(!(obj  instanceof  ShapeList))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	70208	2
1550523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	258421	2
1550524	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	258421	2
2249078	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  *  2  -  1);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2  -  1);	  Shape    shape    =    getShape(index    *    2    -    1);    	compilable	  [FE]  AssertionFailedError	374847	2
2249079	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2  -  1);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(i  *  2  -  1);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2  -  1);	  Shape    shape    =    getShape(index    *    2    -    1);    	compilable	  [FE]  AssertionFailedError	374847	2
1455674	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	242613	2
1455675	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	242613	2
1455675	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	242613	2
1455676	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	242613	2
1455704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	242618	2
1455705	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	242618	2
2202566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  float  shape  =(float)stream.readFloat();  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	float  shape  =(float)stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	367095	2
2202567	[BUG]  [BUGGY]  float  shape  =(float)stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  float  shape  =(float)stream.readFloat();  [BUGGY]            }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	float  shape  =(float)stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	367095	2
1449229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	241539	2
1449230	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	241539	2
1449230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	241539	2
1449231	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	241539	2
1449231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	241539	2
1449232	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]            stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	241539	2
1410315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	235053	2
1410316	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {            [BUGGY]  stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	235053	2
1550282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	258381	2
1550283	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	258381	2
1550282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  +  4);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  4);	  	compilable	  [FE]  AssertionFailedError	258381	2
1550283	[BUG]  [BUGGY]  stream.writeInt(i  +  4);  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  stream.writeInt(i  +  4);  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  4);	  	compilable	  [FE]  AssertionFailedError	258381	2
1555532	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	259256	2
1555533	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	259256	2
1551608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	258602	2
1551609	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	258602	2
1551609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	258602	2
1551610	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]            private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);            [BUGGY]  if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]            SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	258602	2
2249072	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  *  2  +  0);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  0);	  	compilable	  [FE]  AssertionFailedError	374846	2
2249073	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  0);  [FE]  AssertionFailedError  [CONTEXT]            private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {            [BUGGY]  Shape  shape  =  getShape(index  *  2  +  0);  [BUGGY]            setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  0);	  	compilable	  [FE]  AssertionFailedError	374846	2
