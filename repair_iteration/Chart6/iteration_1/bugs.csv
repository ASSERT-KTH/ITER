bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  stream.readInt();  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readInt();		compilable	  [FE]  AssertionFailedError	49	2
290	[BUG]  [BUGGY]  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  stream.readInt();  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readInt();		compilable	  [FE]  AssertionFailedError	49	2
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  stream.readObject();  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.readObject();		compilable	  [FE]  AssertionFailedError	49	2
292	[BUG]  [BUGGY]  stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  stream.readObject();  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.readObject();		compilable	  [FE]  AssertionFailedError	49	2
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	32	2
188	[BUG]  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	32	2
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	32	2
189	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	32	2
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  ShapeList()  {  [BUGGY]    [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  <init>  [RETURN_TYPE]  ShapeList()  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	59	59	2	add	  	super();  	compilable	  [FE]  AssertionFailedError	1	2
4	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  public  ShapeList()  {  [BUGGY]    [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  <init>  [RETURN_TYPE]  ShapeList()  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	59	59	2	replace	  	super();  	compilable	  [FE]  AssertionFailedError	1	2
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  [BUGGY]  stream.defaultWriteObject();  [BUGGY]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.defaultWriteObject();		compilable	  [FE]  AssertionFailedError	20	2
116	[BUG]  [BUGGY]  stream.defaultWriteObject();  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  [BUGGY]  stream.defaultWriteObject();  [BUGGY]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.defaultWriteObject();		compilable	  [FE]  AssertionFailedError	20	2
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  super.hashCode();  [BUGGY]  return  super.hashCode();  }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	add	super.hashCode();		compilable	  [FE]  AssertionFailedError	18	2
104	[BUG]  [BUGGY]  super.hashCode();  [FE]  AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  super.hashCode();  [BUGGY]  return  super.hashCode();  }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	replace	super.hashCode();		compilable	  [FE]  AssertionFailedError	18	2
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  return  super.hashCode()  *  11;  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	add	return  super.hashCode()  *  11;	return  super.hashCode();  	compilable	  [FE]  AssertionFailedError	17	2
99	[BUG]  [BUGGY]  return  super.hashCode()  *  11;  [FE]  AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  return  super.hashCode()  *  11;  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	replace	return  super.hashCode()  *  11;	return  super.hashCode();  	compilable	  [FE]  AssertionFailedError	17	2
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	for(int  i  =  1;  i  <  count;  i++)  {	for  (int  i  =  0;  i  <  count;  i++)  {  	compilable	  [FE]  AssertionFailedError	42	2
249	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	for(int  i  =  1;  i  <  count;  i++)  {	for  (int  i  =  0;  i  <  count;  i++)  {  	compilable	  [FE]  AssertionFailedError	42	2
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  Shape  getShape(int  index)  {  [BUGGY]  return(Shape)get(index  -  1);  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)get(index  -  1);	return  (Shape)  get(index);  	compilable	  [FE]  AssertionFailedError	15	2
87	[BUG]  [BUGGY]  return(Shape)get(index  -  1);  [FE]  AssertionFailedError  [CONTEXT]  public  Shape  getShape(int  index)  {  [BUGGY]  return(Shape)get(index  -  1);  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)get(index  -  1);	return  (Shape)  get(index);  	compilable	  [FE]  AssertionFailedError	15	2
229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  [BUGGY]  stream.defaultReadObject();  [BUGGY]  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	stream.defaultReadObject();		compilable	  [FE]  AssertionFailedError	39	2
230	[BUG]  [BUGGY]  stream.defaultReadObject();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  [BUGGY]  stream.defaultReadObject();  [BUGGY]  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	stream.defaultReadObject();		compilable	  [FE]  AssertionFailedError	39	2
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  [BUGGY]  SerialUtilities.readShape(stream);  [BUGGY]  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	SerialUtilities.readShape(stream);		compilable	  [FE]  AssertionFailedError	39	2
232	[BUG]  [BUGGY]  SerialUtilities.readShape(stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  [BUGGY]  SerialUtilities.readShape(stream);  [BUGGY]  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	SerialUtilities.readShape(stream);		compilable	  [FE]  AssertionFailedError	39	2
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	36	2
212	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	36	2
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	36	2
213	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	36	2
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	36	2
214	[BUG]  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	36	2
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  int  count  =  stream.readInt()  -  1;  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	int  count  =  stream.readInt()  -  1;	int  count  =  stream.readInt();  	compilable	  [FE]  AssertionFailedError	40	2
237	[BUG]  [BUGGY]  int  count  =  stream.readInt()  -  1;  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  int  count  =  stream.readInt()  -  1;  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	int  count  =  stream.readInt()  -  1;	int  count  =  stream.readInt();  	compilable	  [FE]  AssertionFailedError	40	2
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(i);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(i);		compilable	  [FE]  AssertionFailedError	28	2
164	[BUG]  [BUGGY]  stream.writeInt(i);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(i);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i);		compilable	  [FE]  AssertionFailedError	28	2
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  if(shape  ==  null)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape  ==  null)  {	if  (shape  !=  null)  {  	compilable	  [FE]  AssertionFailedError	29	2
171	[BUG]  [BUGGY]  if(shape  ==  null)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  if(shape  ==  null)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape  ==  null)  {	if  (shape  !=  null)  {  	compilable	  [FE]  AssertionFailedError	29	2
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  [BUGGY]  int  count  =  size()  -  1;  [BUGGY]  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	int  count  =  size()  -  1;	int  count  =  size();  	compilable	  [FE]  AssertionFailedError	21	2
122	[BUG]  [BUGGY]  int  count  =  size()  -  1;  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  [BUGGY]  int  count  =  size()  -  1;  [BUGGY]  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	int  count  =  size()  -  1;	int  count  =  size();  	compilable	  [FE]  AssertionFailedError	21	2
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	int  shape  =  stream.readInt();		compilable	  [FE]  AssertionFailedError	47	2
279	[BUG]  [BUGGY]  int  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	int  shape  =  stream.readInt();		compilable	  [FE]  AssertionFailedError	47	2
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }	setShape(index,  SerialUtilities.readShape(stream));  	compilable	  [FE]  AssertionFailedError	48	2
285	[BUG]  [BUGGY]  if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }	setShape(index,  SerialUtilities.readShape(stream));  	compilable	  [FE]  AssertionFailedError	48	2
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.readInt();  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	stream.readInt();		compilable	  [FE]  AssertionFailedError	45	2
266	[BUG]  [BUGGY]  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.readInt();  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	stream.readInt();		compilable	  [FE]  AssertionFailedError	45	2
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.readObject();  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	stream.readObject();		compilable	  [FE]  AssertionFailedError	45	2
268	[BUG]  [BUGGY]  stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.readObject();  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	stream.readObject();		compilable	  [FE]  AssertionFailedError	45	2
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	30	2
176	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	30	2
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	30	2
177	[BUG]  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	30	2
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(0);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(0);	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError	35	2
207	[BUG]  [BUGGY]  stream.writeInt(0);  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(0);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(0);	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError	35	2
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  [BUGGY]    [BUGGY]  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	  	SerialUtilities.writeShape(shape,  stream);  	compilable	  [FE]  AssertionFailedError	33	2
196	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  [BUGGY]    [BUGGY]  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	  	SerialUtilities.writeShape(shape,  stream);  	compilable	  [FE]  AssertionFailedError	33	2
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  [BUGGY]  if(obj  ==  this  ||!(obj  instanceof  ShapeList))  {  [BUGGY]  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this  ||!(obj  instanceof  ShapeList))  {	if  (obj  ==  this)  {  	compilable	  [FE]  AssertionFailedError	9	2
51	[BUG]  [BUGGY]  if(obj  ==  this  ||!(obj  instanceof  ShapeList))  {  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  [BUGGY]  if(obj  ==  this  ||!(obj  instanceof  ShapeList))  {  [BUGGY]  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this  ||!(obj  instanceof  ShapeList))  {	if  (obj  ==  this)  {  	compilable	  [FE]  AssertionFailedError	9	2
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  [BUGGY]  stream.writeInt(-1);  [BUGGY]  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	22	2
130	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  [BUGGY]  stream.writeInt(-1);  [BUGGY]  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	22	2
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  if(index!=  0)  {  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index!=  0)  {	if  (index  !=  -1)  {  	compilable	  [FE]  AssertionFailedError	46	2
273	[BUG]  [BUGGY]  if(index!=  0)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  if(index!=  0)  {  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index!=  0)  {	if  (index  !=  -1)  {  	compilable	  [FE]  AssertionFailedError	46	2
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  [BUGGY]  if(!(obj  instanceof  ShapeList)&&  super.equals(obj))  {  [BUGGY]  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&  super.equals(obj))  {	if  (!(obj  instanceof  ShapeList))  {  	compilable	  [FE]  AssertionFailedError	11	2
63	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&  super.equals(obj))  {  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  [BUGGY]  if(!(obj  instanceof  ShapeList)&&  super.equals(obj))  {  [BUGGY]  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&  super.equals(obj))  {	if  (!(obj  instanceof  ShapeList))  {  	compilable	  [FE]  AssertionFailedError	11	2
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  [BUGGY]  stream.writeInt(count  -  1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  -  1);	stream.writeInt(count);  	compilable	  [FE]  AssertionFailedError	23	2
134	[BUG]  [BUGGY]  stream.writeInt(count  -  1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  [BUGGY]  stream.writeInt(count  -  1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  -  1);	stream.writeInt(count);  	compilable	  [FE]  AssertionFailedError	23	2
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  [BUGGY]  stream.writeInt(count  +  1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  +  1);	stream.writeInt(count);  	compilable	  [FE]  AssertionFailedError	23	2
135	[BUG]  [BUGGY]  stream.writeInt(count  +  1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  [BUGGY]  stream.writeInt(count  +  1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  +  1);	stream.writeInt(count);  	compilable	  [FE]  AssertionFailedError	23	2
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	for(int  i  =  1;  i  <  count;  i++)  {	for  (int  i  =  0;  i  <  count;  i++)  {  	compilable	  [FE]  AssertionFailedError	25	2
147	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  [BUGGY]  for(int  i  =  1;  i  <  count;  i++)  {  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	for(int  i  =  1;  i  <  count;  i++)  {	for  (int  i  =  0;  i  <  count;  i++)  {  	compilable	  [FE]  AssertionFailedError	25	2
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  [BUGGY]  stream.writeInt(-1);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	34	2
201	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  [BUGGY]  stream.writeInt(-1);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	34	2
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.close();  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	stream.close();		compilable	  [FE]  AssertionFailedError	45	2
268	[BUG]  [BUGGY]  stream.close();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.close();  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	stream.close();		compilable	  [FE]  AssertionFailedError	45	2
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  Shape  getShape(int  index)  {  [BUGGY]  return(Shape)get(index  +  1);  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)get(index  +  1);	return  (Shape)  get(index);  	compilable	  [FE]  AssertionFailedError	15	2
87	[BUG]  [BUGGY]  return(Shape)get(index  +  1);  [FE]  AssertionFailedError  [CONTEXT]  public  Shape  getShape(int  index)  {  [BUGGY]  return(Shape)get(index  +  1);  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)get(index  +  1);	return  (Shape)  get(index);  	compilable	  [FE]  AssertionFailedError	15	2
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	int  shape  =  stream.readInt();		compilable	  [FE]  AssertionFailedError	43	2
254	[BUG]  [BUGGY]  int  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	int  shape  =  stream.readInt();		compilable	  [FE]  AssertionFailedError	43	2
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  int  index  =  stream.readInt()  -  1;  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  index  =  stream.readInt()  -  1;	int  index  =  stream.readInt();  	compilable	  [FE]  AssertionFailedError	44	2
261	[BUG]  [BUGGY]  int  index  =  stream.readInt()  -  1;  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  int  index  =  stream.readInt()  -  1;  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  index  =  stream.readInt()  -  1;	int  index  =  stream.readInt();  	compilable	  [FE]  AssertionFailedError	44	2
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeObject(shape);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeObject(shape);		compilable	  [FE]  AssertionFailedError	36	2
214	[BUG]  [BUGGY]  stream.writeObject(shape);  [FE]  AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeObject(shape);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeObject(shape);		compilable	  [FE]  AssertionFailedError	36	2
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-1);	stream.writeInt(i);  	compilable	  [FE]  AssertionFailedError	31	2
183	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-1);	stream.writeInt(i);  	compilable	  [FE]  AssertionFailedError	31	2
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(-i);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-i);		compilable	  [FE]  AssertionFailedError	32	2
190	[BUG]  [BUGGY]  stream.writeInt(-i);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(-i);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-i);		compilable	  [FE]  AssertionFailedError	32	2
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  return  super.hashCode()  +  1;  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	add	return  super.hashCode()  +  1;	return  super.hashCode();  	compilable	  [FE]  AssertionFailedError	17	2
99	[BUG]  [BUGGY]  return  super.hashCode()  +  1;  [FE]  AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  return  super.hashCode()  +  1;  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	replace	return  super.hashCode()  +  1;	return  super.hashCode();  	compilable	  [FE]  AssertionFailedError	17	2
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  [BUGGY]  stream.writeInt(-1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(-1);	stream.writeInt(count);  	compilable	  [FE]  AssertionFailedError	23	2
135	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  [BUGGY]  stream.writeInt(-1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(-1);	stream.writeInt(count);  	compilable	  [FE]  AssertionFailedError	23	2
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  stream.readObject();  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	stream.readObject();		compilable	  [FE]  AssertionFailedError	47	2
278	[BUG]  [BUGGY]  stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  stream.readObject();  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	stream.readObject();		compilable	  [FE]  AssertionFailedError	47	2
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  Shape  shape  =  getShape(index);  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	Shape  shape  =  getShape(index);		compilable	  [FE]  AssertionFailedError	47	2
279	[BUG]  [BUGGY]  Shape  shape  =  getShape(index);  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  Shape  shape  =  getShape(index);  [BUGGY]  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	Shape  shape  =  getShape(index);		compilable	  [FE]  AssertionFailedError	47	2
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  [BUGGY]  stream.writeInt(-1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	26	2
152	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  [BUGGY]  stream.writeInt(-1);  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	26	2
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]  return  super.equals(obj)&&  super.equals(obj);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	111	111	2	add	return  super.equals(obj)&&  super.equals(obj);	return  super.equals(obj);  	compilable	  [FE]  AssertionFailedError	13	2
75	[BUG]  [BUGGY]  return  super.equals(obj)&&  super.equals(obj);  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]  return  super.equals(obj)&&  super.equals(obj);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	111	111	2	replace	return  super.equals(obj)&&  super.equals(obj);	return  super.equals(obj);  	compilable	  [FE]  AssertionFailedError	13	2
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  [BUGGY]  if(obj  ==  null)return  false;  if(obj  instanceof  ShapeList)  {  return  true;  }  [BUGGY]  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	1	add	if(obj  ==  null)return  false;  if(obj  instanceof  ShapeList)  {  return  true;  }		compilable	  [FE]  AssertionFailedError	12	2
69	[BUG]  [BUGGY]  if(obj  ==  null)return  false;  if(obj  instanceof  ShapeList)  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  [BUGGY]  if(obj  ==  null)return  false;  if(obj  instanceof  ShapeList)  {  return  true;  }  [BUGGY]  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	1	replace	if(obj  ==  null)return  false;  if(obj  instanceof  ShapeList)  {  return  true;  }		compilable	  [FE]  AssertionFailedError	12	2
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  {  [BUGGY]  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  {	if  (!(obj  instanceof  ShapeList))  {  	compilable	  [FE]  AssertionFailedError	11	2
63	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  {  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  {  [BUGGY]  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  {	if  (!(obj  instanceof  ShapeList))  {  	compilable	  [FE]  AssertionFailedError	11	2
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	int  shape  =  stream.readInt();		compilable	  [FE]  AssertionFailedError	41	2
242	[BUG]  [BUGGY]  int  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	int  shape  =  stream.readInt();		compilable	  [FE]  AssertionFailedError	41	2
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  stream.defaultReadObject();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	stream.defaultReadObject();		compilable	  [FE]  AssertionFailedError	41	2
243	[BUG]  [BUGGY]  stream.defaultReadObject();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  stream.defaultReadObject();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	stream.defaultReadObject();		compilable	  [FE]  AssertionFailedError	41	2
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  stream.close();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	stream.close();		compilable	  [FE]  AssertionFailedError	41	2
244	[BUG]  [BUGGY]  stream.close();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  stream.close();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	stream.close();		compilable	  [FE]  AssertionFailedError	41	2
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  stream.writeInt(i);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	stream.writeInt(i);		compilable	  [FE]  AssertionFailedError	30	2
176	[BUG]  [BUGGY]  stream.writeInt(i);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  stream.writeInt(i);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(i);		compilable	  [FE]  AssertionFailedError	30	2
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  stream.writeInt(-1);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	30	2
178	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  stream.writeInt(-1);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	30	2
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  [BUGGY]  if(obj  ==  this)return  true;  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this)return  true;  if(!(obj  instanceof  ShapeList))  {  return  false;  }		compilable	  [FE]  AssertionFailedError	10	2
56	[BUG]  [BUGGY]  if(obj  ==  this)return  true;  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  [BUGGY]  if(obj  ==  this)return  true;  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this)return  true;  if(!(obj  instanceof  ShapeList))  {  return  false;  }		compilable	  [FE]  AssertionFailedError	10	2
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	28	2
165	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	28	2
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(-i);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(-i);		compilable	  [FE]  AssertionFailedError	28	2
166	[BUG]  [BUGGY]  stream.writeInt(-i);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(-i);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(-i);		compilable	  [FE]  AssertionFailedError	28	2
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  Shape  shape  =  getShape(index);  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index);		compilable	  [FE]  AssertionFailedError	49	2
290	[BUG]  [BUGGY]  Shape  shape  =  getShape(index);  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  Shape  shape  =  getShape(index);  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index);		compilable	  [FE]  AssertionFailedError	49	2
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  stream.close();  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.close();		compilable	  [FE]  AssertionFailedError	49	2
291	[BUG]  [BUGGY]  stream.close();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  [BUGGY]  stream.close();  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.close();		compilable	  [FE]  AssertionFailedError	49	2
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  Shape  shape  =  getShape(i);  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	Shape  shape  =  getShape(i);		compilable	  [FE]  AssertionFailedError	45	2
266	[BUG]  [BUGGY]  Shape  shape  =  getShape(i);  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  Shape  shape  =  getShape(i);  [BUGGY]  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	Shape  shape  =  getShape(i);		compilable	  [FE]  AssertionFailedError	45	2
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	20	2
118	[BUG]  [BUGGY]  stream.writeInt(-1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  [BUGGY]  stream.writeInt(-1);  [BUGGY]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-1);		compilable	  [FE]  AssertionFailedError	20	2
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  [BUGGY]  int  count  =  size()  /  2;  [BUGGY]  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	int  count  =  size()  /  2;	int  count  =  size();  	compilable	  [FE]  AssertionFailedError	21	2
123	[BUG]  [BUGGY]  int  count  =  size()  /  2;  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  [BUGGY]  int  count  =  size()  /  2;  [BUGGY]  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	int  count  =  size()  /  2;	int  count  =  size();  	compilable	  [FE]  AssertionFailedError	21	2
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  [BUGGY]  boolean  shape  =  stream.readBoolean();  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	boolean  shape  =  stream.readBoolean();		compilable	  [FE]  AssertionFailedError	43	2
255	[BUG]  [BUGGY]  boolean  shape  =  stream.readBoolean();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  [BUGGY]  boolean  shape  =  stream.readBoolean();  [BUGGY]  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	boolean  shape  =  stream.readBoolean();		compilable	  [FE]  AssertionFailedError	43	2
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  [BUGGY]  if(obj  ==  null)  {  [BUGGY]  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {	if  (obj  ==  this)  {  	compilable	  [FE]  AssertionFailedError	9	2
51	[BUG]  [BUGGY]  if(obj  ==  null)  {  [FE]  AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  obj)  {  [BUGGY]  if(obj  ==  null)  {  [BUGGY]  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {	if  (obj  ==  this)  {  	compilable	  [FE]  AssertionFailedError	9	2
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	34	2
201	[BUG]  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError	34	2
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  boolean  shape  =  stream.readBoolean();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	boolean  shape  =  stream.readBoolean();		compilable	  [FE]  AssertionFailedError	41	2
243	[BUG]  [BUGGY]  boolean  shape  =  stream.readBoolean();  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  [BUGGY]  boolean  shape  =  stream.readBoolean();  [BUGGY]  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	boolean  shape  =  stream.readBoolean();		compilable	  [FE]  AssertionFailedError	41	2
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  if(index  ==  -1)  {  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  ==  -1)  {	if  (index  !=  -1)  {  	compilable	  [FE]  AssertionFailedError	46	2
273	[BUG]  [BUGGY]  if(index  ==  -1)  {  [FE]  AssertionFailedError  [CONTEXT]  private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  [BUGGY]  if(index  ==  -1)  {  [BUGGY]  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  ==  -1)  {	if  (index  !=  -1)  {  	compilable	  [FE]  AssertionFailedError	46	2
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);	stream.writeInt(i);  	compilable	  [FE]  AssertionFailedError	31	2
183	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);	stream.writeInt(i);  	compilable	  [FE]  AssertionFailedError	31	2
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);		compilable	  [FE]  AssertionFailedError	28	2
166	[BUG]  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);  [FE]  AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);  [BUGGY]  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);		compilable	  [FE]  AssertionFailedError	28	2
