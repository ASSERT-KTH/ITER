bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
721	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  int  size  =  size()  -  1;  [BUGGY]    stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	int  size  =  size()  -  1;	  	compilable	  [FE]  AssertionFailedError	121	2
722	[BUG]  [BUGGY]  int  size  =  size()  -  1;  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  int  size  =  size()  -  1;  [BUGGY]    stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	int  size  =  size()  -  1;	  	compilable	  [FE]  AssertionFailedError	121	2
1382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  SerialUtilities.readPaint(stream);  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	SerialUtilities.readPaint(stream);	  	compilable	  [FE]  AssertionFailedError	231	2
1383	[BUG]  [BUGGY]  SerialUtilities.readPaint(stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  SerialUtilities.readPaint(stream);  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	SerialUtilities.readPaint(stream);	  	compilable	  [FE]  AssertionFailedError	231	2
1201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1202	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1203	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	211	2
1264	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	211	2
1735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  Shape  shape  =  getShape(index  +  1);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  1);	  stream.readInt();    	compilable	  [FE]  AssertionFailedError	290	2
1736	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  1);  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  Shape  shape  =  getShape(index  +  1);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  1);	  stream.readInt();    	compilable	  [FE]  AssertionFailedError	290	2
1736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  Shape  shape  =  getShape(i);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i);	  stream.readInt();    	compilable	  [FE]  AssertionFailedError	290	2
1737	[BUG]  [BUGGY]  Shape  shape  =  getShape(i);  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  Shape  shape  =  getShape(i);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i);	  stream.readInt();    	compilable	  [FE]  AssertionFailedError	290	2
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(!(obj  instanceof  ShapeList))  {  [BUGGY]    return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(!(obj  instanceof  ShapeList))  {	  if(obj    ==    this    ||!(obj    instanceof    ShapeList))    {    	compilable	  [FE]  AssertionFailedError	51	2
303	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList))  {  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(!(obj  instanceof  ShapeList))  {  [BUGGY]    return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(!(obj  instanceof  ShapeList))  {	  if(obj    ==    this    ||!(obj    instanceof    ShapeList))    {    	compilable	  [FE]  AssertionFailedError	51	2
1123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	188	2
1124	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	188	2
1124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	188	2
1125	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	188	2
1197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	200	2
1198	[BUG]  [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	200	2
1232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(1);  [BUGGY]    }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	206	2
1233	[BUG]  [BUGGY]  stream.writeInt(1);  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(1);  [BUGGY]    }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	206	2
1088	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	182	2
1089	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	182	2
1089	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  stream.writeInt(i  +  2);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);	  	compilable	  [FE]  AssertionFailedError	182	2
1090	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  stream.writeInt(i  +  2);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);	  	compilable	  [FE]  AssertionFailedError	182	2
446	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }    [BUGGY]  return  super.equals(obj)||  super.equals(obj);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	111	111	2	add	return  super.equals(obj)||  super.equals(obj);	  return    super.equals(obj)&&    super.equals(obj);    	compilable	  [FE]  AssertionFailedError	75	2
447	[BUG]  [BUGGY]  return  super.equals(obj)||  super.equals(obj);  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }    [BUGGY]  return  super.equals(obj)||  super.equals(obj);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	111	111	2	replace	return  super.equals(obj)||  super.equals(obj);	  return    super.equals(obj)&&    super.equals(obj);    	compilable	  [FE]  AssertionFailedError	75	2
1730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =(Shape)stream.readObject();	  	compilable	  [FE]  AssertionFailedError	289	2
1731	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =(Shape)stream.readObject();	  	compilable	  [FE]  AssertionFailedError	289	2
771	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  stream.writeInt(0);  [BUGGY]    int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError	129	2
772	[BUG]  [BUGGY]  stream.writeInt(0);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  stream.writeInt(0);  [BUGGY]    int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError	129	2
1279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	214	2
1280	[BUG]  [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	214	2
903	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);    [BUGGY]  stream.writeInt(-2);  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	151	2
904	[BUG]  [BUGGY]  stream.writeInt(-2);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);    [BUGGY]  stream.writeInt(-2);  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	151	2
1664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  stream.readInt();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	stream.readInt();	  	compilable	  [FE]  AssertionFailedError	278	2
1665	[BUG]  [BUGGY]  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  stream.readInt();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	stream.readInt();	  	compilable	  [FE]  AssertionFailedError	278	2
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)this.get(index  -  1);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)this.get(index  -  1);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
519	[BUG]  [BUGGY]  return(Shape)this.get(index  -  1);  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)this.get(index  -  1);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)this.get(index  -  1);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();    [BUGGY]  stream.writeInt(count  -  2);  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  -  2);	  stream.writeInt(count    -    1);    	compilable	  [FE]  AssertionFailedError	134	2
801	[BUG]  [BUGGY]  stream.writeInt(count  -  2);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();    [BUGGY]  stream.writeInt(count  -  2);  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  -  2);	  stream.writeInt(count    -    1);    	compilable	  [FE]  AssertionFailedError	134	2
1117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	187	2
1118	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	187	2
1119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	187	2
1120	[BUG]  [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	187	2
1196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	200	2
1197	[BUG]  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	200	2
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }    [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  {  [BUGGY]    return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  {	  if(!(obj    instanceof    ShapeList)&&    super.equals(obj))    {    	compilable	  [FE]  AssertionFailedError	63	2
375	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  {  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }    [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  {  [BUGGY]    return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  {	  if(!(obj    instanceof    ShapeList)&&    super.equals(obj))    {    	compilable	  [FE]  AssertionFailedError	63	2
1094	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  stream.writeInt(0);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(0);	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	183	2
1095	[BUG]  [BUGGY]  stream.writeInt(0);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  stream.writeInt(0);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(0);	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	183	2
1586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	Shape  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	265	2
1587	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	265	2
1587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	Shape  shape  =(Shape)stream.readObject();	  	compilable	  [FE]  AssertionFailedError	265	2
1588	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	Shape  shape  =(Shape)stream.readObject();	  	compilable	  [FE]  AssertionFailedError	265	2
590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  int  hashCode()  {    [BUGGY]  return  super.hashCode()  *  7;  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	add	return  super.hashCode()  *  7;	  return    super.hashCode()    *    11;    	compilable	  [FE]  AssertionFailedError	99	2
591	[BUG]  [BUGGY]  return  super.hashCode()  *  7;  [FE]  AssertionFailedError  [CONTEXT]    public  int  hashCode()  {    [BUGGY]  return  super.hashCode()  *  7;  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	replace	return  super.hashCode()  *  7;	  return    super.hashCode()    *    11;    	compilable	  [FE]  AssertionFailedError	99	2
1665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	278	2
1666	[BUG]  [BUGGY]  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  ;  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  if(index!=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	278	2
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(obj  ==  null)  {  return  false;  }  [BUGGY]    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	55	2
326	[BUG]  [BUGGY]  if(obj  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(obj  ==  null)  {  return  false;  }  [BUGGY]    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	55	2
326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(obj  ==  this)  {  return  false;  }  [BUGGY]    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	55	2
327	[BUG]  [BUGGY]  if(obj  ==  this)  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(obj  ==  this)  {  return  false;  }  [BUGGY]    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this)  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	55	2
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)this.get(index  +  1);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)this.get(index  +  1);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
519	[BUG]  [BUGGY]  return(Shape)this.get(index  +  1);  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)this.get(index  +  1);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)this.get(index  +  1);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
1047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	175	2
1048	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	175	2
1442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  int  shape  =(int)stream.readInt();  [BUGGY]    int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	int  shape  =(int)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	241	2
1443	[BUG]  [BUGGY]  int  shape  =(int)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  int  shape  =(int)stream.readInt();  [BUGGY]    int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	int  shape  =(int)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	241	2
722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]    stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	stream.writeInt(size()  -  1);	  	compilable	  [FE]  AssertionFailedError	121	2
723	[BUG]  [BUGGY]  stream.writeInt(size()  -  1);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]    stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	stream.writeInt(size()  -  1);	  	compilable	  [FE]  AssertionFailedError	121	2
1484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();    [BUGGY]  Shape  shape  =  getShape(stream.readInt());  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	Shape  shape  =  getShape(stream.readInt());	  	compilable	  [FE]  AssertionFailedError	248	2
1485	[BUG]  [BUGGY]  Shape  shape  =  getShape(stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();    [BUGGY]  Shape  shape  =  getShape(stream.readInt());  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	Shape  shape  =  getShape(stream.readInt());	  	compilable	  [FE]  AssertionFailedError	248	2
1485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();    [BUGGY]  stream.readObject();  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	stream.readObject();	  	compilable	  [FE]  AssertionFailedError	248	2
1486	[BUG]  [BUGGY]  stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();    [BUGGY]  stream.readObject();  [BUGGY]    int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	stream.readObject();	  	compilable	  [FE]  AssertionFailedError	248	2
589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  int  hashCode()  {    [BUGGY]  return  super.hashCode()  *  11  +  getClass().hashCode();  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	add	return  super.hashCode()  *  11  +  getClass().hashCode();	  return    super.hashCode()    *    11;    	compilable	  [FE]  AssertionFailedError	99	2
590	[BUG]  [BUGGY]  return  super.hashCode()  *  11  +  getClass().hashCode();  [FE]  AssertionFailedError  [CONTEXT]    public  int  hashCode()  {    [BUGGY]  return  super.hashCode()  *  11  +  getClass().hashCode();  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	replace	return  super.hashCode()  *  11  +  getClass().hashCode();	  return    super.hashCode()    *    11;    	compilable	  [FE]  AssertionFailedError	99	2
1664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  stream.close();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	stream.close();	  	compilable	  [FE]  AssertionFailedError	278	2
1665	[BUG]  [BUGGY]  stream.close();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  stream.close();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	stream.close();	  	compilable	  [FE]  AssertionFailedError	278	2
1627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index!=  -1)  {  return;  }  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	272	2
1628	[BUG]  [BUGGY]  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index!=  -1)  {  return;  }  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	272	2
1628	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	Shape  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	272	2
1629	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	272	2
1665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  boolean  shape  =  stream.readBoolean();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	boolean  shape  =  stream.readBoolean();	  	compilable	  [FE]  AssertionFailedError	278	2
1666	[BUG]  [BUGGY]  boolean  shape  =  stream.readBoolean();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  boolean  shape  =  stream.readBoolean();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	boolean  shape  =  stream.readBoolean();	  	compilable	  [FE]  AssertionFailedError	278	2
517	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)get(index  *  2);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)get(index  *  2);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
518	[BUG]  [BUGGY]  return(Shape)get(index  *  2);  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)get(index  *  2);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)get(index  *  2);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
1280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	214	2
1281	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	214	2
1412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  final  int  shape  =  stream.readInt();  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  int  shape  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	236	2
1413	[BUG]  [BUGGY]  final  int  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  final  int  shape  =  stream.readInt();  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  int  shape  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	236	2
1413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  int  shape  =  stream.readInt()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	int  shape  =  stream.readInt()  -  1;	  	compilable	  [FE]  AssertionFailedError	236	2
1414	[BUG]  [BUGGY]  int  shape  =  stream.readInt()  -  1;  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  int  shape  =  stream.readInt()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	int  shape  =  stream.readInt()  -  1;	  	compilable	  [FE]  AssertionFailedError	236	2
1731	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  stream.defaultReadObject();  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	stream.defaultReadObject();	  	compilable	  [FE]  AssertionFailedError	289	2
1732	[BUG]  [BUGGY]  stream.defaultReadObject();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  stream.defaultReadObject();  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	stream.defaultReadObject();	  	compilable	  [FE]  AssertionFailedError	289	2
1202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1203	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	170	2
1017	[BUG]  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	170	2
1659	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  stream.defaultReadObject();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	stream.defaultReadObject();	  	compilable	  [FE]  AssertionFailedError	277	2
1660	[BUG]  [BUGGY]  stream.defaultReadObject();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  stream.defaultReadObject();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	stream.defaultReadObject();	  	compilable	  [FE]  AssertionFailedError	277	2
1628	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index!=  0)  {  return;  }  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index!=  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	272	2
1629	[BUG]  [BUGGY]  if(index!=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index!=  0)  {  return;  }  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index!=  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	272	2
1124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	188	2
1125	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {    [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	188	2
1555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  shape  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	260	2
1556	[BUG]  [BUGGY]  int  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  shape  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	260	2
1556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  int  shape  =  stream.readInt()  -  1;  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  shape  =  stream.readInt()  -  1;	  	compilable	  [FE]  AssertionFailedError	260	2
1557	[BUG]  [BUGGY]  int  shape  =  stream.readInt()  -  1;  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  int  shape  =  stream.readInt()  -  1;  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  shape  =  stream.readInt()  -  1;	  	compilable	  [FE]  AssertionFailedError	260	2
771	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  stream.writeInt(-2);  [BUGGY]    int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	129	2
772	[BUG]  [BUGGY]  stream.writeInt(-2);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();    [BUGGY]  stream.writeInt(-2);  [BUGGY]    int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	129	2
1665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  float  shape  =  stream.readFloat();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	float  shape  =  stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	278	2
1666	[BUG]  [BUGGY]  float  shape  =  stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  float  shape  =  stream.readFloat();  [BUGGY]    if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	float  shape  =  stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	278	2
1634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index  <  -1)  {  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  -1)  {	  if(index!=    0)    {    	compilable	  [FE]  AssertionFailedError	273	2
1635	[BUG]  [BUGGY]  if(index  <  -1)  {  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();    [BUGGY]  if(index  <  -1)  {  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  -1)  {	  if(index!=    0)    {    	compilable	  [FE]  AssertionFailedError	273	2
1376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  if(stream!=  null)  {  stream.defaultReadObject();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream!=  null)  {  stream.defaultReadObject();  }  else  {  throw  new  IllegalStateException( " ");  }	  stream.defaultReadObject();    	compilable	  [FE]  AssertionFailedError	230	2
1377	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.defaultReadObject();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  if(stream!=  null)  {  stream.defaultReadObject();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream!=  null)  {  stream.defaultReadObject();  }  else  {  throw  new  IllegalStateException( " ");  }	  stream.defaultReadObject();    	compilable	  [FE]  AssertionFailedError	230	2
369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }    [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]    return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	62	2
370	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }    [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]    return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)||(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	62	2
1370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream!=  null)  {  stream.close();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  AssertionFailedError	229	2
1371	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream!=  null)  {  stream.close();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  AssertionFailedError	229	2
1371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream!=  null)  {  stream.close();  }  else  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	229	2
1372	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {    [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]    stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream!=  null)  {  stream.close();  }  else  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	229	2
1233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(2);  [BUGGY]    }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	206	2
1234	[BUG]  [BUGGY]  stream.writeInt(2);  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(2);  [BUGGY]    }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	206	2
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {    [BUGGY]  stream.writeInt(0);  [BUGGY]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError	117	2
700	[BUG]  [BUGGY]  stream.writeInt(0);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {    [BUGGY]  stream.writeInt(0);  [BUGGY]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError	117	2
1730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  SerialUtilities.readShape(stream);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	289	2
1731	[BUG]  [BUGGY]  SerialUtilities.readShape(stream);  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  SerialUtilities.readShape(stream);  [BUGGY]    setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	289	2
974	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(i  +  1);	  	compilable	  [FE]  AssertionFailedError	163	2
975	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i  +  1);	  	compilable	  [FE]  AssertionFailedError	163	2
517	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)get(index  *  1);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)get(index  *  1);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
518	[BUG]  [BUGGY]  return(Shape)get(index  *  1);  [FE]  AssertionFailedError  [CONTEXT]    public  Shape  getShape(int  index)  {    [BUGGY]  return(Shape)get(index  *  1);  [BUGGY]    }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)get(index  *  1);	  return(Shape)get(index    -    1);    	compilable	  [FE]  AssertionFailedError	87	2
1167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(i);  }  [BUGGY]    }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	195	2
1168	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(i);  }  [BUGGY]    }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	195	2
1197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(i);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError	200	2
1198	[BUG]  [BUGGY]  stream.writeInt(i);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(i);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError	200	2
1413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  int  size  =  stream.readInt();  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	int  size  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	236	2
1414	[BUG]  [BUGGY]  int  size  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();    [BUGGY]  int  size  =  stream.readInt();  [BUGGY]    for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	int  size  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	236	2
1262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(-2);  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	211	2
1263	[BUG]  [BUGGY]  stream.writeInt(-2);  [FE]  AssertionFailedError  [CONTEXT]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {    [BUGGY]  stream.writeInt(-2);  [BUGGY]    stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	211	2
686	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {    [BUGGY]  if(stream!=  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	if(stream!=  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	115	2
687	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {    [BUGGY]  if(stream!=  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]    stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	if(stream!=  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	115	2
1016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape!=  null)  {  return;  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	170	2
1017	[BUG]  [BUGGY]  if(shape!=  null)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape!=  null)  {  return;  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	170	2
1017	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape!=  null)  {  continue;  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  continue;  }	  	compilable	  [FE]  AssertionFailedError	170	2
1018	[BUG]  [BUGGY]  if(shape!=  null)  {  continue;  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape!=  null)  {  continue;  }  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  continue;  }	  	compilable	  [FE]  AssertionFailedError	170	2
1202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(-i);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-i);	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1203	[BUG]  [BUGGY]  stream.writeInt(-i);  [FE]  AssertionFailedError  [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);    [BUGGY]  stream.writeInt(-i);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-i);	  stream.writeInt(-1);    	compilable	  [FE]  AssertionFailedError	201	2
1700	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  else  {  readObject(stream);  }  [BUGGY]    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  else  {  readObject(stream);  }	  	compilable	  [FE]  AssertionFailedError	284	2
1701	[BUG]  [BUGGY]  if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  else  {  readObject(stream);  }  [FE]  AssertionFailedError  [CONTEXT]    private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {    [BUGGY]  if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  else  {  readObject(stream);  }  [BUGGY]    }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(index  >  0)  {  setShape(index,  SerialUtilities.readShape(stream));  }  else  {  readObject(stream);  }	  	compilable	  [FE]  AssertionFailedError	284	2
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }    [BUGGY]  if(obj  instanceof  ShapeList  ==  false  ||!(obj  instanceof  ShapeList)&&  super.equals(obj))  {  [BUGGY]    return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(obj  instanceof  ShapeList  ==  false  ||!(obj  instanceof  ShapeList)&&  super.equals(obj))  {	  if(!(obj    instanceof    ShapeList)&&    super.equals(obj))    {    	compilable	  [FE]  AssertionFailedError	63	2
375	[BUG]  [BUGGY]  if(obj  instanceof  ShapeList  ==  false  ||!(obj  instanceof  ShapeList)&&  super.equals(obj))  {  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }    [BUGGY]  if(obj  instanceof  ShapeList  ==  false  ||!(obj  instanceof  ShapeList)&&  super.equals(obj))  {  [BUGGY]    return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(obj  instanceof  ShapeList  ==  false  ||!(obj  instanceof  ShapeList)&&  super.equals(obj))  {	  if(!(obj    instanceof    ShapeList)&&    super.equals(obj))    {    	compilable	  [FE]  AssertionFailedError	63	2
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [BUGGY]    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	55	2
326	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]    public  boolean  equals(Object  obj)  {    [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [BUGGY]    if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	55	2
