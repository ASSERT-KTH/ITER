bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this.shape  =  shape;  [CE]  cannot  find  symbol  shape  [FE]    AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    this.shape  =  shape;  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	    this.shape  =  shape;		non-compiled	[CE]  cannot  find  symbol  shape	8	None	add
2	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    setShape(index,  shape);  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	    setShape(index,  shape);		compilable	  [FE]  StackOverflowError  	8	3	add
3	[BUG]  [BUGGY]    setShape(index,  shape);  [FE]  StackOverflowError  [FE]      AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    setShape(index,  shape);  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	    setShape(index,  shape);		compilable	  [FE]  StackOverflowError  	8	3	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  AssertionFailedError  	8	2	add
5	[BUG]  [BUGGY]    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  AssertionFailedError  	8	2	add
6	[BUG]  [BUGGY]  setShape(index,  Shape.valueOf(shape));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]  setShape(index,  Shape.valueOf(shape));  [BUGGY]    [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	setShape(index,  Shape.valueOf(shape));	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
8	[BUG]  [BUGGY]    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  shape);  }  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  shape);  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
9	[BUG]  [BUGGY]  setShape(shape);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]  setShape(shape);  [BUGGY]    [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	setShape(shape);	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);  [BUGGY]    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {  [BUGGY]  }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	    if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {		non-compiled	[CE]  illegal  start  of  expression	8	None	add
