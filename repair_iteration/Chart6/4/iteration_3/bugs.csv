bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safe().setShape(index,  shape);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  safe().setShape(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	safe().setShape(index,  shape);	  safely().setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2	[BUG]  [BUGGY]  safely().setShape(shape,  index);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  safely().setShape(shape,  index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	safely().setShape(shape,  index);	  safely().setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
3	[BUG]  [BUGGY]  ||  index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ||  index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	||  index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  ||    index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  ((  Shape)shape).setShape(index  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ((  Shape)shape).setShape(index  +  1);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	((  Shape)shape).setShape(index  +  1);	  ((    Shape)shape).setShape(index);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  shape);  }  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  For(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	For(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  shape);  }	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    shape);    }    	non-compiled	[CE]  '.class'  expected	21	None	replace
6	[BUG]  [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(s  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(s  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(s	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	42	None	replace
7	[BUG]  [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	42	None	replace
8	[BUG]  [BUGGY]  if(index  >=  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  Il  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  Il	  if(index    >=    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(i);    if(shape.getClass().isArray())    {    throw    new    Il    	non-compiled	[CE]  '('  or  '['  expected	25	None	replace
9	[BUG]  [BUGGY]  Shape  shape  =  getShape(index);  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =  getShape(index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =  getShape(index);	  if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	19	3	add
11	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	19	3	add
12	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
13	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
14	[BUG]  [BUGGY]  Thread.currentThread().setCurrentLocation(index);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Thread.currentThread().setCurrentLocation(index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Thread.currentThread().setCurrentLocation(index);	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Thread.currentThread().interrupt();	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  Il  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  Il	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(i);    if(shape.getClass().isArray())    {    throw    new    Il    	non-compiled	[CE]  '('  or  '['  expected	38	None	replace
17	[BUG]  [BUGGY]  Shape  shape  =  getShape();  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =  getShape();  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =  getShape();	          setShape(index,    shape);    Shape    shape    =    getShape();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
18	[BUG]  [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  ==  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(	  if(index    ==    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(s    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
19	[BUG]  [BUGGY]  shape  =(Shape)shape.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  shape  =(Shape)shape.get(index  +  1);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	shape  =(Shape)shape.get(index  +  1);	  shape    =(Shape)shape.get(index);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
20	[BUG]  [BUGGY]  shape  =(Shape)this.shape.get(index);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  shape  =(Shape)this.shape.get(index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	shape  =(Shape)this.shape.get(index);	  shape    =(Shape)shape.get(index);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
22	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
23	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
24	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
25	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
26	[BUG]  [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                if(index        <        0)        {        throw        new        IllegalArgumentException(       "       ");        }        if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	11	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                if(index        <        0)        {        throw        new        IllegalArgumentException(       "       ");        }        if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
28	[BUG]  [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                if(index        <        0)        {        throw        new        IllegalArgumentException(       "       ");        }        if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
29	[BUG]  [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                if(index        <        0)        {        throw        new        IllegalArgumentException(       "       ");        }        if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
30	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isObject())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  For(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isObject())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	For(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isObject())  {  throw  new  IllegalArgumentException( " ");  }	  For(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
31	[BUG]  [BUGGY]  ((  Shape)shape).setShape(index,  shape,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ((  Shape)shape).setShape(index,  shape,  0);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	((  Shape)shape).setShape(index,  shape,  0);	  ((    Shape)shape).setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
32	[BUG]  [BUGGY]  if(index!=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index!=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index!=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    Il    	non-compiled	[CE]  '('  or  '['  expected	39	None	replace
33	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  if(index  <  0)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  if(index  <  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  if(index  <  0)  {  setShape(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
34	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  setShape(index,  shape);  }	  	compilable	  [FE]  StackOverflowError  	17	3	add
35	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  setShape(index,  shape);  }	  	compilable	  [FE]  StackOverflowError  	17	3	add
36	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  if(index  >=  0)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  if(index  >=  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  if(index  >=  0)  {  setShape(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
37	[BUG]  [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  setShape(index,  shape);  }  else  {  setShape(index,  shape);  }	          setShape(index,    shape);    setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setShape(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);	  	compilable	  [FE]  StackOverflowError  	15	3	add
39	[BUG]  [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setShape(index,  shape);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setShape(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);	  	compilable	  [FE]  StackOverflowError  	15	3	add
40	[BUG]  [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setShape(index,  size);  [CE]  size  has  private  access  in  AbstractObjectList  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setShape(index,  size);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        setShape(index,    shape);    setShape(index,  shape);  setShape(index,  size);	  	non-compiled	[CE]  size  has  private  access  in  AbstractObjectList	15	None	add
41	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        setShape(index,    shape);    setShape(index,  shape);	  	compilable	  [FE]  StackOverflowError  	15	3	add
42	[BUG]  [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        setShape(index,    shape);    setShape(index,  shape);	  	compilable	  [FE]  StackOverflowError  	15	3	add
43	[BUG]  [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  Shape  shape  =  getShape(index);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  Shape  shape  =  getShape(index);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  setShape(index,  shape);  Shape  shape  =  getShape(index);  }	          setShape(index,    shape);    Shape    shape    =    getShape(index);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
44	[BUG]  [BUGGY]  if(index  ==  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  ==  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  ==  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }	  if(index    ==    0)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	7	None	replace
45	[BUG]  [BUGGY]  if(index  <  0)  {  setShape(shape,  index);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  <  0)  {  setShape(shape,  index);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  <  0)  {  setShape(shape,  index);  }	  setShape(shape,    index);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
46	[BUG]  [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())	  if(index    >=    -1)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName()))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
47	[BUG]  [BUGGY]  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  }	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
48	[BUG]  [BUGGY]  Shape  shape  =(Shape)shape.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =(Shape)shape.get(index  +  1);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =(Shape)shape.get(index  +  1);	  Shape    shape    =(Shape)shape.get(index);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
49	[BUG]  [BUGGY]  Shape  shape  =(Shape)this.shape.get(index);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =(Shape)this.shape.get(index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =(Shape)this.shape.get(index);	  Shape    shape    =(Shape)shape.get(index);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
50	[BUG]  [BUGGY]  if(index  <  0)  {  if(shape  ==  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  <  0)  {  if(shape  ==  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  throw  new  Il  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  <  0)  {  if(shape  ==  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  throw  new  Il	  if(index    <    0)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    throw    new    Il    	non-compiled	[CE]  '('  or  '['  expected	33	None	replace
51	[BUG]  [BUGGY]  Thread.currentThread().setCurrentSelection(shape);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Thread.currentThread().setCurrentSelection(shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Thread.currentThread().setCurrentSelection(shape);	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  setShape(index,  shape);  }	  	compilable	  [FE]  StackOverflowError  	43	3	add
53	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  setShape(index,  shape);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  setShape(index,  shape);  }	  	compilable	  [FE]  StackOverflowError  	43	3	add
54	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  if(shape!=  null)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  if(shape!=  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  if(shape!=  null)  {  setShape(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
55	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  if(shape!=  null)  {  setShape(index,  size);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  if(shape!=  null)  {  setShape(index,  size);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  if(shape!=  null)  {  setShape(index,  size);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
56	[BUG]  [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  Shape  shape  =  getShape();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  Shape  shape  =  getShape();  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  setShape(index,  shape);  Shape  shape  =  getShape();  }	          setShape(index,    shape);    Shape    shape    =    getShape();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  shape  =(Shape)shape.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  shape  =(Shape)shape.get(index  -  1);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	shape  =(Shape)shape.get(index  -  1);	  shape    =(Shape)shape.get(index);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
58	[BUG]  [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  if(index  <  0)  {  StackOverflowError  <  0;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  if(index  <  0)  {  StackOverflowError  <  0;  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        setShape(index,    shape);    if(index  <  0)  {  StackOverflowError  <  0;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	add
59	[BUG]  [BUGGY]  if(index  <  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shap  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  <  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shap  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  <  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shap	  if(index    <    0)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    throw    new    IllegalArgumentException(    	non-compiled	[CE]  ')'  expected	34	None	replace
60	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  shape);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Integer  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Integer  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  shape);  }	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    shape);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
61	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Integer  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Integer  i  =  0;  i  <  shape.size();  i++)  {  Shape  shape  =(Shape)shape.get(i);  if(shape!=  null)  {  set(index,	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    shape);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
62	[BUG]  [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  int  index  =  indexOf(shape);  if(index  <  0)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  int  index  =  indexOf(shape);  if(index  <  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  setShape(index,  shape);  }  else  {  int  index  =  indexOf(shape);  if(index  <  0)  {  setShape(index,  shape);  }	          setShape(index,    shape);    if(index    <    0)    {    setShape(index,    shape);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }	  if(index    ==    0)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	7	None	replace
64	[BUG]  [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())!=  '  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())!=  '	  if(index    ==    0)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  illegal  line  end  in  character  literal	7	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkNotNull(shape);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Preconditions.checkNotNull(shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Preconditions.checkNotNull(shape);	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(index  <  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Preconditions.checkState(index  <  0);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Preconditions.checkState(index  <  0);	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	          setShape(index,    shape);    if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
68	[BUG]  [BUGGY]  if(shape  ==  null)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape  ==  null)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape  ==  null)  {  setShape(index,  shape);  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	          setShape(index,    shape);    if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
69	[BUG]  [BUGGY]  Shape  shape  =(Shape)shape.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =(Shape)shape.get(index  -  1);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =(Shape)shape.get(index  -  1);	  Shape    shape    =(Shape)shape.get(index);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
70	[BUG]  [BUGGY]  set(index,  shape);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  set(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	set(index,  shape);	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  if(shape  ==  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape  ==  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape  ==  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    Il    	non-compiled	[CE]  '('  or  '['  expected	39	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                if(index        <        0)        {        throw        new        IllegalArgumentException(       "       ");        }        if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
73	[BUG]  [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          if(index    <    0)    {    throw    new    IllegalArgumentException(     "     ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException(   "     ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                if(index        <        0)        {        throw        new        IllegalArgumentException(       "       ");        }        if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
74	[BUG]  [BUGGY]  Preconditions.checkState(shape.size()  ==  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Preconditions.checkState(shape.size()  ==  0);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Preconditions.checkState(shape.size()  ==  0);	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
75	[BUG]  [BUGGY]  ((  Shape)shape).setShape(index  +  1,  shape);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ((  Shape)shape).setShape(index  +  1,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	((  Shape)shape).setShape(index  +  1,  shape);	  ((    Shape)shape).setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  if(index  >=  0)  {  setShape(index);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  setShape(index);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  setShape(index);  }  else  {  throw  new  IllegalStateException( " ");  }	  setShape(index);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  if(index  <  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  <  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  <  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s	  if(index    ==    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(s    	non-compiled	[CE]  ')'  expected	32	None	replace
78	[BUG]  [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s	  if(index    ==    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(s    	non-compiled	[CE]  ')'  expected	32	None	replace
79	[BUG]  [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {	  if(index    >=    -1)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  if(shape  ==  null)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape  ==  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape  ==  null)  {  setShape(index,  shape);  }	  if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
81	[BUG]  [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(s  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(s  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(s	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	42	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(index!=  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Preconditions.checkState(index!=  0);  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Preconditions.checkState(index!=  0);	  For(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(index  ==  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Preconditions.checkState(index  ==  0);  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Preconditions.checkState(index  ==  0);	  For(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
85	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  if(index  >=  0)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
86	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  if(index  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  if(index  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  if(index  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
87	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  if(index  >=  0)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  if(index  >=  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  if(index  >=  0)  {  setShape(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
88	[BUG]  [BUGGY]  if(index  <  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  <  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  <  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName()))  {	  if(index    ==    0)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  StackOverflowError  <  0;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  StackOverflowError  <  0;  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  StackOverflowError  <  0;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	add
90	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	17	3	add
91	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	17	3	add
92	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  StackOverflowError  }  [CE]  not  a  statement  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  StackOverflowError  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  StackOverflowError  }	  	non-compiled	[CE]  not  a  statement	43	None	add
93	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  StackOverflowError  <  IllegalStateException.println();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  StackOverflowError  <  IllegalStateException.println();  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  StackOverflowError  <  IllegalStateException.println();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	43	None	add
94	[BUG]  [BUGGY]  setShape(shape,  index  +  1);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  setShape(shape,  index  +  1);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	setShape(shape,  index  +  1);	  setShape(shape,    index);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
96	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
97	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
98	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	add	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  setShape(index,  shape);  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
99	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  setShape(index,  shape);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(shape!=  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(shape!=  null)  {  setShape(index,  shape);  }	  	compilable	  [FE]  StackOverflowError  	45	3	add
100	[BUG]  [BUGGY]  safely().setShape(shape);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  safely().setShape(shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	safely().setShape(shape);	          if(index    <    0)    {    throw    new    IllegalArgumentException(       "       ");    }    if(index    <    0)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  setShape(index,  shape);  if(shape!=  null)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  setShape(index,  shape);  if(shape!=  null)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  setShape(index,  shape);  if(shape!=  null)  {  setShape(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
102	[BUG]  [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  this.shape  =  shape;  }  [CE]  cannot  find  symbol  shape  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(shape!=  null)  {  setShape(index,  shape);  }  if(shape!=  null)  {  this.shape  =  shape;  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(shape!=    null)    {    setShape(index,    shape);    }    if(shape!=  null)  {  this.shape  =  shape;  }	  	non-compiled	[CE]  cannot  find  symbol  shape	43	None	add
103	[BUG]  [BUGGY]  safe().setShape(shape,  index);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  safe().setShape(shape,  index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	safe().setShape(shape,  index);	  safely().setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
104	[BUG]  [BUGGY]  ((  Shape)shape).setShape(shape);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ((  Shape)shape).setShape(shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	((  Shape)shape).setShape(shape);	  ((    Shape)shape).setShape(index);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
105	[BUG]  [BUGGY]  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Shape  shape  =(Shape)shape.get(index);  if(shape!=  null)  {  set(index,  shape);  }	  For(int    i    =    0;    i    <    shape.size();    i++)    {    Shape    shape    =(Shape)shape.get(i);    if(shape!=    null)    {    set(index,    shape);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
106	[BUG]  [BUGGY]  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.clone();  if(shape.getType()!=  Token.BLOCK)  {  set  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.clone();  if(shape.getType()!=  Token.BLOCK)  {  set  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.clone();  if(shape.getType()!=  Token.BLOCK)  {  set	  [Delete]    	non-compiled	[CE]  not  a  statement	48	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(shape.size()  ==  index);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  Preconditions.checkState(shape.size()  ==  index);  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	Preconditions.checkState(shape.size()  ==  index);	  For(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
108	[BUG]  [BUGGY]  if(index  >=  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  0)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(i);  if(shape.getClass().isArray())  {  throw  new	  if(index    >=    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(i);    if(shape.getClass().isArray())    {    throw    new    IllegalArgumentException(    	non-compiled	[CE]  <identifier>  expected	26	None	replace
109	[BUG]  [BUGGY]  if(index!=  -1)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index!=  -1)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index!=  -1)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.get(index);  if(shape.getClass().isArray())  {  throw  new  Il	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.get(index);    if(shape.getClass().isArray())    {    throw    new    Il    	non-compiled	[CE]  '('  or  '['  expected	39	None	replace
110	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(index  <  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(index  <  0)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
111	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  Shape  shape  =  getShape();  [CE]  variable  shape  is  already  defined  in  method  setShape(int,Shape)  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  throw  new  IllegalArgumentException(   "   ");  }  Shape  shape  =  getShape();  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    Shape  shape  =  getShape();	  	non-compiled	[CE]  variable  shape  is  already  defined  in  method  setShape(int,Shape)	19	None	add
112	[BUG]  [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(s  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(s  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(s	  if(index    ==    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(s    	non-compiled	[CE]  ')'  expected	32	None	replace
113	[BUG]  [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index  >=  -1)  {  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(s.getName().equals(	  if(index    ==    -1)    {    if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(s    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
114	[BUG]  [BUGGY]  ((  Shape)shape).setShape(index,  shape,  null);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ((  Shape)shape).setShape(index,  shape,  null);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	((  Shape)shape).setShape(index,  shape,  null);	  ((    Shape)shape).setShape(index,    shape);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
115	[BUG]  [BUGGY]  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(shape!=  null)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }	  if(shape!=    null)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	42	None	replace
116	[BUG]  [BUGGY]  if(index!=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  if(index!=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	if(index!=  0)  {  for(int  i  =  0;  i  <  shape.size();  ++i)  {  Shape  shape  =(Shape)shape.getItem(i);  if(shape.getName().equals(shape.getName())  }	  if(index    ==    0)    {    for(int    i    =    0;    i    <    shape.size();    ++i)    {    Shape    shape    =(Shape)shape.getItem(i);    if(shape.getName().equals(shape.getName())    	non-compiled	[CE]  ')'  expected	7	None	replace
117	[BUG]  [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  Shape  shape  =  getShape();  [CE]  variable  shape  is  already  defined  in  method  setShape(int,Shape)  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  Shape  shape  =  getShape();  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        setShape(index,    shape);    Shape  shape  =  getShape();	  	non-compiled	[CE]  variable  shape  is  already  defined  in  method  setShape(int,Shape)	15	None	add
118	[BUG]  [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setPaint(index,  shape);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    setShape(index,  shape);  setShape(index,  shape);  setPaint(index,  shape);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        setShape(index,    shape);    setShape(index,  shape);  setPaint(index,  shape);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
119	[BUG]  [BUGGY]  ||  index  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  ||  index  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	||  index  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  ||    index    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
120	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  setShape(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  setShape(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  setShape(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
121	[BUG]  [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  setPaint(index,  shape);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]          setShape(index,    shape);    if(index  <  0)  {  setShape(index,  shape);  }  if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  setPaint(index,  shape);  }  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	                setShape(index,        shape);        if(index    <    0)    {    setShape(index,    shape);    }    if(index  <  0)  {  setShape(index,  shape);  if(index  <  0)  {  setPaint(index,  shape);  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
122	[BUG]  [BUGGY]  setShape(shape,  Shape.valueOf(index  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setShape(int  index,  Shape  shape)  {  set(index,  shape);      [BUGGY]  setShape(shape,  Shape.valueOf(index  +  1));  [BUGGY]        [CLASS]  ShapeList  [METHOD]  setShape  [RETURN_TYPE]  void  int  index  Shape  shape  [VARIABLES]  Shape  shape  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	replace	setShape(shape,  Shape.valueOf(index  +  1));	  setShape(shape,    Shape.valueOf(index));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
