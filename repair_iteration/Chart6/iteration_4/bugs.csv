bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
25142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {        [BUGGY]  stream.writeInt(2);  [BUGGY]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	4191	2
25143	[BUG]  [BUGGY]  stream.writeInt(2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {        [BUGGY]  stream.writeInt(2);  [BUGGY]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	4191	2
62252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  SerialUtilities.readStroke(stream);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	SerialUtilities.readStroke(stream);	  	compilable	  [FE]  AssertionFailedError	10376	2
62253	[BUG]  [BUGGY]  SerialUtilities.readStroke(stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  SerialUtilities.readStroke(stream);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	SerialUtilities.readStroke(stream);	  	compilable	  [FE]  AssertionFailedError	10376	2
43064	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7178	2
43065	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7178	2
43065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7178	2
43066	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7178	2
11673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	1946	2
11674	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	1946	2
43070	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i  +  2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  2);	  stream.writeInt(i    +    1);    	compilable	  [FE]  AssertionFailedError	7179	2
43071	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i  +  2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  2);	  stream.writeInt(i    +    1);    	compilable	  [FE]  AssertionFailedError	7179	2
43106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(0);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(0);	  stream.writeInt(-2);    	compilable	  [FE]  AssertionFailedError	7185	2
43107	[BUG]  [BUGGY]  stream.writeInt(0);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(0);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(0);	  stream.writeInt(-2);    	compilable	  [FE]  AssertionFailedError	7185	2
39182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	6531	2
39183	[BUG]  [BUGGY]  stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	6531	2
27729	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();        [BUGGY]  stream.writeInt(3);  [BUGGY]        int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	stream.writeInt(3);	  	compilable	  [FE]  AssertionFailedError	4622	2
27730	[BUG]  [BUGGY]  stream.writeInt(3);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();        [BUGGY]  stream.writeInt(3);  [BUGGY]        int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	stream.writeInt(3);	  	compilable	  [FE]  AssertionFailedError	4622	2
58586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();        [BUGGY]  if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index    <    0)    {    if(index    ==    stream.readInt())    {    throw    new    ClassNotFoundException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	9765	2
58587	[BUG]  [BUGGY]  if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();        [BUGGY]  if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index    <    0)    {    if(index    ==    stream.readInt())    {    throw    new    ClassNotFoundException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	9765	2
62469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(index  +  3);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  3);	  	compilable	  [FE]  AssertionFailedError	10412	2
62470	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  3);  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(index  +  3);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  3);	  	compilable	  [FE]  AssertionFailedError	10412	2
43057	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7177	2
43058	[BUG]  [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7177	2
11750	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  if(obj  ==  null)  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(obj  ==  null)  {  return  false;  }	  if(obj    ==    null)    {    if(obj    ==    this)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	1959	2
11751	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(obj  ==  null)  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  if(obj  ==  null)  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(obj  ==  null)  {  return  false;  }	  if(obj    ==    null)    {    if(obj    ==    this)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	1959	2
43070	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    1);    	compilable	  [FE]  AssertionFailedError	7179	2
43071	[BUG]  [BUGGY]  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    1);    	compilable	  [FE]  AssertionFailedError	7179	2
61166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  -1)  {  return;  }  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	10195	2
61167	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  -1)  {  return;  }  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	10195	2
61167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Object  shape  =  SerialUtilities.readShape(stream);  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Object  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	10195	2
61168	[BUG]  [BUGGY]  Object  shape  =  SerialUtilities.readShape(stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Object  shape  =  SerialUtilities.readShape(stream);  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Object  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	10195	2
49334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {        [BUGGY]  if(stream  ==  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]        stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream  ==  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }	  stream.defaultReadObject();    if(stream!=    null)    {    stream.close();    }    	compilable	  [FE]  AssertionFailedError	8223	2
49335	[BUG]  [BUGGY]  if(stream  ==  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {        [BUGGY]  if(stream  ==  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]        stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream  ==  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }	  stream.defaultReadObject();    if(stream!=    null)    {    stream.close();    }    	compilable	  [FE]  AssertionFailedError	8223	2
37665	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]        if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  	  	compilable	  [FE]  AssertionFailedError	6278	2
37666	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }    [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]        if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  	  	compilable	  [FE]  AssertionFailedError	6278	2
43076	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i++  -  1);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i++  -  1);	  stream.writeInt(i++);    	compilable	  [FE]  AssertionFailedError	7180	2
43077	[BUG]  [BUGGY]  stream.writeInt(i++  -  1);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(i++  -  1);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i++  -  1);	  stream.writeInt(i++);    	compilable	  [FE]  AssertionFailedError	7180	2
39218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  -  2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  2);	  stream.writeInt(i    -    1);    	compilable	  [FE]  AssertionFailedError	6537	2
39219	[BUG]  [BUGGY]  stream.writeInt(i  -  2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  -  2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  2);	  stream.writeInt(i    -    1);    	compilable	  [FE]  AssertionFailedError	6537	2
58580	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();        [BUGGY]  if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }	  if(index    <    0)    {    if(index    ==    stream.readInt())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	9764	2
58581	[BUG]  [BUGGY]  if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();        [BUGGY]  if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  0)  {  if(index!=  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }	  if(index    <    0)    {    if(index    ==    stream.readInt())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	9764	2
45410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {        [BUGGY]  stream.writeInt(3);  [BUGGY]        stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(3);	  	compilable	  [FE]  AssertionFailedError	7569	2
45411	[BUG]  [BUGGY]  stream.writeInt(3);  [FE]  AssertionFailedError  [CONTEXT]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {        [BUGGY]  stream.writeInt(3);  [BUGGY]        stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(3);	  	compilable	  [FE]  AssertionFailedError	7569	2
50835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  size  =  stream.readInt();  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  int  size  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	8473	2
50836	[BUG]  [BUGGY]  final  int  size  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  size  =  stream.readInt();  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  int  size  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	8473	2
40406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6735	2
40407	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6735	2
62263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  ==  0)  {  return;  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =(Shape)stream.readObject();  if(index  ==  0)  {  return;  }	  Shape    shape    =(Shape)stream.readObject();    if(index!=    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	10378	2
62264	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  ==  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  ==  0)  {  return;  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =(Shape)stream.readObject();  if(index  ==  0)  {  return;  }	  Shape    shape    =(Shape)stream.readObject();    if(index!=    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	10378	2
39212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	6536	2
39213	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	6536	2
32487	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);        [BUGGY]  stream.writeInt(3);  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	stream.writeInt(3);	  	compilable	  [FE]  AssertionFailedError	5415	2
32488	[BUG]  [BUGGY]  stream.writeInt(3);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);        [BUGGY]  stream.writeInt(3);  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	stream.writeInt(3);	  	compilable	  [FE]  AssertionFailedError	5415	2
13256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }        [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]        return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	2210	2
13257	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }        [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]        return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	2210	2
55959	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {        [BUGGY]  int  sizes  =  stream.readInt();  [BUGGY]        if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  sizes  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	9327	2
55960	[BUG]  [BUGGY]  int  sizes  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {        [BUGGY]  int  sizes  =  stream.readInt();  [BUGGY]        if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  sizes  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	9327	2
46021	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {        [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7671	2
46022	[BUG]  [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {        [BUGGY]  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7671	2
28808	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();        [BUGGY]  stream.writeInt(count  /  2);  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  /  2);	  	compilable	  [FE]  AssertionFailedError	4802	2
28809	[BUG]  [BUGGY]  stream.writeInt(count  /  2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();        [BUGGY]  stream.writeInt(count  /  2);  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  /  2);	  	compilable	  [FE]  AssertionFailedError	4802	2
40437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	6740	2
40438	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	6740	2
43035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7173	2
43036	[BUG]  [BUGGY]  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7173	2
53426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();        [BUGGY]  if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]        int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	8905	2
53427	[BUG]  [BUGGY]  if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();        [BUGGY]  if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]        int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	8905	2
40190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  if(shape    instanceof    SerialUtilities)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6699	2
40191	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  if(shape    instanceof    SerialUtilities)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6699	2
39177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	6530	2
39178	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	6530	2
49327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {        [BUGGY]  stream.close();  if(stream!=  null)  {  stream.close();  }  [BUGGY]        stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	stream.close();  if(stream!=  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	8222	2
49328	[BUG]  [BUGGY]  stream.close();  if(stream!=  null)  {  stream.close();  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {        [BUGGY]  stream.close();  if(stream!=  null)  {  stream.close();  }  [BUGGY]        stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	stream.close();  if(stream!=  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	8222	2
49328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {        [BUGGY]  if(stream!=  null)  {  stream.close();  }  [BUGGY]        stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream!=  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	8222	2
49329	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.close();  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {        [BUGGY]  if(stream!=  null)  {  stream.close();  }  [BUGGY]        stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream!=  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	8222	2
37706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]        if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    SerialUtilities.writeShape(shape,    stream);    if(shape!=    null)    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	6285	2
37707	[BUG]  [BUGGY]  if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]        if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    SerialUtilities.writeShape(shape,    stream);    if(shape!=    null)    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	6285	2
35037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {        [BUGGY]  stream.writeInt(i  +  3);  [BUGGY]        Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(i  +  3);	  	compilable	  [FE]  AssertionFailedError	5840	2
35038	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {        [BUGGY]  stream.writeInt(i  +  3);  [BUGGY]        Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i  +  3);	  	compilable	  [FE]  AssertionFailedError	5840	2
53432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();        [BUGGY]  if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]        int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  if(count    >    0)    {    int    i    =    stream.readInt();    if(i!=    -1)    {    setShape(i,    SerialUtilities.readShape(stream));    }    	compilable	  [FE]  AssertionFailedError	8906	2
53433	[BUG]  [BUGGY]  if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();        [BUGGY]  if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]        int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  if(count    >    0)    {    int    i    =    stream.readInt();    if(i!=    -1)    {    setShape(i,    SerialUtilities.readShape(stream));    }    	compilable	  [FE]  AssertionFailedError	8906	2
39355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	6560	2
39356	[BUG]  [BUGGY]  stream.writeInt(2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	6560	2
50840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  count  =  stream.readInt()  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  int  count  =  stream.readInt()  -  1;	  final    int    count    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	8474	2
50841	[BUG]  [BUGGY]  final  int  count  =  stream.readInt()  -  1;  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  count  =  stream.readInt()  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  int  count  =  stream.readInt()  -  1;	  final    int    count    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	8474	2
43101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	7184	2
43102	[BUG]  [BUGGY]  stream.writeInt(2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(2);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	7184	2
11714	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }	  if(obj    ==    null)    {    if(!(obj    instanceof    ShapeList))    {    return    true;    }    	compilable	  [FE]  AssertionFailedError	1953	2
11715	[BUG]  [BUGGY]  if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }	  if(obj    ==    null)    {    if(!(obj    instanceof    ShapeList))    {    return    true;    }    	compilable	  [FE]  AssertionFailedError	1953	2
40179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeObject(shape);  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeObject(shape);	  	compilable	  [FE]  AssertionFailedError	6697	2
40180	[BUG]  [BUGGY]  stream.writeObject(shape);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeObject(shape);  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeObject(shape);	  	compilable	  [FE]  AssertionFailedError	6697	2
11708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    if(!(obj    instanceof    ShapeList))    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	1952	2
11709	[BUG]  [BUGGY]  if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    if(!(obj    instanceof    ShapeList))    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	1952	2
36548	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6092	2
36549	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6092	2
40190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(-2);  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-2);	  if(shape    instanceof    SerialUtilities)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6699	2
40191	[BUG]  [BUGGY]  stream.writeInt(-2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(-2);  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-2);	  if(shape    instanceof    SerialUtilities)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6699	2
36548	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6092	2
36549	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	6092	2
40257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	6710	2
40258	[BUG]  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	6710	2
11678	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(this  ==  obj)  {  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  obj)  {  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError	1947	2
11679	[BUG]  [BUGGY]  if(this  ==  obj)  {  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(this  ==  obj)  {  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  obj)  {  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    return    true;    }    	compilable	  [FE]  AssertionFailedError	1947	2
58580	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();        [BUGGY]  if(index  <  -1)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  -1)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index    <    0)    {    if(index    ==    stream.readInt())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	9764	2
58581	[BUG]  [BUGGY]  if(index  <  -1)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();        [BUGGY]  if(index  <  -1)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  -1)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index    <    0)    {    if(index    ==    stream.readInt())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	9764	2
43209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7202	2
43210	[BUG]  [BUGGY]  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	7202	2
25143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {        [BUGGY]  stream.writeInt(-2);  [BUGGY]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	4191	2
25144	[BUG]  [BUGGY]  stream.writeInt(-2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {        [BUGGY]  stream.writeInt(-2);  [BUGGY]        stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-2);	  	compilable	  [FE]  AssertionFailedError	4191	2
50840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  count  =  stream.readInt()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  int  count  =  stream.readInt()  +  1;	  final    int    count    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	8474	2
50841	[BUG]  [BUGGY]  final  int  count  =  stream.readInt()  +  1;  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  count  =  stream.readInt()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  int  count  =  stream.readInt()  +  1;	  final    int    count    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	8474	2
11708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    if(!(obj    instanceof    ShapeList))    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	1952	2
11709	[BUG]  [BUGGY]  if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    if(!(obj    instanceof    ShapeList))    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	1952	2
39176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  +  3);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  3);	  	compilable	  [FE]  AssertionFailedError	6530	2
39177	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  stream.writeInt(i  +  3);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  3);	  	compilable	  [FE]  AssertionFailedError	6530	2
62474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(index  *  2);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2);	  Shape    shape    =    getShape(index    +    2);    	compilable	  [FE]  AssertionFailedError	10413	2
62475	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(index  *  2);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2);	  Shape    shape    =    getShape(index    +    2);    	compilable	  [FE]  AssertionFailedError	10413	2
11684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;	  if(obj!=    null)    {    if(!(obj    instanceof    ShapeList))    return    false;    }    	compilable	  [FE]  AssertionFailedError	1948	2
11685	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  false;	  if(obj!=    null)    {    if(!(obj    instanceof    ShapeList))    return    false;    }    	compilable	  [FE]  AssertionFailedError	1948	2
36542	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	6091	2
36543	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	6091	2
36543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	6091	2
36544	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	6091	2
40436	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	6740	2
40437	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	6740	2
62468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(i  +  1);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  +  1);	  	compilable	  [FE]  AssertionFailedError	10412	2
62469	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(i  +  1);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  +  1);	  	compilable	  [FE]  AssertionFailedError	10412	2
51891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  float  shape  =(float)stream.readFloat();  [BUGGY]        int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	float  shape  =(float)stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	8649	2
51892	[BUG]  [BUGGY]  float  shape  =(float)stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  float  shape  =(float)stream.readFloat();  [BUGGY]        int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	float  shape  =(float)stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	8649	2
61183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  float  shape  =  stream.readInt();  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	float  shape  =  stream.readInt();	  int    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	10198	2
61184	[BUG]  [BUGGY]  float  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  float  shape  =  stream.readInt();  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	float  shape  =  stream.readInt();	  int    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	10198	2
43064	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	7178	2
43065	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	7178	2
43065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	7178	2
43066	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	7178	2
43035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(-3);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-3);	  	compilable	  [FE]  AssertionFailedError	7173	2
43036	[BUG]  [BUGGY]  stream.writeInt(-3);  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  stream.writeInt(-3);  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-3);	  	compilable	  [FE]  AssertionFailedError	7173	2
36543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  }  else  if(shape  ==  null)  {  stream.writeInt(-1);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(-1);  }  else  if(shape  ==  null)  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	6091	2
36544	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  }  else  if(shape  ==  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  }  else  if(shape  ==  null)  {  stream.writeInt(-1);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  }  else  if(shape  ==  null)  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	6091	2
40178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	6697	2
40179	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	6697	2
11702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  return  super.equals(obj);  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  return  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	1951	2
11703	[BUG]  [BUGGY]  if(obj  ==  null)  {  return  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]        public  boolean  equals(Object  obj)  {        [BUGGY]  if(obj  ==  null)  {  return  super.equals(obj);  }  [BUGGY]        if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  return  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	1951	2
62474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(i  +  2);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  +  2);	  Shape    shape    =    getShape(index    +    2);    	compilable	  [FE]  AssertionFailedError	10413	2
62475	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  2);  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  Shape  shape  =  getShape(i  +  2);  [BUGGY]        setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  +  2);	  Shape    shape    =    getShape(index    +    2);    	compilable	  [FE]  AssertionFailedError	10413	2
43100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	7184	2
43101	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	7184	2
43101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	7184	2
43102	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);        [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]        SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	7184	2
50834	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  shape  =(int)stream.readInt();  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  int  shape  =(int)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	8473	2
50835	[BUG]  [BUGGY]  final  int  shape  =(int)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();        [BUGGY]  final  int  shape  =(int)stream.readInt();  [BUGGY]        for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  int  shape  =(int)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	8473	2
61179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  float  shape  =(float)stream.readInt();  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	float  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	10197	2
61180	[BUG]  [BUGGY]  float  shape  =(float)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]        private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {        [BUGGY]  float  shape  =(float)stream.readInt();  [BUGGY]        }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	float  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	10197	2
40437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	6740	2
40438	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]        private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {        [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]        stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	6740	2
