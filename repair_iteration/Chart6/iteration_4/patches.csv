bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
374841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(i  +  3);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  +  3);	  	compilable	  [FE]  AssertionFailedError	62474	2
374842	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  3);  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(i  +  3);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  +  3);	  	compilable	  [FE]  AssertionFailedError	62474	2
258452	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i++  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i++  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43076	2
258453	[BUG]  [BUGGY]  stream.writeInt(i++  -  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i++  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i++  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43076	2
258392	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	43066	2
258393	[BUG]  [BUGGY]  stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	43066	2
79533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }          [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  true;  [BUGGY]          return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	13256	2
79534	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  true;  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }          [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  true;  [BUGGY]          return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&(obj!=  null  ||  obj.getClass()  ==  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	13256	2
258417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43070	2
258418	[BUG]  [BUGGY]  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43070	2
351482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();          [BUGGY]  if(index  <  -1)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  -1)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index    <    0)    {    if(index!=    stream.readInt())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	58581	2
351483	[BUG]  [BUGGY]  if(index  <  -1)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();          [BUGGY]  if(index  <  -1)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  -1)  {  if(index!=  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index    <    0)    {    if(index!=    stream.readInt())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	58581	2
320594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();          [BUGGY]  if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]          int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  if(count    ==    1)    {    int    i    =    stream.readInt();    if(i!=    -1)    {    setShape(i,    SerialUtilities.readShape(stream));    }    	compilable	  [FE]  AssertionFailedError	53433	2
320595	[BUG]  [BUGGY]  if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();          [BUGGY]  if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]          int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	if(count  ==  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  if(count    ==    1)    {    int    i    =    stream.readInt();    if(i!=    -1)    {    setShape(i,    SerialUtilities.readShape(stream));    }    	compilable	  [FE]  AssertionFailedError	53433	2
242618	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  	compilable	  [FE]  AssertionFailedError	40437	2
242619	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(2);  }	  	compilable	  [FE]  AssertionFailedError	40437	2
241543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	40258	2
241544	[BUG]  [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(-1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	40258	2
258381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43064	2
258382	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43064	2
70034	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11673	2
70035	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11673	2
70035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11673	2
70036	[BUG]  [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11673	2
258422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  -  1);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  1);	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	43071	2
258423	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  -  1);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  1);	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	43071	2
235059	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	39177	2
235060	[BUG]  [BUGGY]  stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  4);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	39177	2
367100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  double  shape  =  stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readInt();	  float    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	61184	2
367101	[BUG]  [BUGGY]  double  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  double  shape  =  stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readInt();	  float    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	61184	2
172844	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();          [BUGGY]  stream.writeInt(count  %  2);  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  %  2);	  	compilable	  [FE]  AssertionFailedError	28808	2
172845	[BUG]  [BUGGY]  stream.writeInt(count  %  2);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();          [BUGGY]  stream.writeInt(count  %  2);  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  %  2);	  	compilable	  [FE]  AssertionFailedError	28808	2
305007	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();          [BUGGY]  final  char  shape  =(char)stream.readInt();  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  char  shape  =(char)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	50835	2
305008	[BUG]  [BUGGY]  final  char  shape  =(char)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();          [BUGGY]  final  char  shape  =(char)stream.readInt();  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  char  shape  =(char)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	50835	2
70208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj!=  null)  {  return  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj!=  null)  {  return  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11702	2
70209	[BUG]  [BUGGY]  if(obj!=  null)  {  return  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj!=  null)  {  return  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj!=  null)  {  return  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11702	2
374811	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  +  4);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  4);	  	compilable	  [FE]  AssertionFailedError	62469	2
374812	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  4);  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  +  4);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  4);	  	compilable	  [FE]  AssertionFailedError	62469	2
320589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();          [BUGGY]  if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]          int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	53432	2
320590	[BUG]  [BUGGY]  if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();          [BUGGY]  if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }  [BUGGY]          int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	if(count  ==  1)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  ;  }	  	compilable	  [FE]  AssertionFailedError	53432	2
258339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43057	2
258340	[BUG]  [BUGGY]  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	43057	2
374846	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  *  2  -  1);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  -  1);	  Shape    shape    =    getShape(index    *    2);    	compilable	  [FE]  AssertionFailedError	62475	2
374847	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  -  1);  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  *  2  -  1);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  -  1);	  Shape    shape    =    getShape(index    *    2);    	compilable	  [FE]  AssertionFailedError	62475	2
367071	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  int  shape  =(int)stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	int  shape  =(int)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	61179	2
367072	[BUG]  [BUGGY]  int  shape  =(int)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  int  shape  =(int)stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	int  shape  =(int)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	61179	2
235053	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	39176	2
235054	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	39176	2
258631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(1);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	43106	2
258632	[BUG]  [BUGGY]  stream.writeInt(1);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(1);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	43106	2
219290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    if(shape!=    null)    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	36549	2
219291	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    if(shape!=    null)    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	36549	2
295970	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {          [BUGGY]  if(stream  ==  null)  {  stream.close();  }  [BUGGY]          stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream  ==  null)  {  stream.close();  }	  if(stream!=    null)    {    stream.close();    }    	compilable	  [FE]  AssertionFailedError	49329	2
295971	[BUG]  [BUGGY]  if(stream  ==  null)  {  stream.close();  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {          [BUGGY]  if(stream  ==  null)  {  stream.close();  }  [BUGGY]          stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream  ==  null)  {  stream.close();  }	  if(stream!=    null)    {    stream.close();    }    	compilable	  [FE]  AssertionFailedError	49329	2
258422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	43071	2
258423	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	43071	2
235058	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(i  -  3);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  3);	  	compilable	  [FE]  AssertionFailedError	39177	2
235059	[BUG]  [BUGGY]  stream.writeInt(i  -  3);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  stream.writeInt(i  -  3);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  3);	  	compilable	  [FE]  AssertionFailedError	39177	2
241137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }	  	compilable	  [FE]  AssertionFailedError	40190	2
241138	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }	  	compilable	  [FE]  AssertionFailedError	40190	2
219290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    if(shape!=    null)    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	36549	2
219291	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    if(shape!=    null)    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	36549	2
242432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }	  	compilable	  [FE]  AssertionFailedError	40406	2
242433	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((2));  }	  	compilable	  [FE]  AssertionFailedError	40406	2
242433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(3);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(3);  }	  	compilable	  [FE]  AssertionFailedError	40406	2
242434	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(3);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(3);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(3);  }	  	compilable	  [FE]  AssertionFailedError	40406	2
335751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {          [BUGGY]  int  formats  =  stream.readInt();  [BUGGY]          if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  formats  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	55959	2
335752	[BUG]  [BUGGY]  int  formats  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {          [BUGGY]  int  formats  =  stream.readInt();  [BUGGY]          if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  formats  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	55959	2
366997	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  -1)  {  return;  }  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  -1)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	61167	2
366998	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  -1)  {  return;  }  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  -1)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	61167	2
366998	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  0)  {  return;  }  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	61167	2
366999	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  0)  {  return;  }  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(index  ==  0)  {  return;  }	  Shape    shape    =    SerialUtilities.readShape(stream);    if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	61167	2
70214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj  ==  this)  {  if(obj  ==  null)  {  return  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  this)  {  if(obj  ==  null)  {  return  super.equals(obj);  }	  if(obj    ==    null)    {    return    super.equals(obj);    }    	compilable	  [FE]  AssertionFailedError	11703	2
70215	[BUG]  [BUGGY]  if(obj  ==  this)  {  if(obj  ==  null)  {  return  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj  ==  this)  {  if(obj  ==  null)  {  return  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  this)  {  if(obj  ==  null)  {  return  super.equals(obj);  }	  if(obj    ==    null)    {    return    super.equals(obj);    }    	compilable	  [FE]  AssertionFailedError	11703	2
241539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	40257	2
241540	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	40257	2
305007	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();          [BUGGY]  final  float  shape  =(float)stream.readInt();  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  float  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	50835	2
305008	[BUG]  [BUGGY]  final  float  shape  =(float)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();          [BUGGY]  final  float  shape  =(float)stream.readInt();  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  float  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	50835	2
172849	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();          [BUGGY]  stream.writeInt(count  /  2  -  1);  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  /  2  -  1);	  stream.writeInt(count    /    2);    	compilable	  [FE]  AssertionFailedError	28809	2
172850	[BUG]  [BUGGY]  stream.writeInt(count  /  2  -  1);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();          [BUGGY]  stream.writeInt(count  /  2  -  1);  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  /  2  -  1);	  stream.writeInt(count    /    2);    	compilable	  [FE]  AssertionFailedError	28809	2
172850	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();          [BUGGY]  stream.writeInt(count  /  2  +  1);  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  /  2  +  1);	  stream.writeInt(count    /    2);    	compilable	  [FE]  AssertionFailedError	28809	2
172851	[BUG]  [BUGGY]  stream.writeInt(count  /  2  +  1);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();          [BUGGY]  stream.writeInt(count  /  2  +  1);  [BUGGY]          for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  /  2  +  1);	  stream.writeInt(count    /    2);    	compilable	  [FE]  AssertionFailedError	28809	2
258417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  +  3);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  3);	  	compilable	  [FE]  AssertionFailedError	43070	2
258418	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  stream.writeInt(i  +  3);  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  3);	  	compilable	  [FE]  AssertionFailedError	43070	2
276127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {          [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	46022	2
276128	[BUG]  [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]          stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {          [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]          stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(2);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	46022	2
258421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	43071	2
258422	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	43071	2
367075	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  double  shape  =(double)stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readInt();	  float    shape    =(float)stream.readInt();    	compilable	  [FE]  AssertionFailedError	61180	2
367076	[BUG]  [BUGGY]  double  shape  =(double)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  double  shape  =(double)stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readInt();	  float    shape    =(float)stream.readInt();    	compilable	  [FE]  AssertionFailedError	61180	2
296000	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {          [BUGGY]  stream.defaultReadObject();  if(stream  ==  null)  {  stream.close();  }  [BUGGY]          stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	stream.defaultReadObject();  if(stream  ==  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	49334	2
296001	[BUG]  [BUGGY]  stream.defaultReadObject();  if(stream  ==  null)  {  stream.close();  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {          [BUGGY]  stream.defaultReadObject();  if(stream  ==  null)  {  stream.close();  }  [BUGGY]          stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	stream.defaultReadObject();  if(stream  ==  null)  {  stream.close();  }	  	compilable	  [FE]  AssertionFailedError	49334	2
367095	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  float  shape  =  stream.readFloat();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	float  shape  =  stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	61183	2
367096	[BUG]  [BUGGY]  float  shape  =  stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  float  shape  =  stream.readFloat();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	float  shape  =  stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	61183	2
272457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {          [BUGGY]  stream.writeInt(-0);  [BUGGY]          stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-0);	  	compilable	  [FE]  AssertionFailedError	45410	2
272458	[BUG]  [BUGGY]  stream.writeInt(-0);  [FE]  AssertionFailedError  [CONTEXT]          stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {          [BUGGY]  stream.writeInt(-0);  [BUGGY]          stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-0);	  	compilable	  [FE]  AssertionFailedError	45410	2
374816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  *  3);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  3);	  Shape    shape    =    getShape(index    +    3);    	compilable	  [FE]  AssertionFailedError	62470	2
374817	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  3);  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  *  3);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  3);	  Shape    shape    =    getShape(index    +    3);    	compilable	  [FE]  AssertionFailedError	62470	2
367070	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  double  shape  =(float)stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	61179	2
367071	[BUG]  [BUGGY]  double  shape  =(float)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  double  shape  =(float)stream.readInt();  [BUGGY]          }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	61179	2
225992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]          if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }        	compilable	  [FE]  AssertionFailedError	37666	2
225993	[BUG]  [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]          if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }        	compilable	  [FE]  AssertionFailedError	37666	2
374845	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  *  2  +  1);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  1);	  Shape    shape    =    getShape(index    *    2);    	compilable	  [FE]  AssertionFailedError	62475	2
374846	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  1);  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(index  *  2  +  1);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  1);	  Shape    shape    =    getShape(index    *    2);    	compilable	  [FE]  AssertionFailedError	62475	2
373579	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  <  0)  {  return;  }  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =(Shape)stream.readObject();  if(index  <  0)  {  return;  }	  Shape    shape    =(Shape)stream.readObject();    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	62264	2
373580	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  <  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index  <  0)  {  return;  }  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =(Shape)stream.readObject();  if(index  <  0)  {  return;  }	  Shape    shape    =(Shape)stream.readObject();    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	62264	2
259256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	43210	2
259257	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	43210	2
311343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();          [BUGGY]  double  shape  =(float)stream.readFloat();  [BUGGY]          int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	double  shape  =(float)stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	51891	2
311344	[BUG]  [BUGGY]  double  shape  =(float)stream.readFloat();  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();          [BUGGY]  double  shape  =(float)stream.readFloat();  [BUGGY]          int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	double  shape  =(float)stream.readFloat();	  	compilable	  [FE]  AssertionFailedError	51891	2
258602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	43101	2
258603	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	43101	2
150849	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {          [BUGGY]  stream.close();  [BUGGY]          stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.close();	  	compilable	  [FE]  AssertionFailedError	25142	2
150850	[BUG]  [BUGGY]  stream.close();  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {          [BUGGY]  stream.close();  [BUGGY]          stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.close();	  	compilable	  [FE]  AssertionFailedError	25142	2
374841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(i  *  2);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2);	  	compilable	  [FE]  AssertionFailedError	62474	2
374842	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2);  [FE]  AssertionFailedError  [CONTEXT]          private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {          [BUGGY]  Shape  shape  =  getShape(i  *  2);  [BUGGY]          setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2);	  	compilable	  [FE]  AssertionFailedError	62474	2
242619	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }	  	compilable	  [FE]  AssertionFailedError	40437	2
242620	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }	  	compilable	  [FE]  AssertionFailedError	40437	2
242618	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	40437	2
242619	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	40437	2
242613	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	40436	2
242614	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  [BUGGY]          stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }	  	compilable	  [FE]  AssertionFailedError	40436	2
70065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(this  ==  obj)  {  return  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  obj)  {  return  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11678	2
70066	[BUG]  [BUGGY]  if(this  ==  obj)  {  return  super.equals(obj);  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(this  ==  obj)  {  return  super.equals(obj);  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  obj)  {  return  super.equals(obj);  }	  	compilable	  [FE]  AssertionFailedError	11678	2
70101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj  ==  null)  {  if(!super.equals(obj))  return  false;  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!super.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	11684	2
70102	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!super.equals(obj))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(obj  ==  null)  {  if(!super.equals(obj))  return  false;  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!super.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	11684	2
225987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]          if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	37665	2
225988	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]          if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	37665	2
258380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	43064	2
258381	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	43064	2
258381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	43064	2
258382	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]          private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);          [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }  [BUGGY]          SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i);  }	  	compilable	  [FE]  AssertionFailedError	43064	2
70243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(this  ==  obj)  {  return  true;  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  obj)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	11708	2
70244	[BUG]  [BUGGY]  if(this  ==  obj)  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]          public  boolean  equals(Object  obj)  {          [BUGGY]  if(this  ==  obj)  {  return  true;  }  [BUGGY]          if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  obj)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	11708	2
