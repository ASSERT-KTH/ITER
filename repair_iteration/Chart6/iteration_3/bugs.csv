bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
8900	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();      [BUGGY]  Shape  shape  =  getShape(stream.readInt());  if(count!=  0)  {  setShape(count,  SerialUtilities.readShape(stream));  }  [BUGGY]      int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	Shape  shape  =  getShape(stream.readInt());  if(count!=  0)  {  setShape(count,  SerialUtilities.readShape(stream));  }	  	compilable	  [FE]  AssertionFailedError	1484	2
8901	[BUG]  [BUGGY]  Shape  shape  =  getShape(stream.readInt());  if(count!=  0)  {  setShape(count,  SerialUtilities.readShape(stream));  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();      [BUGGY]  Shape  shape  =  getShape(stream.readInt());  if(count!=  0)  {  setShape(count,  SerialUtilities.readShape(stream));  }  [BUGGY]      int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	Shape  shape  =  getShape(stream.readInt());  if(count!=  0)  {  setShape(count,  SerialUtilities.readShape(stream));  }	  	compilable	  [FE]  AssertionFailedError	1484	2
1946	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  return  true;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	325	2
1947	[BUG]  [BUGGY]  if(obj  ==  null)  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  return  true;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	325	2
7671	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {      [BUGGY]  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1279	2
7672	[BUG]  [BUGGY]  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {      [BUGGY]  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1279	2
6530	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	1089	2
6531	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  2);  SerialUtilities.writeShape(shape,  stream);	  stream.writeInt(i    +    1);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	1089	2
8473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();      [BUGGY]  final  int  count  =  stream.readInt();  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	final  int  count  =  stream.readInt();	  final    int    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	1413	2
8474	[BUG]  [BUGGY]  final  int  count  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();      [BUGGY]  final  int  count  =  stream.readInt();  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	final  int  count  =  stream.readInt();	  final    int    shape    =    stream.readInt();    	compilable	  [FE]  AssertionFailedError	1413	2
9327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  int  size  =  stream.readInt();  [BUGGY]      if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	int  size  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	1555	2
9328	[BUG]  [BUGGY]  int  size  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  int  size  =  stream.readInt();  [BUGGY]      if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	int  size  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	1555	2
4622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();      [BUGGY]  stream.writeInt(2);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	771	2
4623	[BUG]  [BUGGY]  stream.writeInt(2);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();      [BUGGY]  stream.writeInt(2);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	771	2
10377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index!=  0)  {  return;  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =(Shape)stream.readObject();  if(index!=  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	1730	2
10378	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index!=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Shape  shape  =(Shape)stream.readObject();  if(index!=  0)  {  return;  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =(Shape)stream.readObject();  if(index!=  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	1730	2
5840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i  +  2);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	stream.writeInt(i  +  2);	  	compilable	  [FE]  AssertionFailedError	974	2
5841	[BUG]  [BUGGY]  stream.writeInt(i  +  2);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i  +  2);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i  +  2);	  	compilable	  [FE]  AssertionFailedError	974	2
2211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }      [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]      return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	1	add	if(!(obj  instanceof  ShapeList)||(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	369	2
2212	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }      [BUGGY]  if(!(obj  instanceof  ShapeList)||(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]      return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	1	replace	if(!(obj  instanceof  ShapeList)||(obj!=  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	369	2
7569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {      [BUGGY]  stream.writeInt(-3);  [BUGGY]      stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(-3);	  	compilable	  [FE]  AssertionFailedError	1262	2
7570	[BUG]  [BUGGY]  stream.writeInt(-3);  [FE]  AssertionFailedError  [CONTEXT]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {      [BUGGY]  stream.writeInt(-3);  [BUGGY]      stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-3);	  	compilable	  [FE]  AssertionFailedError	1262	2
6278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	1047	2
6279	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	1047	2
6091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1016	2
6092	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1016	2
3110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  Shape  getShape(int  index)  {      [BUGGY]  return(Shape)this.get(index  -  2);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)this.get(index  -  2);	  return(Shape)this.get(index    -    1);    	compilable	  [FE]  AssertionFailedError	519	2
3111	[BUG]  [BUGGY]  return(Shape)this.get(index  -  2);  [FE]  AssertionFailedError  [CONTEXT]      public  Shape  getShape(int  index)  {      [BUGGY]  return(Shape)this.get(index  -  2);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)this.get(index  -  2);	  return(Shape)this.get(index    -    1);    	compilable	  [FE]  AssertionFailedError	519	2
8649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();      [BUGGY]  float  shape  =(float)stream.readInt();  [BUGGY]      int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	add	float  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	1442	2
8650	[BUG]  [BUGGY]  float  shape  =(float)stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();      [BUGGY]  float  shape  =(float)stream.readInt();  [BUGGY]      int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	replace	float  shape  =(float)stream.readInt();	  	compilable	  [FE]  AssertionFailedError	1442	2
6560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  stream.writeInt(1);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	1094	2
6561	[BUG]  [BUGGY]  stream.writeInt(1);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  stream.writeInt(1);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	1094	2
8288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {      [BUGGY]  SerialUtilities.readStroke(stream);  [BUGGY]      stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	SerialUtilities.readStroke(stream);	  	compilable	  [FE]  AssertionFailedError	1382	2
8289	[BUG]  [BUGGY]  SerialUtilities.readStroke(stream);  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {      [BUGGY]  SerialUtilities.readStroke(stream);  [BUGGY]      stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	SerialUtilities.readStroke(stream);	  	compilable	  [FE]  AssertionFailedError	1382	2
7173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1196	2
7174	[BUG]  [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1196	2
7178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  1);	  	compilable	  [FE]  AssertionFailedError	1197	2
7179	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  1);	  	compilable	  [FE]  AssertionFailedError	1197	2
7179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(i++);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i++);	  	compilable	  [FE]  AssertionFailedError	1197	2
7180	[BUG]  [BUGGY]  stream.writeInt(i++);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(i++);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i++);	  	compilable	  [FE]  AssertionFailedError	1197	2
1946	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  }	  	compilable	  [FE]  AssertionFailedError	325	2
1947	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  return  true;  }	  	compilable	  [FE]  AssertionFailedError	325	2
1947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	325	2
1948	[BUG]  [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj!=  null)  {  if(!(obj  instanceof  ShapeList))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	325	2
10376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  SerialUtilities.readPaint(stream);  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	SerialUtilities.readPaint(stream);	  	compilable	  [FE]  AssertionFailedError	1730	2
10377	[BUG]  [BUGGY]  SerialUtilities.readPaint(stream);  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  SerialUtilities.readPaint(stream);  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	SerialUtilities.readPaint(stream);	  	compilable	  [FE]  AssertionFailedError	1730	2
5415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  stream.writeInt(2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	903	2
5416	[BUG]  [BUGGY]  stream.writeInt(2);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  stream.writeInt(2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	stream.writeInt(2);	  	compilable	  [FE]  AssertionFailedError	903	2
4191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(1);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	699	2
4192	[BUG]  [BUGGY]  stream.writeInt(1);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(1);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError	699	2
7177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1197	2
7178	[BUG]  [BUGGY]  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	1197	2
4322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();      [BUGGY]  int  size  =  size();  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	add	int  size  =  size();	  	compilable	  [FE]  AssertionFailedError	721	2
4323	[BUG]  [BUGGY]  int  size  =  size();  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();      [BUGGY]  int  size  =  size();  [BUGGY]      stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	replace	int  size  =  size();	  	compilable	  [FE]  AssertionFailedError	721	2
4802	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	add	stream.writeInt(count  *  2);	  stream.writeInt(count    -    2);    	compilable	  [FE]  AssertionFailedError	801	2
4803	[BUG]  [BUGGY]  stream.writeInt(count  *  2);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();      [BUGGY]  stream.writeInt(count  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	replace	stream.writeInt(count  *  2);	  stream.writeInt(count    -    2);    	compilable	  [FE]  AssertionFailedError	801	2
6536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  stream.writeInt(i  -  1);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  1);	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	1090	2
6537	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  stream.writeInt(i  -  1);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  1);	  stream.writeInt(i    +    2);    	compilable	  [FE]  AssertionFailedError	1090	2
9512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(i!=  0)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]      int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	add	Shape  shape  =  SerialUtilities.readShape(stream);  if(i!=  0)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  	compilable	  [FE]  AssertionFailedError	1586	2
9513	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(i!=  0)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  if(i!=  0)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]      int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);  if(i!=  0)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  	compilable	  [FE]  AssertionFailedError	1586	2
3110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  Shape  getShape(int  index)  {      [BUGGY]  return(Shape)this.get(index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	add	return(Shape)this.get(index);	  return(Shape)this.get(index    -    1);    	compilable	  [FE]  AssertionFailedError	519	2
3111	[BUG]  [BUGGY]  return(Shape)this.get(index);  [FE]  AssertionFailedError  [CONTEXT]      public  Shape  getShape(int  index)  {      [BUGGY]  return(Shape)this.get(index);  [BUGGY]      }  [CLASS]  ShapeList  [METHOD]  getShape  [RETURN_TYPE]  Shape  int  index  [VARIABLES]  boolean  int  index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	replace	return(Shape)this.get(index);	  return(Shape)this.get(index    -    1);    	compilable	  [FE]  AssertionFailedError	519	2
10412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Shape  shape  =  getShape(index  +  2);  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  2);	  Shape    shape    =    getShape(index    +    1);    	compilable	  [FE]  AssertionFailedError	1736	2
10413	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  2);  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Shape  shape  =  getShape(index  +  2);  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  2);	  Shape    shape    =    getShape(index    +    1);    	compilable	  [FE]  AssertionFailedError	1736	2
1951	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	326	2
1952	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  false;  }	  if(obj    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	326	2
1952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }	  if(obj    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	326	2
1953	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(!(obj  instanceof  ShapeList))  {  return  true;  }	  if(obj    ==    null)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	326	2
1958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(obj  ==  this)  {  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null)  {  if(obj  ==  this)  {  return  false;  }	  if(obj    ==    this)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	327	2
1959	[BUG]  [BUGGY]  if(obj  ==  null)  {  if(obj  ==  this)  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null)  {  if(obj  ==  this)  {  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null)  {  if(obj  ==  this)  {  return  false;  }	  if(obj    ==    this)    {    return    false;    }    	compilable	  [FE]  AssertionFailedError	327	2
6283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }	  SerialUtilities.writeShape(shape,    stream);    if(shape!=    null)    {    stream.writeInt(i);    }    	compilable	  [FE]  AssertionFailedError	1048	2
6284	[BUG]  [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(i);  }	  SerialUtilities.writeShape(shape,    stream);    if(shape!=    null)    {    stream.writeInt(i);    }    	compilable	  [FE]  AssertionFailedError	1048	2
6284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }	  SerialUtilities.writeShape(shape,    stream);    if(shape!=    null)    {    stream.writeInt(i);    }    	compilable	  [FE]  AssertionFailedError	1048	2
6285	[BUG]  [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  if(shape!=  null)  {  stream.writeInt(-1);  }	  SerialUtilities.writeShape(shape,    stream);    if(shape!=    null)    {    stream.writeInt(i);    }    	compilable	  [FE]  AssertionFailedError	1048	2
8222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {      [BUGGY]  stream.defaultReadObject();  if(stream!=  null)  {  stream.close();  }  [BUGGY]      stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	stream.defaultReadObject();  if(stream!=  null)  {  stream.close();  }	  if(stream!=    null)    {    stream.close();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	1371	2
8223	[BUG]  [BUGGY]  stream.defaultReadObject();  if(stream!=  null)  {  stream.close();  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {      [BUGGY]  stream.defaultReadObject();  if(stream!=  null)  {  stream.close();  }  [BUGGY]      stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	stream.defaultReadObject();  if(stream!=  null)  {  stream.close();  }	  if(stream!=    null)    {    stream.close();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	1371	2
8905	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();      [BUGGY]  if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]      int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	add	if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  Shape    shape    =    getShape(stream.readInt());    	compilable	  [FE]  AssertionFailedError	1485	2
8906	[BUG]  [BUGGY]  if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();      [BUGGY]  if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }  [BUGGY]      int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	replace	if(count  >  0)  {  int  i  =  stream.readInt();  if(i!=  -1)  {  setShape(i,  SerialUtilities.readShape(stream));  }	  Shape    shape    =    getShape(stream.readInt());    	compilable	  [FE]  AssertionFailedError	1485	2
9763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }	  if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	1628	2
9764	[BUG]  [BUGGY]  if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  IllegalArgumentException( " ");  }	  if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	1628	2
9764	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	1628	2
9765	[BUG]  [BUGGY]  if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  0)  {  if(index  ==  stream.readInt())  {  throw  new  ClassNotFoundException( " ");  }	  if(index!=    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	1628	2
7178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	1197	2
7179	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	1197	2
7184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(-2);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(-2);	  stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	1198	2
7185	[BUG]  [BUGGY]  stream.writeInt(-2);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  stream.writeInt(-2);  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(-2);	  stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	1198	2
10195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [BUGGY]      }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	1700	2
10196	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Shape  shape  =  SerialUtilities.readShape(stream);  [BUGGY]      }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  SerialUtilities.readShape(stream);	  	compilable	  [FE]  AssertionFailedError	1700	2
10197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]      }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	int  shape  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	1700	2
10198	[BUG]  [BUGGY]  int  shape  =  stream.readInt();  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  int  shape  =  stream.readInt();  [BUGGY]      }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	int  shape  =  stream.readInt();	  	compilable	  [FE]  AssertionFailedError	1700	2
1814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(!(obj  ==  this))  {  [BUGGY]      return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	1	add	if(!(obj  ==  this))  {	  if(!(obj    instanceof    ShapeList))    {    	compilable	  [FE]  AssertionFailedError	303	2
1815	[BUG]  [BUGGY]  if(!(obj  ==  this))  {  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(!(obj  ==  this))  {  [BUGGY]      return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	1	replace	if(!(obj  ==  this))  {	  if(!(obj    instanceof    ShapeList))    {    	compilable	  [FE]  AssertionFailedError	303	2
1947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	325	2
1948	[BUG]  [BUGGY]  if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  obj)  {  if(!(obj  instanceof  ShapeList))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	325	2
7004	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(-1);  }  [BUGGY]      }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(-1);  }	  SerialUtilities.writeShape(shape,    stream);    if(i    >    0)    {    stream.writeInt(i);    }    	compilable	  [FE]  AssertionFailedError	1168	2
7005	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(-1);  }  [BUGGY]      }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	SerialUtilities.writeShape(shape,  stream);  if(i  >  0)  {  stream.writeInt(-1);  }	  SerialUtilities.writeShape(shape,    stream);    if(i    >    0)    {    stream.writeInt(i);    }    	compilable	  [FE]  AssertionFailedError	1168	2
7184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	1198	2
7185	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    	compilable	  [FE]  AssertionFailedError	1198	2
2210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }      [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]      return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	add	if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	369	2
2211	[BUG]  [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {  if  (obj  ==  this)  {  return  true;  }      [BUGGY]  if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;  [BUGGY]      return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	replace	if(!(obj  instanceof  ShapeList)&&(obj  ==  null  ||  obj.getClass()!=  getClass()))  return  true;	  	compilable	  [FE]  AssertionFailedError	369	2
1947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	325	2
1948	[BUG]  [BUGGY]  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]      public  boolean  equals(Object  obj)  {      [BUGGY]  if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }  [BUGGY]      if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  ==  null  ||!(obj  instanceof  ShapeList))  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError	325	2
6734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1123	2
6735	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1123	2
6735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1123	2
6736	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1123	2
9800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  -1)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  -1)  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1634	2
9801	[BUG]  [BUGGY]  if(index  <  -1)  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  -1)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  -1)  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1634	2
9801	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  -1)  {  return;  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index  <  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	1634	2
9802	[BUG]  [BUGGY]  if(index  <  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index  <  -1)  {  return;  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index  <  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	1634	2
4111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  if(stream  ==  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	if(stream  ==  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	686	2
4112	[BUG]  [BUGGY]  if(stream  ==  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  if(stream  ==  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	if(stream  ==  null)  {  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	686	2
7202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	1201	2
7203	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	1201	2
7203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1201	2
7204	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1201	2
6091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null)  {  stream.writeInt(-1);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1016	2
6092	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(-1);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  stream.writeInt(-1);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1016	2
6697	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	1117	2
6698	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	1117	2
6698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1117	2
6699	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1117	2
6699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1117	2
6700	[BUG]  [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  instanceof  SerialUtilities)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }	  	compilable	  [FE]  AssertionFailedError	1117	2
9758	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1627	2
9759	[BUG]  [BUGGY]  if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  ClassNotFoundException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1627	2
9759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	add	if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1627	2
9760	[BUG]  [BUGGY]  if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();      [BUGGY]  if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	replace	if(index!=  -1)  {  return;  }  else  if(index  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError	1627	2
6710	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1119	2
6711	[BUG]  [BUGGY]  if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape  ==  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  }	  	compilable	  [FE]  AssertionFailedError	1119	2
6711	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  return;  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  return;  }	  	compilable	  [FE]  AssertionFailedError	1119	2
6712	[BUG]  [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  return;  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  return;  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  }  else  {  SerialUtilities.writeShape(shape,  stream);  return;  }	  	compilable	  [FE]  AssertionFailedError	1119	2
8222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {      [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	add	if(stream!=  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }	  if(stream!=    null)    {    stream.close();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	1371	2
8223	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {      [BUGGY]  if(stream!=  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }  [BUGGY]      stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {  setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	replace	if(stream!=  null)  {  stream.close();  }  else  if(stream.readObject()  ==  null)  {  throw  new  ClassNotFoundException( " ");  }	  if(stream!=    null)    {    stream.close();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  AssertionFailedError	1371	2
5415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  stream.writeInt(-3);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	add	stream.writeInt(-3);	  	compilable	  [FE]  AssertionFailedError	903	2
5416	[BUG]  [BUGGY]  stream.writeInt(-3);  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);      [BUGGY]  stream.writeInt(-3);  [BUGGY]      for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	replace	stream.writeInt(-3);	  	compilable	  [FE]  AssertionFailedError	903	2
6740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1124	2
6741	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1124	2
10377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Object  shape  =(Shape)stream.readObject();  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Object  shape  =(Shape)stream.readObject();	  	compilable	  [FE]  AssertionFailedError	1730	2
10378	[BUG]  [BUGGY]  Object  shape  =(Shape)stream.readObject();  [FE]  AssertionFailedError  [CONTEXT]      private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {      [BUGGY]  Object  shape  =(Shape)stream.readObject();  [BUGGY]      setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Object  shape  =(Shape)stream.readObject();	  	compilable	  [FE]  AssertionFailedError	1730	2
6740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1124	2
6741	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {      [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	1124	2
7208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	1202	2
7209	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);      [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape!=    null)    {    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(-1);    }    	compilable	  [FE]  AssertionFailedError	1202	2
