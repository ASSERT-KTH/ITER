bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Shapes.writeShape(shape,  stream);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Shapes.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shapes.writeShape(shape,  stream);	          SerialUtilities.writeShape(shape,    stream);    Shapes.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
2	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().writeShape(shape,  stream);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Thread.currentThread().getContextClassLoader().writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Thread.currentThread().getContextClassLoader().writeShape(shape,  stream);	          SerialUtilities.writeShape(shape,    stream);    Thread.currentThread().getContextClassLoader().writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
3	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream.readInt());  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Shape  shape  =  getShape(i,  stream.readInt());  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =  getShape(i,  stream.readInt());	  Shape    shape    =    getShape(i,    stream);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
4	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(i  +  1);	  stream.writeInt(i);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
5	[BUG]  [BUGGY]  SerialUtilities.writePaint(shape,  stream,  0);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writePaint(shape,  stream,  0);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writePaint(shape,  stream,  0);	  SerialUtilities.writePaint(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
6	[BUG]  [BUGGY]  SerialUtilities.writePaint(shape,  stream,  i);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writePaint(shape,  stream,  i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writePaint(shape,  stream,  i);	  SerialUtilities.writePaint(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
7	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  i);  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeShape(shape,  i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  i);	  SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
8	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  1);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeShape(shape,  stream,  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream,  1);	  SerialUtilities.writeShape(shape,    stream,    i);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
9	[BUG]  [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null    ||    shape.equals(getShape(i)))    {    if(shape  ==  null  ||  shape.equals(getShape(i)))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
10	[BUG]  [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape!=  null  ||  shape.equals(getShape(i)))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape!=  null  ||  shape.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null    ||    shape.equals(getShape(i)))    {    if(shape!=  null  ||  shape.equals(getShape(i)))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
11	[BUG]  [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape  ==  null  ||  pattern.equals(getShape(i)))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape  ==  null  ||  pattern.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null    ||    shape.equals(getShape(i)))    {    if(shape  ==  null  ||  pattern.equals(getShape(i)))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
13	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
15	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
16	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  serialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  serialUtilities  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  serialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  serialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  serialUtilities	6	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null  &&  shape.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null  &&  shape.equals(getShape(i)))  {	  if(shape    ==    null    ||    shape.equals(getShape(i)))    {    	compilable	  [FE]  AssertionFailedError  	23	2	replace
18	[BUG]  [BUGGY]  if(shape!=  null  &&  shape.equals(getShape(i)))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null  &&  shape.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null  &&  shape.equals(getShape(i)))  {	  if(shape    ==    null    ||    shape.equals(getShape(i)))    {    	compilable	  [FE]  AssertionFailedError  	23	2	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null  ||  shape.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape!=  null  ||  shape.equals(getShape(i)))  {	  if(shape    ==    null    ||    shape.equals(getShape(i)))    {    	compilable	  [FE]  AssertionFailedError  	23	2	replace
20	[BUG]  [BUGGY]  if(shape!=  null  ||  shape.equals(getShape(i)))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null  ||  shape.equals(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null  ||  shape.equals(getShape(i)))  {	  if(shape    ==    null    ||    shape.equals(getShape(i)))    {    	compilable	  [FE]  AssertionFailedError  	23	2	replace
21	[BUG]  [BUGGY]  Shape.writeShape(shape,  stream);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Shape.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape.writeShape(shape,  stream);	          SerialUtilities.writeShape(shape,    stream);    ShapeShape.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
22	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().appendShape(shape,  stream);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Thread.currentThread().getContextClassLoader().appendShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Thread.currentThread().getContextClassLoader().appendShape(shape,  stream);	          SerialUtilities.writeShape(shape,    stream);    Thread.currentThread().getContextClassLoader().appendShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
23	[BUG]  [BUGGY]  if(shape!=  null)  {  If(shape  ==  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  If(shape  ==  null)  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  If(shape  ==  null)  {	  if(shape    ==    null)    {    If(shape    ==    null)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
24	[BUG]  [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  }	          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	                SerialUtilities.writeShape(shape,        stream);        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
26	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	                SerialUtilities.writeShape(shape,        stream);        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
28	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	3	2	add
29	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  serialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  serialUtilities  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  serialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  serialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  serialUtilities	3	None	add
30	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.get(i  +  1);  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Shape  shape  =(Shape)stream.get(i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =(Shape)stream.get(i  +  1);	  Shape    shape    =(Shape)stream.get(i);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
31	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =(Shape)stream.readObject();	  Shape    shape    =    getShape(stream);    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
32	[BUG]  [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape  ==  null  ||  ShapeUtilities.isShape(getShape(i)))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  if(shape  ==  null  ||  ShapeUtilities.isShape(getShape(i)))  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null    ||    shape.equals(getShape(i)))    {    if(shape  ==  null  ||  ShapeUtilities.isShape(getShape(i)))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
33	[BUG]  [BUGGY]  SerialUtilities.writePaint(shape,  i);  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writePaint(shape,  i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writePaint(shape,  i);	  SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
34	[BUG]  [BUGGY]  ShapeShape.writeShape(shape,  stream);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  ShapeShape.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	ShapeShape.writeShape(shape,  stream);	          SerialUtilities.writeShape(shape,    stream);    ShapeShape.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
36	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
37	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);Stream.writeInt(i);  [CE]  cannot  find  symbol  Stream  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);Stream.writeInt(i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);Stream.writeInt(i);	  	non-compiled	[CE]  cannot  find  symbol  Stream	6	None	add
38	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  i,  stream);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeShape(shape,  i,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  i,  stream);	          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
39	[BUG]  [BUGGY]  if(shape!=  null)  {  If(shape!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  if(shape!=  null)  {  If(shape!=  null)  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape!=  null)  {  If(shape!=  null)  {	  if(shape    ==    null)    {    If(shape    ==    null)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
40	[BUG]  [BUGGY]  stream.writeInt(shape.length);  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  stream.writeInt(shape.length);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(shape.length);	  stream.writeInt(i);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
41	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  i  +  1);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeShape(shape,  stream,  i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream,  i  +  1);	  SerialUtilities.writeShape(shape,    stream,    i);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
42	[BUG]  [BUGGY]  SerialUtilities.writeStroke(shape,  stream);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  SerialUtilities.writeStroke(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeStroke(shape,  stream);	  SerialUtilities.writePaint(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
44	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        stream.writeInt(i);    SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
45	[BUG]  [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.copyShape(shape,  stream);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]          SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  SerialUtilities.copyShape(shape,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	                SerialUtilities.writeShape(shape,        stream);        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);  SerialUtilities.copyShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
46	[BUG]  [BUGGY]  If(shape!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);      [BUGGY]  If(shape!=  null)  {  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	If(shape!=  null)  {	  if(shape    ==    null)    {    If(shape    ==    null)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
