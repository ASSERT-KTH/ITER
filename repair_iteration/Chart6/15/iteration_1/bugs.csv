bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	    SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError  	30	2	add
2	[BUG]  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	    SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError  	30	2	add
3	[BUG]  [BUGGY]    Shape  shape  =  getShape(i);  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]    Shape  shape  =  getShape(i);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	    Shape  shape  =  getShape(i);		non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	30	None	add
4	[BUG]  [BUGGY]    Shape  shape  =  getShape(i);  stream.writeInt(i);  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]    Shape  shape  =  getShape(i);  stream.writeInt(i);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	    Shape  shape  =  getShape(i);  stream.writeInt(i);		non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	30	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  if(shape  ==  null)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape  ==  null)  {	if  (shape  !=  null)  {  	compilable	  [FE]  AssertionFailedError  	29	2	replace
6	[BUG]  [BUGGY]  if(shape  ==  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]  if(shape  ==  null)  {  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape  ==  null)  {	if  (shape  !=  null)  {  	compilable	  [FE]  AssertionFailedError  	29	2	replace
7	[BUG]  [BUGGY]    Shape  shape  =(Shape)shape.clone();  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]    Shape  shape  =(Shape)shape.clone();  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	    Shape  shape  =(Shape)shape.clone();		non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	30	None	add
8	[BUG]  [BUGGY]    Shape  shape  =(Shape)shape.get(i);  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  [BUGGY]    Shape  shape  =(Shape)shape.get(i);  [BUGGY]  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	    Shape  shape  =(Shape)shape.get(i);		non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	30	None	add
