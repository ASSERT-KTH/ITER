bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Shape  shape  =  getShape(stream);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  Shape  shape  =  getShape(stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =  getShape(stream);	      Shape    shape    =    getShape(i);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
2	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream);  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  Shape  shape  =  getShape(i,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =  getShape(i,  stream);	      Shape    shape    =    getShape(i);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
4	[BUG]  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	        SerialUtilities.writeShape(shape,    stream);    SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
5	[BUG]  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  Thread.currentThread().getContextClassLoader().writeShape(shape,  stream);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  Thread.currentThread().getContextClassLoader().writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	        SerialUtilities.writeShape(shape,    stream);    Thread.currentThread().getContextClassLoader().writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	        SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
7	[BUG]  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	        SerialUtilities.writeShape(shape,    stream);    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
8	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  0);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  SerialUtilities.writeShape(shape,  stream,  0);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream,  0);	      SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
9	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  i);  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  SerialUtilities.writeShape(shape,  stream,  i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(shape,  stream,  i);	      SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
10	[BUG]  [BUGGY]  if(shape  ==  null)  {  if(shape  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape  ==  null)  {  if(shape  ==  null)  {  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null)    {    if(shape  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
11	[BUG]  [BUGGY]  if(shape  ==  null)  {  if(shape!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape  ==  null)  {  if(shape!=  null)  {  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null)    {    if(shape!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
12	[BUG]  [BUGGY]  if(shape  ==  null)  {  If(shape  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape  ==  null)  {  If(shape  ==  null)  {  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape    ==    null)    {    If(shape  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
13	[BUG]  [BUGGY]  Shape  shape  =(Shape)shape.getObject();  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  Shape  shape  =(Shape)shape.getObject();  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =(Shape)shape.getObject();	      Shape    shape    =(Shape)shape.clone();    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
14	[BUG]  [BUGGY]  stream.writeInt(i);  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  stream.writeInt(i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	stream.writeInt(i);	      Shape    shape    =    getShape(i);    stream.writeInt(i);    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
15	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.get(i);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  Shape  shape  =(Shape)stream.get(i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =(Shape)stream.get(i);	      Shape    shape    =(Shape)shape.get(i);    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
16	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  i);  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  SerialUtilities.writeShape(stream,  i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writeShape(stream,  i);	      Shape    shape    =    getShape(i);    stream.writeInt(i);    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
17	[BUG]  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  Shapes.writeShape(shape,  stream);  [CE]  cannot  find  symbol  Shapes  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  Shapes.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	        SerialUtilities.writeShape(shape,    stream);    Shapes.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  Shapes	1	None	add
18	[BUG]  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  ShapeShape.writeShape(shape,  stream);  [CE]  cannot  find  symbol  ShapeShape  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  ShapeShape.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	        SerialUtilities.writeShape(shape,    stream);    ShapeShape.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  ShapeShape	1	None	add
19	[BUG]  [BUGGY]  SerialUtilities.writePaint(shape,  stream);  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  SerialUtilities.writePaint(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	SerialUtilities.writePaint(shape,  stream);	      SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
20	[BUG]  [BUGGY]      SerialUtilities.writeShape(shape,  stream);  Thread.currentThread().getContextClassLoader().appendShape(shape,  stream);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]      SerialUtilities.writeShape(shape,  stream);  Thread.currentThread().getContextClassLoader().appendShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	        SerialUtilities.writeShape(shape,    stream);    Thread.currentThread().getContextClassLoader().appendShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
21	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  Shape  shape  =  getShape(i  +  1);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	Shape  shape  =  getShape(i  +  1);	      Shape    shape    =    getShape(i);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	add	if(shape  ==  null  ||  shape.equals(getShape(i)))  {	  if(shape    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
23	[BUG]  [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);    [BUGGY]  if(shape  ==  null  ||  shape.equals(getShape(i)))  {  [BUGGY]    stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	replace	if(shape  ==  null  ||  shape.equals(getShape(i)))  {	  if(shape    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
