bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(i);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(i);	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError  	35	2	replace
2	[BUG]  [BUGGY]  stream.writeInt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(i);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(i);	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError  	35	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(0);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	stream.writeInt(0);	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError  	35	2	replace
4	[BUG]  [BUGGY]  stream.writeInt(0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(0);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(0);	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError  	35	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	  	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError  	35	2	replace
6	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	  	stream.writeInt(-1);  	compilable	  [FE]  AssertionFailedError  	35	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	    SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError  	36	2	add
8	[BUG]  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	    SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError  	36	2	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	add	    stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError  	36	2	add
10	[BUG]  [BUGGY]    stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	    stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);		compilable	  [FE]  AssertionFailedError  	36	2	add
11	[BUG]  [BUGGY]  stream.writeInt(-1L);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]  stream.writeInt(-1L);  [BUGGY]  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	stream.writeInt(-1L);	stream.writeInt(-1);  	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	35	None	replace
12	[BUG]  [BUGGY]    SerialUtilities.writeShape(shape);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  [BUGGY]    SerialUtilities.writeShape(shape);  [BUGGY]  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	replace	    SerialUtilities.writeShape(shape);		non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	36	None	add
