bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(shape,  stream);	      SerialUtilities.writeShape(stream);    	non-compiled	[CE]  cannot  find  symbol  shape	9	None	replace
2	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  i);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(this.shape,  stream,  i);	      SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	3	None	replace
3	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  count);  [CE]  cannot  find  symbol  shape  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  count);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(this.shape,  stream,  count);	      SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	3	None	replace
4	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  Shape  shape  =  getShape(i  +  1);  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i  +  1);  Shape  shape  =  getShape(i  +  1);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape    shape    =    getShape(i    +    1);    Shape  shape  =  getShape(i  +  1);	  	non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	7	None	add
5	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  Pattern  shape  =  getShape(i  +  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i  +  1);  Pattern  shape  =  getShape(i  +  1);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape    shape    =    getShape(i    +    1);    Pattern  shape  =  getShape(i  +  1);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
6	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  Thread  thread  =  Thread.currentThread();  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i  +  1);  Thread  thread  =  Thread.currentThread();  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape    shape    =    getShape(i    +    1);    Thread  thread  =  Thread.currentThread();	  	non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	7	None	add
7	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  i);  [CE]  cannot  find  symbol  shape  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(shape,  stream,  i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(shape,  stream,  i);	      SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  cannot  find  symbol  shape	4	None	replace
8	[BUG]  [BUGGY]  Shape  shape  =  getShape(stream,  i);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(stream,  i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(stream,  i);	  Shape    shape    =    getShape(i,    stream);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	1	None	replace
9	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  serial);  [CE]  cannot  find  symbol  serial  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i,  stream,  serial);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  serial);	  Shape    shape    =    getShape(i,    stream);    	non-compiled	[CE]  cannot  find  symbol  serial	1	None	replace
10	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  [CE]  cannot  find  symbol  shape  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  stream.writeInt(i  +  1);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i  +  1);	      stream.writeInt(i);    	non-compiled	[CE]  cannot  find  symbol  shape	6	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  stream.writeInt(i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	        stream.writeInt(i);    stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
12	[BUG]  [BUGGY]      stream.writeInt(i);  stream.writeInt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  stream.writeInt(i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	        stream.writeInt(i);    stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
13	[BUG]  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(this.shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	        stream.writeInt(i);    SerialUtilities.writeShape(this.shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	5	None	add
14	[BUG]  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(getShape(i));  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(getShape(i));  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	        stream.writeInt(i);    SerialUtilities.writeShape(getShape(i));	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	5	None	add
15	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  i,  count);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(stream,  i,  count);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  i,  count);	      SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	4	None	replace
16	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  i);  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(shape,  i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(shape,  i);	      SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  cannot  find  symbol  shape	4	None	replace
17	[BUG]  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(stream,  i);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(stream,  i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	        stream.writeInt(i);    SerialUtilities.writeShape(stream,  i);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	5	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	        stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
19	[BUG]  [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]      stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	        stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
20	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  ObjectOutputStream);  [CE]  cannot  find  symbol  ObjectOutputStream  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i,  stream,  ObjectOutputStream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  ObjectOutputStream);	  Shape    shape    =    getShape(i,    stream);    	non-compiled	[CE]  cannot  find  symbol  ObjectOutputStream	1	None	replace
21	[BUG]  [BUGGY]  stream.writeObject(i);  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  stream.writeObject(i);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeObject(i);	      stream.writeInt(i);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	6	None	replace
22	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i  +  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape    shape    =    getShape(i    +    1);    SerialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  variable  shape  is  already  defined  in  method  writeObject(ObjectOutputStream)	7	None	add
23	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1);  ObjectOutputStream  stream  =  getShape(i  +  1);  [CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  getShape(i  +  1);  ObjectOutputStream  stream  =  getShape(i  +  1);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape    shape    =    getShape(i    +    1);    ObjectOutputStream  stream  =  getShape(i  +  1);	  	non-compiled	[CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)	7	None	add
24	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.get(i);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =(Shape)stream.get(i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =(Shape)stream.get(i);	      	non-compiled	[CE]  cannot  find  symbol	2	None	replace
25	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =(Shape)stream.readObject();  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =(Shape)stream.readObject();	      	non-compiled	[CE]  cannot  find  symbol	2	None	replace
26	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  this.shape);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  SerialUtilities.writeShape(stream,  this.shape);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  this.shape);	      SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	3	None	replace
27	[BUG]  [BUGGY]  stream.writeInt(-1);  [CE]  cannot  find  symbol  shape  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  stream.writeInt(-1);  [BUGGY]    Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(-1);	      stream.writeInt(i);    	non-compiled	[CE]  cannot  find  symbol  shape	6	None	replace
28	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.writeShape(stream,  i);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {    [BUGGY]  Shape  shape  =  SerialUtilities.writeShape(stream,  i);  [BUGGY]    if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  SerialUtilities.writeShape(stream,  i);	      	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	2	None	replace
