bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  i,  stream);  [CE]  cannot  find  symbol  shape  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(shape,  i,  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(shape,  i,  stream);	  SerialUtilities.writeShape(stream,    i,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	15	None	replace
2	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.writeShape(stream));  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.writeShape(stream));  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  SerialUtilities.writeShape(stream));	  Shape    shape    =    getShape(i,    stream,    ObjectOutputStream);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	20	None	replace
3	[BUG]  [BUGGY]  Shape  shape  =(Shape)stream.getObject();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =(Shape)stream.getObject();  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =(Shape)stream.getObject();	  Shape    shape    =(Shape)stream.readObject();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
4	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  this.shape,  i);  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(stream,  this.shape,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  this.shape,  i);	  SerialUtilities.writeShape(stream,    this.shape);    	non-compiled	[CE]  cannot  find  symbol  shape	26	None	replace
5	[BUG]  [BUGGY]  Pattern  shape  =  getShape(i  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Pattern  shape  =  getShape(i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Pattern  shape  =  getShape(i  +  1);	  Shape    shape    =    getShape(i    +    1);    Pattern    shape    =    getShape(i    +    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
6	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  i  +  1);  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  i  +  1);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(this.shape,  stream,  i  +  1);	  SerialUtilities.writeShape(this.shape,    stream,    i);    	non-compiled	[CE]  cannot  find  symbol  shape	2	None	replace
7	[BUG]  [BUGGY]  Shape  shape  =(Shape)this.shape.get(i);  [CE]  cannot  find  symbol  shape  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =(Shape)this.shape.get(i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =(Shape)this.shape.get(i);	  Shape    shape    =(Shape)stream.get(i);    	non-compiled	[CE]  cannot  find  symbol  shape	24	None	replace
8	[BUG]  [BUGGY]  stream.writeInt(i,  count);  SerialUtilities.writeShape(getShape(i));  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i,  count);  SerialUtilities.writeShape(getShape(i));  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i,  count);  SerialUtilities.writeShape(getShape(i));	          stream.writeInt(i);    SerialUtilities.writeShape(getShape(i));    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	14	None	replace
9	[BUG]  [BUGGY]  stream.writeInt(i,  count);  SerialUtilities.writeShape(getShape(i),  stream);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i,  count);  SerialUtilities.writeShape(getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i,  count);  SerialUtilities.writeShape(getShape(i),  stream);	          stream.writeInt(i);    SerialUtilities.writeShape(getShape(i));    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	14	None	replace
10	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  i  +  1);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(stream,  i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  i  +  1);	  Shape    shape    =    getShape(i    +    1);    SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	22	None	replace
11	[BUG]  [BUGGY]  stream.writeInt(i,  count);  SerialUtilities.writeShape(stream,  i);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i,  count);  SerialUtilities.writeShape(stream,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i,  count);  SerialUtilities.writeShape(stream,  i);	          stream.writeInt(i);    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	17	None	replace
12	[BUG]  [BUGGY]  stream.writeInt(count  +  1);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(count  +  1);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(count  +  1);	  stream.writeInt(i    +    1);    	non-compiled	[CE]  cannot  find  symbol  shape	10	None	replace
13	[BUG]  [BUGGY]  stream  =  getShape(i  +  1);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream  =  getShape(i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream  =  getShape(i  +  1);	  Shape    shape    =    getShape(i    +    1);    ObjectOutputStream    stream    =    getShape(i    +    1);    	non-compiled	[CE]  incompatible  types	23	None	replace
14	[BUG]  [BUGGY]  ObjectOutputStream  stream  =  getShape(i  +  1);  [CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  ObjectOutputStream  stream  =  getShape(i  +  1);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	ObjectOutputStream  stream  =  getShape(i  +  1);	  Shape    shape    =    getShape(i    +    1);    ObjectOutputStream    stream    =    getShape(i    +    1);    	non-compiled	[CE]  variable  stream  is  already  defined  in  method  writeObject(ObjectOutputStream)	23	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  stream.writeInt(i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
16	[BUG]  [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  stream.writeInt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  stream.writeInt(i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        stream.writeInt(i);    SerialUtilities.writeShape(getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
18	[BUG]  [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  SerialUtilities.writeShape(getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        stream.writeInt(i);    SerialUtilities.writeShape(getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
19	[BUG]  [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  SerialUtilities.writeShape(getShape(i));  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  SerialUtilities.writeShape(getShape(i));  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        stream.writeInt(i);    SerialUtilities.writeShape(getShape(i));	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	11	None	add
20	[BUG]  [BUGGY]  stream.writeObject(i,  null);  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeObject(i,  null);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeObject(i,  null);	  stream.writeObject(i);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	21	None	replace
21	[BUG]  [BUGGY]  stream.writeObject(i,  0);  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeObject(i,  0);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeObject(i,  0);	  stream.writeObject(i);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	21	None	replace
22	[BUG]  [BUGGY]  Shape  shape  =  getShape(stream,  i,  stream);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(stream,  i,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(stream,  i,  stream);	  Shape    shape    =    getShape(stream,    i);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	8	None	replace
23	[BUG]  [BUGGY]  Shape  shape  =  getShape(stream,  i,  count);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(stream,  i,  count);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(stream,  i,  count);	  Shape    shape    =    getShape(stream,    i);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	8	None	replace
24	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.writeShape(stream,  i,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  SerialUtilities.writeShape(stream,  i,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  SerialUtilities.writeShape(stream,  i,  stream);	  Shape    shape    =    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	28	None	replace
25	[BUG]  [BUGGY]  Shape  shape  =  SerialUtilities.writeShape(stream,  i,  count);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  SerialUtilities.writeShape(stream,  i,  count);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  SerialUtilities.writeShape(stream,  i,  count);	  Shape    shape    =    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	28	None	replace
26	[BUG]  [BUGGY]  Thread  thread  =  Thread.currentThread();  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Thread  thread  =  Thread.currentThread();  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Thread  thread  =  Thread.currentThread();	  Shape    shape    =    getShape(i    +    1);    Thread    thread    =    Thread.currentThread();    	non-compiled	[CE]  cannot  find  symbol  shape	6	None	replace
27	[BUG]  [BUGGY]  thread  =  Thread.currentThread();  [CE]  cannot  find  symbol  thread  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  thread  =  Thread.currentThread();  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	thread  =  Thread.currentThread();	  Shape    shape    =    getShape(i    +    1);    Thread    thread    =    Thread.currentThread();    	non-compiled	[CE]  cannot  find  symbol  thread	6	None	replace
28	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(this.shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i  +  1);  SerialUtilities.writeShape(this.shape,  stream);	          stream.writeInt(i);    SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	13	None	replace
29	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  i);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  i);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  i);	  Shape    shape    =    getShape(i,    stream,    serial);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	9	None	replace
30	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  count);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  count);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  count);	  Shape    shape    =    getShape(i,    stream,    serial);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	9	None	replace
31	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  0);  [CE]  cannot  find  symbol  shape  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(this.shape,  stream,  0);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(this.shape,  stream,  0);	  SerialUtilities.writeShape(this.shape,    stream,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	3	None	replace
32	[BUG]  [BUGGY]  SerialUtilities.writeShape(this.shape,  i);  [CE]  cannot  find  symbol  shape  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(this.shape,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(this.shape,  i);	  SerialUtilities.writeShape(shape,    i);    	non-compiled	[CE]  cannot  find  symbol  shape	16	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        SerialUtilities.writeShape(this.getShape(i),    stream);    stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	18	2	add
34	[BUG]  [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        SerialUtilities.writeShape(this.getShape(i),    stream);    stream.writeInt(i);  SerialUtilities.writeShape(this.getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	18	2	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  SerialUtilities.writeShape(this.getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        SerialUtilities.writeShape(this.getShape(i),    stream);    SerialUtilities.writeShape(this.getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	18	2	add
36	[BUG]  [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  SerialUtilities.writeShape(this.getShape(i),  stream);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  SerialUtilities.writeShape(this.getShape(i),  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        SerialUtilities.writeShape(this.getShape(i),    stream);    SerialUtilities.writeShape(this.getShape(i),  stream);	  	compilable	  [FE]  AssertionFailedError  	18	2	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        stream.writeInt(i);    stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
38	[BUG]  [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        stream.writeInt(i);    stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  stream.writeInt(0);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
40	[BUG]  [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  stream.writeInt(0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(i);  stream.writeInt(0);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        stream.writeInt(i);    stream.writeInt(i);  stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
41	[BUG]  [BUGGY]  stream.writeObject(i,  size());  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeObject(i,  size());  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeObject(i,  size());	  stream.writeObject(i);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	21	None	replace
42	[BUG]  [BUGGY]  SerialUtilities.writeShape(i,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(i,  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(i,  stream);	  SerialUtilities.writeShape(shape,    stream);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	1	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  stream.writeInt(i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	                stream.writeInt(i);        SerialUtilities.writeShape(this.getShape(i),    stream);    stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	18	2	add
44	[BUG]  [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  stream.writeInt(i);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]          stream.writeInt(i);    SerialUtilities.writeShape(this.getShape(i),  stream);  stream.writeInt(i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	                stream.writeInt(i);        SerialUtilities.writeShape(this.getShape(i),    stream);    stream.writeInt(i);	  	compilable	  [FE]  AssertionFailedError  	18	2	add
45	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.BASE_SRC_OVER);  [CE]  cannot  find  symbol  BASE_SRC_OVER  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.BASE_SRC_OVER);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  SerialUtilities.BASE_SRC_OVER);	  Shape    shape    =    getShape(i,    stream,    ObjectOutputStream);    	non-compiled	[CE]  cannot  find  symbol  BASE_SRC_OVER	20	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i);  Thread  thread  =  Thread.currentThread();  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	add	Shape  shape  =  getShape(i);  Thread  thread  =  Thread.currentThread();	  Shape    shape    =    getShape(i    +    1);    Thread    thread    =    Thread.currentThread();    	compilable	  [FE]  AssertionFailedError  	6	2	replace
47	[BUG]  [BUGGY]  Shape  shape  =  getShape(i);  Thread  thread  =  Thread.currentThread();  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i);  Thread  thread  =  Thread.currentThread();  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i);  Thread  thread  =  Thread.currentThread();	  Shape    shape    =    getShape(i    +    1);    Thread    thread    =    Thread.currentThread();    	compilable	  [FE]  AssertionFailedError  	6	2	replace
48	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  i,  count,  size);  [CE]  size  has  private  access  in  AbstractObjectList  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(stream,  i,  count,  size);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  i,  count,  size);	  SerialUtilities.writeShape(stream,    i,    count);    	non-compiled	[CE]  size  has  private  access  in  AbstractObjectList	15	None	replace
49	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  i,  count,  type);  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(stream,  i,  count,  type);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  i,  count,  type);	  SerialUtilities.writeShape(stream,    i,    count);    	non-compiled	[CE]  cannot  find  symbol  type	15	None	replace
50	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  0);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  0);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  0);	  Shape    shape    =    getShape(i,    stream,    serial);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	9	None	replace
51	[BUG]  [BUGGY]  SerialUtilities.writeShape(i,  stream,  i);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(i,  stream,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(i,  stream,  i);	  SerialUtilities.writeShape(shape,    stream,    i);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	7	None	replace
52	[BUG]  [BUGGY]  stream.writeInt(i,  count);  [CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i,  count);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i,  count);	          stream.writeInt(i);    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  method  writeInt  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	17	None	replace
53	[BUG]  [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(getShape(i));  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i  +  1);  SerialUtilities.writeShape(getShape(i));  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i  +  1);  SerialUtilities.writeShape(getShape(i));	          stream.writeInt(i);    SerialUtilities.writeShape(getShape(i));    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	14	None	replace
54	[BUG]  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream,  i);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream,  i);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream,  i);	          stream.writeInt(i);    SerialUtilities.writeShape(stream,    i);    	non-compiled	[CE]  cannot  find  symbol  shape	17	None	replace
55	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  1,  stream);  [CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i  +  1,  stream);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i  +  1,  stream);	  Shape    shape    =    getShape(i    +    1);    Shape    shape    =    getShape(i    +    1);    	non-compiled	[CE]  method  getShape  in  class  ShapeList  cannot  be  applied  to  given  types;	4	None	replace
56	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.BASE_SRC);  [CE]  cannot  find  symbol  BASE_SRC  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.BASE_SRC);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  SerialUtilities.BASE_SRC);	  Shape    shape    =    getShape(i,    stream,    ObjectOutputStream);    	non-compiled	[CE]  cannot  find  symbol  BASE_SRC	20	None	replace
57	[BUG]  [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.NONE);  [CE]  cannot  find  symbol  NONE  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  Shape  shape  =  getShape(i,  stream,  SerialUtilities.NONE);  [BUGGY]      if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	Shape  shape  =  getShape(i,  stream,  SerialUtilities.NONE);	  Shape    shape    =    getShape(i,    stream,    ObjectOutputStream);    	non-compiled	[CE]  cannot  find  symbol  NONE	20	None	replace
58	[BUG]  [BUGGY]  SerialUtilities.writeShape(stream,  i,  count,  shape);  [CE]  cannot  find  symbol  shape  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  SerialUtilities.writeShape(stream,  i,  count,  shape);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	SerialUtilities.writeShape(stream,  i,  count,  shape);	  SerialUtilities.writeShape(stream,    i,    count);    	non-compiled	[CE]  cannot  find  symbol  shape	15	None	replace
59	[BUG]  [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {      [BUGGY]  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	replace	stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);	          stream.writeInt(i);    SerialUtilities.writeShape(getShape(i));    	non-compiled	[CE]  cannot  find  symbol  shape	14	None	replace
