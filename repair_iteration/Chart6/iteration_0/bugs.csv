bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	patch
1	[BUG] [BUGGY] super(); [FE] AssertionFailedError [CONTEXT] public ShapeList() { [BUGGY] super(); [BUGGY] } [CLASS] ShapeList [METHOD] <init> [RETURN_TYPE] ShapeList()  [VARIABLES] boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	59	59	2	
2	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public ShapeList() { super(); [BUGGY] } [BUGGY]  [CLASS] ShapeList [METHOD] <init> [RETURN_TYPE] ShapeList()  [VARIABLES] boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	60	60	2	
3	[BUG] [BUGGY] set(index, shape); [FE] AssertionFailedError [CONTEXT] public void setShape(int index, Shape shape) { [BUGGY] set(index, shape); [BUGGY] } [CLASS] ShapeList [METHOD] setShape [RETURN_TYPE] void  int index Shape shape [VARIABLES] Shape shape boolean int index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	81	81	2	
4	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void setShape(int index, Shape shape) { set(index, shape); [BUGGY] } [BUGGY]  [CLASS] ShapeList [METHOD] setShape [RETURN_TYPE] void  int index Shape shape [VARIABLES] Shape shape boolean int index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	82	82	2	
5	[BUG] [BUGGY] if (obj == this) { [FE] AssertionFailedError [CONTEXT] public boolean equals(Object obj) { [BUGGY] if (obj == this) { [BUGGY] return true; } if (!(obj instanceof ShapeList)) { return false; } return super.equals(obj); } [CLASS] ShapeList [METHOD] equals [RETURN_TYPE] boolean  Object obj [VARIABLES] boolean Object obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	
6	[BUG] [BUGGY] if (!(obj instanceof ShapeList)) { [FE] AssertionFailedError [CONTEXT] public boolean equals(Object obj) { if (obj == this) { return true; } [BUGGY] if (!(obj instanceof ShapeList)) { [BUGGY] return false; } return super.equals(obj); } [CLASS] ShapeList [METHOD] equals [RETURN_TYPE] boolean  Object obj [VARIABLES] boolean Object obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	108	108	2	
7	[BUG] [BUGGY] return super.equals(obj); [FE] AssertionFailedError [CONTEXT] public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof ShapeList)) { return false; } [BUGGY] return super.equals(obj); [BUGGY]  } [CLASS] ShapeList [METHOD] equals [RETURN_TYPE] boolean  Object obj [VARIABLES] boolean Object obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	111	111	2	
8	[BUG] [BUGGY] return (Shape) get(index); [FE] AssertionFailedError [CONTEXT] public Shape getShape(int index) { [BUGGY] return (Shape) get(index); [BUGGY] } [CLASS] ShapeList [METHOD] getShape [RETURN_TYPE] Shape  int index [VARIABLES] boolean int index  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	70	70	2	
9	[BUG] [BUGGY] return super.hashCode(); [FE] AssertionFailedError [CONTEXT] public int hashCode() { [BUGGY] return super.hashCode(); [BUGGY] } [CLASS] ShapeList [METHOD] hashCode [RETURN_TYPE] int  [VARIABLES] boolean  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	121	121	2	
10	[BUG] [BUGGY] stream.defaultWriteObject(); [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { [BUGGY] stream.defaultWriteObject(); [BUGGY] int count = size(); stream.writeInt(count); for (int i = 0; i < count; i++) { Shape shape = getShape(i); if (shape != null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	
11	[BUG] [BUGGY] int count = size(); [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); [BUGGY] int count = size(); [BUGGY] stream.writeInt(count); for (int i = 0; i < count; i++) { Shape shape = getShape(i); if (shape != null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	134	134	2	
12	[BUG] [BUGGY] stream.writeInt(count); [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); int count = size(); [BUGGY] stream.writeInt(count); [BUGGY] for (int i = 0; i < count; i++) { Shape shape = getShape(i); if (shape != null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); } } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	135	135	2	
13	[BUG] [BUGGY] for (int i = 0; i < count; i++) { [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); int count = size(); stream.writeInt(count); [BUGGY] for (int i = 0; i < count; i++) { [BUGGY] Shape shape = getShape(i); if (shape != null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); } }  [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	136	136	2	
14	[BUG] [BUGGY] Shape shape = getShape(i); [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); int count = size(); stream.writeInt(count); for (int i = 0; i < count; i++) { [BUGGY] Shape shape = getShape(i); [BUGGY] if (shape != null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); } } } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	137	137	2	
15	[BUG] [BUGGY] if (shape != null) { [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); int count = size(); stream.writeInt(count); for (int i = 0; i < count; i++) { Shape shape = getShape(i); [BUGGY] if (shape != null) { [BUGGY] stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); } } } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	138	138	2	
16	[BUG] [BUGGY] stream.writeInt(i); [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); int count = size(); stream.writeInt(count); for (int i = 0; i < count; i++) { Shape shape = getShape(i); if (shape != null) { [BUGGY] stream.writeInt(i); [BUGGY] SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); } } } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	
17	[BUG] [BUGGY] SerialUtilities.writeShape(shape, stream); [FE] AssertionFailedError [CONTEXT] private void writeObject(ObjectOutputStream stream) throws IOException { stream.defaultWriteObject(); int count = size(); stream.writeInt(count); for (int i = 0; i < count; i++) { Shape shape = getShape(i); if (shape != null) { stream.writeInt(i); [BUGGY] SerialUtilities.writeShape(shape, stream); [BUGGY] } else { stream.writeInt(-1); } } } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	
18	[BUG] [BUGGY] stream.writeInt(-1); [FE] AssertionFailedError [CONTEXT] stream.defaultWriteObject(); int count = size(); stream.writeInt(count); for (int i = 0; i < count; i++) { Shape shape = getShape(i); if (shape != null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { [BUGGY] stream.writeInt(-1); [BUGGY] } } } [CLASS] ShapeList [METHOD] writeObject [RETURN_TYPE] void  ObjectOutputStream stream [VARIABLES] Shape shape boolean ObjectOutputStream stream int count i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	143	143	2	
20	[BUG] [BUGGY] stream.defaultReadObject(); [FE] AssertionFailedError [CONTEXT] private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { [BUGGY] stream.defaultReadObject(); [BUGGY] int count = stream.readInt(); for (int i = 0; i < count; i++) { int index = stream.readInt(); if (index != -1) { setShape(index, SerialUtilities.readShape(stream)); } } } [CLASS] ShapeList [METHOD] readObject [RETURN_TYPE] void  ObjectInputStream stream [VARIABLES] boolean int count i index ObjectInputStream stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	160	160	2	
21	[BUG] [BUGGY] int count = stream.readInt(); [FE] AssertionFailedError [CONTEXT] private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { stream.defaultReadObject(); [BUGGY] int count = stream.readInt(); [BUGGY] for (int i = 0; i < count; i++) { int index = stream.readInt(); if (index != -1) { setShape(index, SerialUtilities.readShape(stream)); } } } [CLASS] ShapeList [METHOD] readObject [RETURN_TYPE] void  ObjectInputStream stream [VARIABLES] boolean int count i index ObjectInputStream stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	161	161	2	
22	[BUG] [BUGGY] for (int i = 0; i < count; i++) { [FE] AssertionFailedError [CONTEXT] private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { stream.defaultReadObject(); int count = stream.readInt(); [BUGGY] for (int i = 0; i < count; i++) { [BUGGY] int index = stream.readInt(); if (index != -1) { setShape(index, SerialUtilities.readShape(stream)); } } } [CLASS] ShapeList [METHOD] readObject [RETURN_TYPE] void  ObjectInputStream stream [VARIABLES] boolean int count i index ObjectInputStream stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	162	162	2	
23	[BUG] [BUGGY] int index = stream.readInt(); [FE] AssertionFailedError [CONTEXT] private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { stream.defaultReadObject(); int count = stream.readInt(); for (int i = 0; i < count; i++) { [BUGGY] int index = stream.readInt(); [BUGGY] if (index != -1) { setShape(index, SerialUtilities.readShape(stream)); } } } [CLASS] ShapeList [METHOD] readObject [RETURN_TYPE] void  ObjectInputStream stream [VARIABLES] boolean int count i index ObjectInputStream stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	163	163	2	
24	[BUG] [BUGGY] if (index != -1) { [FE] AssertionFailedError [CONTEXT] private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { stream.defaultReadObject(); int count = stream.readInt(); for (int i = 0; i < count; i++) { int index = stream.readInt(); [BUGGY] if (index != -1) { [BUGGY] setShape(index, SerialUtilities.readShape(stream)); } } } [CLASS] ShapeList [METHOD] readObject [RETURN_TYPE] void  ObjectInputStream stream [VARIABLES] boolean int count i index ObjectInputStream stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	164	164	2	
25	[BUG] [BUGGY] setShape(index, SerialUtilities.readShape(stream)); [FE] AssertionFailedError [CONTEXT] private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException { stream.defaultReadObject(); int count = stream.readInt(); for (int i = 0; i < count; i++) { int index = stream.readInt(); if (index != -1) { [BUGGY] setShape(index, SerialUtilities.readShape(stream)); [BUGGY] } } } [CLASS] ShapeList [METHOD] readObject [RETURN_TYPE] void  ObjectInputStream stream [VARIABLES] boolean int count i index ObjectInputStream stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	
