bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(size()  -  1);	  stream.writeInt(size());    	compilable	  [FE]  AssertionFailedError  	15	2	replace
2	[BUG]  [BUGGY]  stream.writeInt(size()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(size()  -  1);	  stream.writeInt(size());    	compilable	  [FE]  AssertionFailedError  	15	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();  stream.defaultWriteObject();  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	                stream.defaultWriteObject();        stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();	  	compilable	  [FE]  AssertionFailedError  	8	2	add
4	[BUG]  [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();  stream.defaultWriteObject();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();  stream.defaultWriteObject();  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	                stream.defaultWriteObject();        stream.defaultWriteObject();    stream.defaultWriteObject();  stream.defaultWriteObject();	  	compilable	  [FE]  AssertionFailedError  	8	2	add
5	[BUG]  [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(this.shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	                stream.defaultWriteObject();        stream.defaultWriteObject();    SerialUtilities.writeShape(this.shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	8	None	add
6	[BUG]  [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	                stream.defaultWriteObject();        stream.defaultWriteObject();    SerialUtilities.writeShape(stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	8	None	add
7	[BUG]  [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.defaultWriteObject();  SerialUtilities.writeShape(shape,  stream);	          stream.defaultWriteObject();    SerialUtilities.writeShape(stream,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	13	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(0);  stream.writeInt(0);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(0);    stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
9	[BUG]  [BUGGY]  stream.writeInt(0);  stream.writeInt(0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(0);  stream.writeInt(0);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(0);    stream.writeInt(0);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(0);  stream.writeInt(1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(0);    stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
11	[BUG]  [BUGGY]  stream.writeInt(0);  stream.writeInt(1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(0);  stream.writeInt(1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(0);    stream.writeInt(1);	  	compilable	  [FE]  AssertionFailedError  	2	2	add
12	[BUG]  [BUGGY]  stream.writeObject(this.shape);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeObject(this.shape);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeObject(this.shape);	  stream.writeObject();    	non-compiled	[CE]  cannot  find  symbol  shape	1	None	replace
13	[BUG]  [BUGGY]  SerialUtilities.writeShape(this,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  SerialUtilities.writeShape(this,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	SerialUtilities.writeShape(this,  stream);	          stream.defaultWriteObject();    SerialUtilities.writeShape(this,    stream);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	16	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-1);  stream.writeInt(-1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(-1);        stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-1);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
15	[BUG]  [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-1);  stream.writeInt(-1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-1);  stream.writeInt(-1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-1);        stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-1);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-2);  stream.writeInt(-1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(-1);        stream.writeInt(-1);    stream.writeInt(-2);  stream.writeInt(-1);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
17	[BUG]  [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-2);  stream.writeInt(-1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  stream.writeInt(-2);  stream.writeInt(-1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-1);        stream.writeInt(-1);    stream.writeInt(-2);  stream.writeInt(-1);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size());  stream.writeInt(size());  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	stream.writeInt(size());    stream.writeInt(size());	  	compilable	  [FE]  AssertionFailedError  	14	2	add
19	[BUG]  [BUGGY]  stream.writeInt(size());  stream.writeInt(size());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size());  stream.writeInt(size());  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(size());    stream.writeInt(size());	  	compilable	  [FE]  AssertionFailedError  	14	2	add
20	[BUG]  [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(shape,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(size());    SerialUtilities.writeShape(shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	14	None	add
21	[BUG]  [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(this.shape,  stream);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(size());    SerialUtilities.writeShape(this.shape,  stream);	  	non-compiled	[CE]  cannot  find  symbol  shape	14	None	add
22	[BUG]  [BUGGY]  stream.writeObject();  SerialUtilities.writeShape(this.shape,  stream);  [CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeObject();  SerialUtilities.writeShape(this.shape,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeObject();  SerialUtilities.writeShape(this.shape,  stream);	          stream.defaultWriteObject();    SerialUtilities.writeShape(this.shape,    stream);    	non-compiled	[CE]  method  writeObject  in  class  ObjectOutputStream  cannot  be  applied  to  given  types;	10	None	replace
23	[BUG]  [BUGGY]  SerialUtilities.writeShape(shape,  stream,  -1);  [CE]  cannot  find  symbol  shape  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  SerialUtilities.writeShape(shape,  stream,  -1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	SerialUtilities.writeShape(shape,  stream,  -1);	  stream.writeInt(-1);    SerialUtilities.writeShape(stream,    -1);    	non-compiled	[CE]  cannot  find  symbol  shape	6	None	replace
24	[BUG]  [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  -1);  [CE]  cannot  find  symbol  shape  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  -1);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-1);  SerialUtilities.writeShape(shape,  -1);	  stream.writeInt(-1);    SerialUtilities.writeShape(stream,    -1);    	non-compiled	[CE]  cannot  find  symbol  shape	6	None	replace
25	[BUG]  [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	                stream.defaultWriteObject();        stream.defaultWriteObject();    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	8	None	add
26	[BUG]  [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(stream,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(size());    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	14	None	add
27	[BUG]  [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(size());  SerialUtilities.writeShape(stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(size());    SerialUtilities.writeShape(stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	14	None	add
28	[BUG]  [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  shape);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  shape);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.defaultWriteObject();  SerialUtilities.writeShape(stream,  shape);	          stream.defaultWriteObject();    SerialUtilities.writeShape(stream,    stream);    	non-compiled	[CE]  cannot  find  symbol  shape	13	None	replace
29	[BUG]  [BUGGY]  stream.writeObject(shape);  [CE]  cannot  find  symbol  shape  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeObject(shape);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeObject(shape);	  stream.writeObject();    	non-compiled	[CE]  cannot  find  symbol  shape	1	None	replace
30	[BUG]  [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream,  null);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream,  null);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream,  null);	          stream.defaultWriteObject();    SerialUtilities.writeShape(this,    stream);    	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	16	None	replace
31	[BUG]  [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream,  i);  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream,  i);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream,  i);	          stream.defaultWriteObject();    SerialUtilities.writeShape(this,    stream);    	non-compiled	[CE]  cannot  find  symbol  i	16	None	replace
32	[BUG]  [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  SerialUtilities.writeShape(stream,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  SerialUtilities.writeShape(stream,  stream);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-1);        stream.writeInt(-1);    SerialUtilities.writeShape(stream,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	4	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  if(stream!=  null)  {  stream.defaultWriteObject();  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	add	if(stream!=  null)  {  stream.defaultWriteObject();  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }	          stream.defaultWriteObject();    stream.defaultWriteObject();    	compilable	  [FE]  AssertionFailedError  	9	2	replace
34	[BUG]  [BUGGY]  if(stream!=  null)  {  stream.defaultWriteObject();  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  if(stream!=  null)  {  stream.defaultWriteObject();  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	if(stream!=  null)  {  stream.defaultWriteObject();  stream.writeInt(-1);  }  else  {  stream.writeInt(-1);  }	          stream.defaultWriteObject();    stream.defaultWriteObject();    	compilable	  [FE]  AssertionFailedError  	9	2	replace
35	[BUG]  [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  SerialUtilities.writeShape(stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]  stream.writeInt(-1);    stream.writeInt(-1);  SerialUtilities.writeShape(stream);  [BUGGY]      int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	stream.writeInt(-1);        stream.writeInt(-1);    SerialUtilities.writeShape(stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	4	None	add
36	[BUG]  [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream);  [CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {      [BUGGY]          stream.defaultWriteObject();    stream.defaultWriteObject();  SerialUtilities.writeShape(this,  stream);  [BUGGY]      stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	133	133	2	replace	                stream.defaultWriteObject();        stream.defaultWriteObject();    SerialUtilities.writeShape(this,  stream);	  	non-compiled	[CE]  method  writeShape  in  class  SerialUtilities  cannot  be  applied  to  given  types;	8	None	add
