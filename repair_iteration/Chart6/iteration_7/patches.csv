bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
15164798	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  boolean  equals(Object  obj)  {                [BUGGY]  if(obj  instanceof  ShapeList  ==  false)  {  return  true;  }  [BUGGY]                if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(obj  instanceof  ShapeList  ==  false)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	2527467	2
15164799	[BUG]  [BUGGY]  if(obj  instanceof  ShapeList  ==  false)  {  return  true;  }  [FE]  AssertionFailedError  [CONTEXT]                public  boolean  equals(Object  obj)  {                [BUGGY]  if(obj  instanceof  ShapeList  ==  false)  {  return  true;  }  [BUGGY]                if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(obj  instanceof  ShapeList  ==  false)  {  return  true;  }	  	compilable	  [FE]  AssertionFailedError	2527467	2
55857861	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	9309644	2
55857862	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	9309644	2
79292529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readShort();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readShort();	  	compilable	  [FE]  AssertionFailedError	13215422	2
79292530	[BUG]  [BUGGY]  double  shape  =  stream.readShort();  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readShort();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readShort();	  	compilable	  [FE]  AssertionFailedError	13215422	2
52172289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	8695382	2
52172290	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	8695382	2
55818116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(++i);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(++i);  }	  	compilable	  [FE]  AssertionFailedError	9303020	2
55818117	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(++i);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(++i);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(++i);  }	  	compilable	  [FE]  AssertionFailedError	9303020	2
55812542	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	9302091	2
55812543	[BUG]  [BUGGY]  stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  3);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	9302091	2
52405317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	8734220	2
52405318	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	8734220	2
52404267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	8734045	2
52404268	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	8734045	2
55818806	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	9303135	2
55818807	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }	  	compilable	  [FE]  AssertionFailedError	9303135	2
80966565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  *  2  +  index);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  2  +  index);	  	compilable	  [FE]  AssertionFailedError	13494428	2
80966566	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  2  +  index);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  *  2  +  index);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  2  +  index);	  	compilable	  [FE]  AssertionFailedError	13494428	2
55857866	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  if(shape!=    null)    {    stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	9309645	2
55857867	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  if(shape!=    null)    {    stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	9309645	2
52172258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	8695377	2
52172259	[BUG]  [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()  ==  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }	  if(shape.getClass()!=    null)    {    stream.writeInt(-i);    SerialUtilities.writeShape(shape,    stream);    }    	compilable	  [FE]  AssertionFailedError	8695377	2
50772608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  -  5);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  5);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	8462102	2
50772609	[BUG]  [BUGGY]  stream.writeInt(i  -  5);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  -  5);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  5);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	8462102	2
55818122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(++i  -  2);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  2);	  stream.writeInt(++i    -    1);    	compilable	  [FE]  AssertionFailedError	9303021	2
55818123	[BUG]  [BUGGY]  stream.writeInt(++i  -  2);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(++i  -  2);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  2);	  stream.writeInt(++i    -    1);    	compilable	  [FE]  AssertionFailedError	9303021	2
79292522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readDouble();  if(index!=  -1)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readDouble();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	13215421	2
79292523	[BUG]  [BUGGY]  double  shape  =  stream.readDouble();  if(index!=  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readDouble();  if(index!=  -1)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readDouble();  if(index!=  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	13215421	2
79292523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readDouble();  if(index  ==  -1)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readDouble();  if(index  ==  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	13215421	2
79292524	[BUG]  [BUGGY]  double  shape  =  stream.readDouble();  if(index  ==  -1)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readDouble();  if(index  ==  -1)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readDouble();  if(index  ==  -1)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	13215421	2
50772615	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	8462103	2
50772616	[BUG]  [BUGGY]  stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  7);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	8462103	2
50771529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	8461922	2
50771530	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	8461922	2
50771534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  stream.writeInt(i    +    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	8461923	2
50771535	[BUG]  [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }	  stream.writeInt(i    +    1);    if(shape!=    null)    {    stream.writeInt(i    +    2);    }    	compilable	  [FE]  AssertionFailedError	8461923	2
52085426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size()  -  1);	  	compilable	  [FE]  AssertionFailedError	8680905	2
52085427	[BUG]  [BUGGY]  stream.writeInt(size()  -  1);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(size()  -  1);  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size()  -  1);	  	compilable	  [FE]  AssertionFailedError	8680905	2
52085427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(size()  +  1);  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(size()  +  1);	  	compilable	  [FE]  AssertionFailedError	8680905	2
52085428	[BUG]  [BUGGY]  stream.writeInt(size()  +  1);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(size()  +  1);  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(size()  +  1);	  	compilable	  [FE]  AssertionFailedError	8680905	2
79271649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  if(index  >  0)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	if(index  >  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	13211942	2
79271650	[BUG]  [BUGGY]  if(index  >  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  if(index  >  0)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	if(index  >  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError	13211942	2
80966570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  2  +  stream.readInt());	  Shape    shape    =    getShape(i    *    2    +    i);    	compilable	  [FE]  AssertionFailedError	13494429	2
80966571	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  *  2  +  stream.readInt());  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  2  +  stream.readInt());	  Shape    shape    =    getShape(i    *    2    +    i);    	compilable	  [FE]  AssertionFailedError	13494429	2
79288106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(double)stream.readInt();  if(index  ==  0)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readInt();  if(index  ==  0)  {  return;  }	  double    shape    =(double)stream.readInt();    if(index    ==    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	13214685	2
79288107	[BUG]  [BUGGY]  double  shape  =(double)stream.readInt();  if(index  ==  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(double)stream.readInt();  if(index  ==  0)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readInt();  if(index  ==  0)  {  return;  }	  double    shape    =(double)stream.readInt();    if(index    ==    -1)    {    return;    }    	compilable	  [FE]  AssertionFailedError	13214685	2
55818116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(++i  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(++i  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	9303020	2
55818117	[BUG]  [BUGGY]  stream.writeInt(++i  -  1);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(++i  -  1);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(++i  -  1);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	9303020	2
79293470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readInt();  if(index!=  0)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =  stream.readInt();  if(index!=  0)  {  return;  }	  double    shape    =    stream.readInt();    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	13215579	2
79293471	[BUG]  [BUGGY]  double  shape  =  stream.readInt();  if(index!=  0)  {  return;  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =  stream.readInt();  if(index!=  0)  {  return;  }  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =  stream.readInt();  if(index!=  0)  {  return;  }	  double    shape    =    stream.readInt();    if(index    ==    0)    {    return;    }    	compilable	  [FE]  AssertionFailedError	13215579	2
80966600	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  +  i);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  +  i);	  	compilable	  [FE]  AssertionFailedError	13494434	2
80966601	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  +  i);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  +  i);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  +  i);	  	compilable	  [FE]  AssertionFailedError	13494434	2
52172289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	8695382	2
52172290	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }	  	compilable	  [FE]  AssertionFailedError	8695382	2
79292379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(double)stream.readDouble();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(double)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	13215397	2
79292380	[BUG]  [BUGGY]  double  shape  =(double)stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(double)stream.readDouble();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(double)stream.readDouble();	  	compilable	  [FE]  AssertionFailedError	13215397	2
50772608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  -  4);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  -  4);	  	compilable	  [FE]  AssertionFailedError	8462102	2
50772609	[BUG]  [BUGGY]  stream.writeInt(i  -  4);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  -  4);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  -  4);	  	compilable	  [FE]  AssertionFailedError	8462102	2
50772613	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  6);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  6);	  	compilable	  [FE]  AssertionFailedError	8462103	2
50772614	[BUG]  [BUGGY]  stream.writeInt(i  +  6);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  6);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  6);	  	compilable	  [FE]  AssertionFailedError	8462103	2
50772615	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  7);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  7);	  	compilable	  [FE]  AssertionFailedError	8462103	2
50772616	[BUG]  [BUGGY]  stream.writeInt(i  +  7);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  7);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  7);	  	compilable	  [FE]  AssertionFailedError	8462103	2
79292529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  long  shape  =  stream.readLong();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	long  shape  =  stream.readLong();	  	compilable	  [FE]  AssertionFailedError	13215422	2
79292530	[BUG]  [BUGGY]  long  shape  =  stream.readLong();  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  long  shape  =  stream.readLong();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	long  shape  =  stream.readLong();	  	compilable	  [FE]  AssertionFailedError	13215422	2
80960301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  *  6);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  *  6);	  	compilable	  [FE]  AssertionFailedError	13493384	2
80960302	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  *  6);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  *  6);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  *  6);	  	compilable	  [FE]  AssertionFailedError	13493384	2
80966576	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  +  stream.readInt());	  Shape    shape    =    getShape(index    *    2    +    index);    	compilable	  [FE]  AssertionFailedError	13494430	2
80966577	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  +  stream.readInt());  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  +  stream.readInt());	  Shape    shape    =    getShape(index    *    2    +    index);    	compilable	  [FE]  AssertionFailedError	13494430	2
79292384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(float)stream.readDouble();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(float)stream.readDouble();	  double    shape    =(double)stream.readFloat();    	compilable	  [FE]  AssertionFailedError	13215398	2
79292385	[BUG]  [BUGGY]  double  shape  =(float)stream.readDouble();  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(float)stream.readDouble();  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(float)stream.readDouble();	  double    shape    =(double)stream.readFloat();    	compilable	  [FE]  AssertionFailedError	13215398	2
15141650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                public  boolean  equals(Object  obj)  {                [BUGGY]  if(this  ==  null)  {  if(!this.equals(obj))  return  false;  }  [BUGGY]                if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	add	if(this  ==  null)  {  if(!this.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	2523609	2
15141651	[BUG]  [BUGGY]  if(this  ==  null)  {  if(!this.equals(obj))  return  false;  }  [FE]  AssertionFailedError  [CONTEXT]                public  boolean  equals(Object  obj)  {                [BUGGY]  if(this  ==  null)  {  if(!this.equals(obj))  return  false;  }  [BUGGY]                if  (obj  ==  this)  {  return  true;  }  if  (!(obj  instanceof  ShapeList))  {  return  false;  }  return  super.equals(obj);  }  [CLASS]  ShapeList  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  obj  [VARIABLES]  boolean  Object  obj  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.8164965809277261	105	105	2	replace	if(this  ==  null)  {  if(!this.equals(obj))  return  false;  }	  	compilable	  [FE]  AssertionFailedError	2523609	2
52172289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	8695382	2
52172290	[BUG]  [BUGGY]  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);	  	compilable	  [FE]  AssertionFailedError	8695382	2
52405317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	8734220	2
52405318	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  5);  }	  	compilable	  [FE]  AssertionFailedError	8734220	2
80966816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  *  1);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  1);	  	compilable	  [FE]  AssertionFailedError	13494470	2
80966817	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  1);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  *  1);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  1);	  	compilable	  [FE]  AssertionFailedError	13494470	2
80966817	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  /  1);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(index  /  1);	  	compilable	  [FE]  AssertionFailedError	13494470	2
80966818	[BUG]  [BUGGY]  Shape  shape  =  getShape(index  /  1);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(index  /  1);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(index  /  1);	  	compilable	  [FE]  AssertionFailedError	13494470	2
55810131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	9301689	2
55810132	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(+1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	9301689	2
55999131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }	  	compilable	  [FE]  AssertionFailedError	9333189	2
55999132	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-3);  }	  	compilable	  [FE]  AssertionFailedError	9333189	2
79292529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  -index;  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	double  shape  =(index  ==  0)?  stream.readDouble()  :  -index;	  	compilable	  [FE]  AssertionFailedError	13215422	2
79292530	[BUG]  [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  -index;  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  double  shape  =(index  ==  0)?  stream.readDouble()  :  -index;  [BUGGY]                }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	double  shape  =(index  ==  0)?  stream.readDouble()  :  -index;	  	compilable	  [FE]  AssertionFailedError	13215422	2
55810124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	9301688	2
55810125	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  	compilable	  [FE]  AssertionFailedError	9301688	2
55810131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(i  +  6);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  +  6);	  	compilable	  [FE]  AssertionFailedError	9301689	2
55810132	[BUG]  [BUGGY]  stream.writeInt(i  +  6);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(i  +  6);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  +  6);	  	compilable	  [FE]  AssertionFailedError	9301689	2
80966816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  -  1);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  -  1);	  	compilable	  [FE]  AssertionFailedError	13494470	2
80966817	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  -  1);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  -  1);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  -  1);	  	compilable	  [FE]  AssertionFailedError	13494470	2
55857866	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  if(shape!=    null)    {    stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	9309645	2
55857867	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(3);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }	  if(shape!=    null)    {    stream.writeInt(0);    SerialUtilities.writeShape(shape,    stream);    }    else    {    stream.writeInt(i    +    3);    }    	compilable	  [FE]  AssertionFailedError	9309645	2
50771528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	8461922	2
50771529	[BUG]  [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	stream.writeInt(i  +  3);  if(shape!=  null)  {  stream.writeInt(i  +  4);  }	  	compilable	  [FE]  AssertionFailedError	8461922	2
80960157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  /  4);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  /  4);	  	compilable	  [FE]  AssertionFailedError	13493360	2
80960158	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  /  4);  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  /  4);  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  /  4);	  	compilable	  [FE]  AssertionFailedError	13493360	2
55857897	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	9309650	2
55857898	[BUG]  [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }	  	compilable	  [FE]  AssertionFailedError	9309650	2
52405281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	add	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }	  	compilable	  [FE]  AssertionFailedError	8734214	2
52405282	[BUG]  [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {                [BUGGY]  if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }  [BUGGY]                stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	139	139	2	replace	if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((4));  }	  	compilable	  [FE]  AssertionFailedError	8734214	2
55812543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(i  -  4);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	add	stream.writeInt(i  -  4);	  	compilable	  [FE]  AssertionFailedError	9302091	2
55812544	[BUG]  [BUGGY]  stream.writeInt(i  -  4);  [FE]  AssertionFailedError  [CONTEXT]                private  void  writeObject(ObjectOutputStream  stream)  throws  IOException  {  stream.defaultWriteObject();  int  count  =  size();  stream.writeInt(count);  for  (int  i  =  0;  i  <  count;  i++)  {  Shape  shape  =  getShape(i);  if  (shape  !=  null)  {  stream.writeInt(i);                [BUGGY]  stream.writeInt(i  -  4);  [BUGGY]                SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  }  [CLASS]  ShapeList  [METHOD]  writeObject  [RETURN_TYPE]  void  ObjectOutputStream  stream  [VARIABLES]  Shape  shape  boolean  ObjectOutputStream  stream  int  count  i  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	140	140	2	replace	stream.writeInt(i  -  4);	  	compilable	  [FE]  AssertionFailedError	9302091	2
80966569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  *  3  +  stream.readInt());  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	add	Shape  shape  =  getShape(i  *  3  +  stream.readInt());	  Shape    shape    =    getShape(i    *    2    +    i);    	compilable	  [FE]  AssertionFailedError	13494429	2
80966570	[BUG]  [BUGGY]  Shape  shape  =  getShape(i  *  3  +  stream.readInt());  [FE]  AssertionFailedError  [CONTEXT]                private  void  readObject(ObjectInputStream  stream)  throws  IOException,  ClassNotFoundException  {  stream.defaultReadObject();  int  count  =  stream.readInt();  for  (int  i  =  0;  i  <  count;  i++)  {  int  index  =  stream.readInt();  if  (index  !=  -1)  {                [BUGGY]  Shape  shape  =  getShape(i  *  3  +  stream.readInt());  [BUGGY]                setShape(index,  SerialUtilities.readShape(stream));  }  }  }  [CLASS]  ShapeList  [METHOD]  readObject  [RETURN_TYPE]  void  ObjectInputStream  stream  [VARIABLES]  boolean  int  count  i  index  ObjectInputStream  stream  	projects/Chart6/source/org/jfree/chart/util/ShapeList.java	0.7071067811865475	165	165	2	replace	Shape  shape  =  getShape(i  *  3  +  stream.readInt());	  Shape    shape    =    getShape(i    *    2    +    i);    	compilable	  [FE]  AssertionFailedError	13494429	2
