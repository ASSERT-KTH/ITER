compilation error,105,add,[CE] illegal start of expression, ,if(obj instanceof ShapeList == false) } return false; }
compilation error,138,add,[CE] class or interface expected, ,if(shape!= null) { if(shape == null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); }  }  } 
patch is same with buggy,139,replace,, stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  ,stream.writeInt(i + 1); if(shape!= null) { stream.writeInt(i + 3); }
compilation error,139,replace,[CE] illegal start of expression, stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  ,if(shape!= null) { stream.writeInt(i + 1); if(shape!= null) { stream.writeInt(i + 3); }
compilation error,165,replace,[CE] generics are not supported in -source 1.4, readObject(stream);  ,ArrayList < ShapeList> stream = ReadObjectUtilities.readShape(stream);
compilation error,165,replace,[CE] generics are not supported in -source 1.4, readObject(stream);  ,ArrayList < ShapeList> stream = readObject(index);
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
patch is same with buggy,140,replace,, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  ,if(shape!= null) { stream.writeInt(2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
compilation error,165,replace,[CE] method readDouble in class ObjectInputStream cannot be applied to given types;, double  shape  =  stream.readLong();  ,stream.readDouble(index);
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  ,if(shape!= null) { if(shape.getClass()!= null) { stream.writeInt(-1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i); }
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  ,if(shape.getClass() == null) { if(shape.getClass()!= null) { stream.writeInt(-1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i); }
compilation error,139,add,[CE] 'else' without 'if', ,if(shape.getClass()!= null) { stream.writeInt(-i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i);
increase failing tests,105,add, [FE] StackOverflowError, ,if(obj!= null) { if(!this.equals(obj)) return false; }
patch is same with buggy,165,replace,, Shape  shape  =  getShape(index  +  i);  ,Shape shape = getShape(index + i);
patch is same with buggy,165,replace,, double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape = stream.readInt(); if(index == -1) { return; }
compilation error,140,add,[CE] 'else' without 'if', ,if(shape!= null) { stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(++i);
compilation error,165,replace,[CE] method getShape in class ShapeList cannot be applied to given types;, Shape  shape  =  getShape(i  *  2  +  i);  ,Shape shape = getShape(0, index * 2);
patch is same with buggy,138,replace,, if(shape!=  null)  {  if(shape  ==  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-1);  }  }  ,if(shape!= null) { if(shape == null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); }  }
compilation error,140,add,[CE] cannot find symbol serialUtilities, ,stream.writeInt(i - 3); serialUtilities.writeShape(shape, stream);
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(i++); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 2); }
patch is same with buggy,140,replace,, if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  ,if(shape!= null) { stream.writeInt(i++); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 2); }
patch is same with buggy,165,replace,, Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }  ,Shape shape = SerialUtilities.readShape(stream); if(index > 0) { return; }
compilation error,140,add,[CE] illegal start of expression, ,if(shape!= null) { stream.writeInt(i++); SerialUtilities.writeShape(shape, stream); } else >> stream.writeInt(i + 2); }
patch is same with buggy,139,replace,, if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  ,if(shape.getClass()!= null) { stream.writeInt(-i); SerialUtilities.writeShape(shape, stream); }
compilation error,161,replace,[CE] inconvertible types, int  shape  =(int)stream.readDouble();  ,boolean shape =(boolean)stream.readDouble();
patch is same with buggy,105,replace,, if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }  ,if(obj instanceof ShapeList == false) { return false; }
compilation error,139,add,[CE] cannot find symbol StaxUtil, ,stream.writeInt(i - 5); StaxUtil.sanitizeShape(shape);
patch is same with buggy,140,replace,, stream.writeInt(++i  -  1);  ,stream.writeInt(++i - 1);
compilation error,165,add,[CE] illegal start of expression, ,double shape = stream.readInt(); if(index == -1)) { return; }
compilation error,140,replace,[CE] not a statement, if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt-2; SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(2); }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(0); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(2); }
compilation error,165,add,[CE] illegal start of expression, ,double shape =(double)stream.readInt(); if(index == -1) } return; }
compilation error,165,replace,[CE] cannot find symbol, double  shape  =(float)stream.readFloat();  ,double shape =(shape)stream.readFloat();
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(0); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 3); }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(shape.isAssignableFrom(stream)) { if(shape!= null) { stream.writeInt(0); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 3); }
patch is same with buggy,140,replace,, if(shape!=  null)  {  stream.writeInt(0);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  , 
compilation error,140,add,[CE] illegal start of expression, ,if(shape!= null) { stream.writeInt(-2); SerialUtilities.writeShape(shape, stream); } else >> stream.writeInt(i + 1); }
compilation error,140,replace,[CE] illegal start of expression, stream.writeInt(++i  -  1);  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i); }
compilation error,140,replace,[CE] ')' expected, stream.writeInt(++i  -  1);  ,if(shape.isEmpty()) { if(++i >= stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i); }
patch is same with buggy,165,replace,, Shape  shape  =  getShape(index  /  2  +  1);  ,Shape shape = getShape(index / 2 + 1);
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  ,if(shape!= null) { if(shape.getClass()!= null) { stream.writeInt(-i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); }
compilation error,140,add,[CE] illegal start of expression, ,if(shape!= null) { stream.writeInt(+1); SerialUtilities.writeShape(shape, stream); } else >> stream.writeInt(i + 1); }
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(shape!= null) { if(shape.getClass()!= null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 3); }
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(shape.getClass()!= null) { if(shape.getClass().getName()!= null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 3); }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 3); }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(shape.isAssignableFrom(stream)) { if(shape!= null) { stream.writeInt(2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 3); }
patch is same with buggy,140,replace,, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  , 
patch is same with buggy,139,replace,, stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  ,stream.writeInt(i + 1); if(shape!= null) { stream.writeInt(i + 2); }
patch is same with buggy,165,replace,, Shape  shape  =  getShape(i  /  2);  , 
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  ,if(shape!= null) { if(shape.getClass()!= null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt((3)); }
compilation error,139,replace,[CE] illegal start of expression, if(shape.getClass()!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt((3));  }  ,if(shape.getClass() == null) { if(shape.getClass()!= null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt((3)); }
patch is same with buggy,105,replace,, if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  ,if(obj == null) { if(!this.equals(obj)) return false; }
patch is same with buggy,165,replace,, double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape =(double)stream.readInt(); if(index == -1) { return; }
compilation error,140,add,[CE] cannot find symbol serialUtilities, ,stream.writeInt(++i - 1); serialUtilities.writeShape(shape, stream);
patch is same with buggy,165,replace,, double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape = stream.readInt(); if(index == -1) { return; }
compilation error,139,add,[CE] 'else' without 'if', ,if(shape.getClass()!= null) { stream.writeInt(-i); SerialUtilities.writeShape(shape, stream); } else {
patch is same with buggy,165,replace,, Shape  shape  =  getShape(i  *  2  +  i);  , 
patch is same with buggy,165,replace,, double  shape  =(double)stream.readFloat();  , 
compilation error,140,replace,[CE] illegal start of expression, stream.writeInt(i  +  5);  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(+1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
compilation error,140,replace,[CE] illegal start of expression, stream.writeInt(i  +  5);  ,if(shape.isAssignableFrom(stream)) { if(shape!= null) { stream.writeInt(+1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
compilation error,140,add,[CE] 'else' without 'if', ,if(shape!= null) { stream.writeInt(-2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-2); } ; }
compilation error,165,add,[CE] cannot find symbol, ,readInt(stream);
patch is same with buggy,165,replace,, double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  ,double shape = stream.readInt(); if(index == 0) { return; }
compilation error,165,add,[CE] incompatible types, ,Double shape =(double)stream.readFloat();
compilation error,165,add,[CE] cannot find symbol, ,double shape =(double)stream.readFound();
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  ,if(shape.isEmpty()) { if(shape!= null) { stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-2); }
compilation error,140,replace,[CE] ')' expected, if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  ,if(shape.isEmpty()) { if(++i >= stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-2); }
compilation error,165,replace,[CE] cannot find symbol, double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape = stream.readShape(); if(index == -1) { return; }
compilation error,140,replace,[CE] cannot find symbol length, stream.writeInt(++i  -  1);  ,stream.writeInt(++i - shape.length);
compilation error,140,replace,[CE] cannot find symbol, stream.writeInt(++i  -  1);  ,stream.writeInt(++i - shape.length());
patch is same with buggy,139,replace,, stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  ,stream.writeInt(i + 1); if(shape!= null) { stream.writeInt(i + 2); }
compilation error,165,replace,[CE] inconvertible types, double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape =(double)stream.readObject(); if(index == -1) { return; }
patch is same with buggy,165,replace,, double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape =(double)stream.readInt(); if(index == -1) { return; }
compilation error,161,replace,[CE] cannot find symbol count, int  shape  =(int)stream.readDouble();  ,float shape =(float)stream.readDouble();
compilation error,165,add,[CE] cannot find symbol, ,double shape =(double)stream.readShape();
patch is same with buggy,105,replace,, if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }  ,if(obj instanceof ShapeList == false) { return false; }
patch is same with buggy,165,replace,, readObject(stream);  ,readObject(stream);
compilation error,165,replace,[CE] method setShape in class ShapeList cannot be applied to given types;, readObject(stream);  ,setShape(index);
patch is same with buggy,165,replace,, double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  ,double shape = stream.readInt(); if(index == 0) { return; }
compilation error,165,replace,[CE] cannot find symbol, double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  ,double shape = stream.readShape(); if(index == 0) { return; }
compilation error,165,add,[CE] cannot find symbol shapeList, ,this.shapeList = SerialUtilities.readShape(stream);
compilation error,105,add,[CE] illegal start of expression, ,if(this == null) { if(obj == null) { return false; }
patch is same with buggy,165,replace,, Shape  shape  =  getShape(index  /  2  +  1);  ,Shape shape = getShape(index / 2 + 1);
patch is same with buggy,105,replace,, if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  ,if(obj == null) { if(!this.equals(obj)) return false; }
compilation error,105,replace,[CE] illegal start of type, if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  ,if(this == obj) { if(!this.equals(obj)) return false; }
patch is same with buggy,105,replace,, if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  ,if(obj == null) { if(!this.equals(obj)) return false; }
compilation error,105,replace,[CE] illegal start of expression, if(obj  ==  null)  {  if(!this.equals(obj))  return  false;  }  ,if(obj == null) { if(!this.equals(obj)) return false; [Delete]
patch is same with buggy,139,replace,, if(shape.getClass()!=  null)  {  stream.writeInt(-i);  SerialUtilities.writeShape(shape,  stream);  }  ,if(shape.getClass()!= null) { stream.writeInt(-i); SerialUtilities.writeShape(shape, stream); }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  1);  }  ,if(shape.length() > 0) { if(shape!= null) { stream.writeInt(2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
compilation error,140,replace,[CE] illegal start of expression, stream.writeInt(i  +  5);  ,if(ShapeUtilities.isShape(shape)) { if(shape!= null) { stream.writeInt(+1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
compilation error,165,add,[CE] reached end of file while parsing, ,if(index == SHORT_WRITE) { int index = stream.readInt(); if(index == -1) { return; }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  3);  }  ,if(ShapeUtilities.isShape(shape)) { if(shape!= null) { stream.writeInt(2); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
patch is same with buggy,165,replace,, double  shape  =(double)stream.readFloat();  , 
compilation error,165,replace,[CE] cannot find symbol, double  shape  =(double)stream.readFloat();  ,double shape =(double)stream.readShape(index);
increase failing tests,105,add, [FE] AssertionFailedError, ,if(obj instanceof ShapeList == true) { return false; }
increase failing tests,105,add, [FE] StackOverflowError, ,if(obj instanceof ShapeList) { if(!this.equals(obj)) return false; }
compilation error,161,add,[CE] incompatible types, ,boolean shape =(int)stream.readDouble();
patch is same with buggy,165,replace,, double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape =(double)stream.readInt(); if(index == -1) { return; }
compilation error,165,replace,[CE] reached end of file while parsing, double  shape  =(double)stream.readInt();  if(index  ==  -1)  {  return;  }  ,if(index == -1) { double shape =(double)stream.readInt(); if(index == -1) { return; }
patch is same with buggy,139,replace,, stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  3);  }  ,stream.writeInt(i + 1); if(shape!= null) { stream.writeInt(i + 3); }
compilation error,165,add,[CE] reached end of file while parsing, ,if(index == stream.readInt()) { int index = stream.readInt(); if(index == -1) { return; }
compilation error,165,add,[CE] reached end of file while parsing, ,if(index == stream.readInt()) { int index = stream.readInt(); if(index > 0) { return; }
compilation error,140,replace,[CE] illegal start of expression, stream.writeInt(++i  -  1);  ,if(i > 0) { if(shape!= null) { stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i); }
compilation error,140,add,[CE] illegal start of expression, ,if(shape.isBoolean()) { if(shape!= null) { stream.writeInt(-1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 1); }
patch is same with buggy,140,replace,, stream.writeInt(++i  -  1);  ,stream.writeInt(++i - 1);
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(++i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  ,if(++i >= size) { if(shape!= null) { stream.writeInt(++i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-2); }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(i++);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  2);  }  ,if(ShapeUtilities.isAssignableFrom(shape)) { if(shape!= null) { stream.writeInt(i++); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 2); }
patch is same with buggy,165,replace,, double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  ,double shape = stream.readInt(); if(index == 0) { return; }
compilation error,165,replace,[CE] reached end of file while parsing, double  shape  =  stream.readInt();  if(index  ==  0)  {  return;  }  ,if(index == 0) { double shape = stream.readInt(); if(index == 0) { return; }
compilation error,165,add,[CE] cannot find symbol serialUtilities, ,setShape(index, SerialUtilities.readShape(stream), serialUtilities.readShape(stream));
compilation error,165,replace,[CE] reached end of file while parsing, double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  ,if(index == 0) { double shape = stream.readInt(); if(index == -1) { return; }
patch is same with buggy,165,replace,, double  shape  =  stream.readInt();  if(index  ==  -1)  {  return;  }  ,double shape = stream.readInt(); if(index == -1) { return; }
compilation error,140,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(-2);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-2);  }  ,if(shape.length() > 0) { if(shape!= null) { stream.writeInt(-1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-1); }
patch is same with buggy,139,replace,, stream.writeInt(i  +  1);  if(shape!=  null)  {  stream.writeInt(i  +  2);  }  ,stream.writeInt(i + 1); if(shape!= null) { stream.writeInt(i + 2); }
patch is same with buggy,139,replace,, if(shape.getClass()!=  null)  {  stream.writeInt(-1);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(-i);  }  ,if(shape.getClass()!= null) { stream.writeInt(-1); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(-i); }
compilation error,165,replace,[CE] reached end of file while parsing, Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }  ,if(index == SerialUtilities.readShape(stream)) { Shape shape = SerialUtilities.readShape(stream); if(index > 0) { return; }
compilation error,165,replace,[CE] reached end of file while parsing, Shape  shape  =  SerialUtilities.readShape(stream);  if(index  >  0)  {  return;  }  ,if(index == stream.readInt()) { Shape shape = SerialUtilities.readShape(stream); if(index > 0) { return; }
patch is same with buggy,105,replace,, if(obj  instanceof  ShapeList  ==  false)  {  return  false;  }  ,if(obj instanceof ShapeList == false) { return false; }
patch is same with buggy,165,replace,, Shape  shape  =  getShape(index  /  2  +  1);  ,Shape shape = getShape(index / 2 + 1);
compilation error,139,replace,[CE] illegal start of expression, if(shape!=  null)  {  stream.writeInt(i);  SerialUtilities.writeShape(shape,  stream);  }  else  {  stream.writeInt(i  +  4);  }  ,if(Stream.isInfinite(i)) { if(shape!= null) { stream.writeInt(i); SerialUtilities.writeShape(shape, stream); } else { stream.writeInt(i + 4); }
