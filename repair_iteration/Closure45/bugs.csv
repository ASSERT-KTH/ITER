bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] private boolean isRemovableVar(Var var) {  if (!removeGlobals && var.isGlobal()) { [BUGGY] return false; [BUGGY] }  if (referenced.contains(var)) { return false; }  if (codingConvention.isExported(var.getName())) { return false; [CLASS] RemoveUnusedVars CallSiteOptimizer Continuation Assign [METHOD] isRemovableVar [RETURN_TYPE] boolean  Var var [VARIABLES] Multimap assignsByVar continuations inheritsCalls CallSiteOptimizer callSiteOptimizer AbstractCompiler compiler boolean isPropertyAssign mayHaveSecondarySideEffects maybeAliased modifyCallSites preserveFunctionExpressionNames removeGlobals Set referenced Scope fnScope scope Var var CodingConvention codingConvention Node a assignNode c externs lp n nameNode node parent root value List allFunctionScopes maybeUnreferenced toRemove toReplaceWithZero SimpleDefinitionFinder defFinder Map assignsByNode  	projects/Closure45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3779644730092272	301	301	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private boolean isRemovableVar(Var var) {  if (!removeGlobals && var.isGlobal()) { [BUGGY] [BUGGY] return false; }  if (referenced.contains(var)) { return false; }  if (codingConvention.isExported(var.getName())) { return false; [CLASS] RemoveUnusedVars CallSiteOptimizer Continuation Assign [METHOD] isRemovableVar [RETURN_TYPE] boolean  Var var [VARIABLES] Multimap assignsByVar continuations inheritsCalls CallSiteOptimizer callSiteOptimizer AbstractCompiler compiler boolean isPropertyAssign mayHaveSecondarySideEffects maybeAliased modifyCallSites preserveFunctionExpressionNames removeGlobals Set referenced Scope fnScope scope Var var CodingConvention codingConvention Node a assignNode c externs lp n nameNode node parent root value List allFunctionScopes maybeUnreferenced toRemove toReplaceWithZero SimpleDefinitionFinder defFinder Map assignsByNode  	projects/Closure45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.3779644730092272	301	301	1	add	
3	[BUG] [BUGGY] } else if (!NodeUtil.isLiteralValue( assign.assignNode.getLastChild(), true)) { [FE] AssertionFailedError [CONTEXT] !NodeUtil.isLiteralValue(value, true); } else {   assignedToUnknownValue = true; } for (Assign assign : assignsByVar.get(var)) { if (assign.isPropertyAssign) { hasPropertyAssign = true; [BUGGY] } else if (!NodeUtil.isLiteralValue(    assign.assignNode.getLastChild(), true)) { [BUGGY] assign.assignNode.getLastChild(), true)) { assignedToUnknownValue = true; } } if (assignedToUnknownValue && hasPropertyAssign) { changes = markReferencedVar(var) || changes; maybeUnreferenced.remove(current); current--; } [CLASS] RemoveUnusedVars CallSiteOptimizer Continuation Assign [METHOD] interpretAssigns [RETURN_TYPE] void  [VARIABLES] Set referenced Var var Node a arg argList argParent assignNode body c externs function lastArg lp n nameNode node param parent root value SimpleDefinitionFinder defFinder int current Multimap assignsByVar continuations inheritsCalls CallSiteOptimizer callSiteOptimizer AbstractCompiler compiler boolean assignedToUnknownValue canChangeSignature canModifyAllSites changeCallSignature changes hasFollowing hasPropertyAssign isPropertyAssign mayHaveSecondarySideEffects maybeAliased modifyAllCallSites modifyCallSites modifyCallers preserveFunctionExpressionNames removeGlobals Scope fnScope parentScope scope CodingConvention codingConvention convention List allFunctionScopes maybeUnreferenced toRemove toReplaceWithZero Assign assign Map assignsByNode  	projects/Closure45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.25	735	736	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] !NodeUtil.isLiteralValue(value, true); } else {   assignedToUnknownValue = true; } for (Assign assign : assignsByVar.get(var)) { if (assign.isPropertyAssign) { hasPropertyAssign = true; [BUGGY] [BUGGY] } else if (!NodeUtil.isLiteralValue(    assign.assignNode.getLastChild(), true)) { assign.assignNode.getLastChild(), true)) { assignedToUnknownValue = true; } } if (assignedToUnknownValue && hasPropertyAssign) { changes = markReferencedVar(var) || changes; maybeUnreferenced.remove(current); current--; } [CLASS] RemoveUnusedVars CallSiteOptimizer Continuation Assign [METHOD] interpretAssigns [RETURN_TYPE] void  [VARIABLES] Set referenced Var var Node a arg argList argParent assignNode body c externs function lastArg lp n nameNode node param parent root value SimpleDefinitionFinder defFinder int current Multimap assignsByVar continuations inheritsCalls CallSiteOptimizer callSiteOptimizer AbstractCompiler compiler boolean assignedToUnknownValue canChangeSignature canModifyAllSites changeCallSignature changes hasFollowing hasPropertyAssign isPropertyAssign mayHaveSecondarySideEffects maybeAliased modifyAllCallSites modifyCallSites modifyCallers preserveFunctionExpressionNames removeGlobals Scope fnScope parentScope scope CodingConvention codingConvention convention List allFunctionScopes maybeUnreferenced toRemove toReplaceWithZero Assign assign Map assignsByNode  	projects/Closure45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.25	735	736	1	add	
5	[BUG] [BUGGY] hasPropertyAssign = true; [FE] AssertionFailedError [CONTEXT] assignedToUnknownValue = value != null && !NodeUtil.isLiteralValue(value, true); } else {   assignedToUnknownValue = true; } for (Assign assign : assignsByVar.get(var)) { if (assign.isPropertyAssign) { [BUGGY] hasPropertyAssign = true; [BUGGY] } else if (!NodeUtil.isLiteralValue( assign.assignNode.getLastChild(), true)) { assignedToUnknownValue = true; } } if (assignedToUnknownValue && hasPropertyAssign) { changes = markReferencedVar(var) || changes; maybeUnreferenced.remove(current); current--; [CLASS] RemoveUnusedVars CallSiteOptimizer Continuation Assign [METHOD] interpretAssigns [RETURN_TYPE] void  [VARIABLES] Set referenced Var var Node a arg argList argParent assignNode body c externs function lastArg lp n nameNode node param parent root value SimpleDefinitionFinder defFinder int current Multimap assignsByVar continuations inheritsCalls CallSiteOptimizer callSiteOptimizer AbstractCompiler compiler boolean assignedToUnknownValue canChangeSignature canModifyAllSites changeCallSignature changes hasFollowing hasPropertyAssign isPropertyAssign mayHaveSecondarySideEffects maybeAliased modifyAllCallSites modifyCallSites modifyCallers preserveFunctionExpressionNames removeGlobals Scope fnScope parentScope scope CodingConvention codingConvention convention List allFunctionScopes maybeUnreferenced toRemove toReplaceWithZero Assign assign Map assignsByNode  	projects/Closure45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.24253562503633297	734	734	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] assignedToUnknownValue = value != null && !NodeUtil.isLiteralValue(value, true); } else {   assignedToUnknownValue = true; } for (Assign assign : assignsByVar.get(var)) { if (assign.isPropertyAssign) { [BUGGY] [BUGGY] hasPropertyAssign = true; } else if (!NodeUtil.isLiteralValue( assign.assignNode.getLastChild(), true)) { assignedToUnknownValue = true; } } if (assignedToUnknownValue && hasPropertyAssign) { changes = markReferencedVar(var) || changes; maybeUnreferenced.remove(current); current--; [CLASS] RemoveUnusedVars CallSiteOptimizer Continuation Assign [METHOD] interpretAssigns [RETURN_TYPE] void  [VARIABLES] Set referenced Var var Node a arg argList argParent assignNode body c externs function lastArg lp n nameNode node param parent root value SimpleDefinitionFinder defFinder int current Multimap assignsByVar continuations inheritsCalls CallSiteOptimizer callSiteOptimizer AbstractCompiler compiler boolean assignedToUnknownValue canChangeSignature canModifyAllSites changeCallSignature changes hasFollowing hasPropertyAssign isPropertyAssign mayHaveSecondarySideEffects maybeAliased modifyAllCallSites modifyCallSites modifyCallers preserveFunctionExpressionNames removeGlobals Scope fnScope parentScope scope CodingConvention codingConvention convention List allFunctionScopes maybeUnreferenced toRemove toReplaceWithZero Assign assign Map assignsByNode  	projects/Closure45/src/com/google/javascript/jscomp/RemoveUnusedVars.java	0.24253562503633297	734	734	1	add	
