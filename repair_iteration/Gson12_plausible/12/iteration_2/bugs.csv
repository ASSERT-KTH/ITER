bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
2	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    If(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
3	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  ||  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
4	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JSONObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JSONObject  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o  instanceof  JSONObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
5	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(O  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(O  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(O  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
6	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instancesof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instancesof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o  instancesof  JsonObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
7	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  if(o  ==  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    if(o  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
8	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  if(o!=  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    if(o!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
9	[BUG]  [BUGGY]  if(o  ==  null)  {  If(o  ==  null)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  If(o  ==  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    If(o  ==  null)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
10	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  if(o  >=  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    if(o  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
11	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  if(o  [BUGGY]  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    if(o  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	18	None	add
12	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  if(o  >>  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    if(o  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonObject)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
14	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonObject)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonObject)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
16	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonObject)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
17	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive)  {  [CE]  inconvertible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  instanceof  JsonPrimitive)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	10	None	replace
18	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  JsonPrimitive)  {  [CE]  inconvertible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o.getClass()  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()  instanceof  JsonPrimitive)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	10	None	replace
19	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
20	[BUG]  [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o  instanceof  Iterator)  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	2	replace
21	[BUG]  [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o.isPrimitive())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
22	[BUG]  [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o.isPrimitive())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.isPrimitive())  {	  if(o!=    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
23	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    if(o!=  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
24	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    if(o  ==  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
25	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  >=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  >=  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    if(o  >=  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
26	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  If(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    If(o!=  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
27	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  >>  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  >>  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    if(o  >>  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
28	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  [Delete]  null  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  [Delete]  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    if(o  [Delete]  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
29	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  [BUGGY]  null  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator)  {  if(o  [BUGGY]  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null    ||    o    instanceof    Iterator)    {    if(o  [BUGGY]  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
30	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
31	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
32	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
33	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
34	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
35	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
36	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
37	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
38	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
39	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
41	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||!(o  instanceof  JsonPrimitive))  {	  if(o    instanceof    JsonPrimitive)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
42	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o  ==  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
43	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o!=  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o!=  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
44	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  If(o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    If(o  ==  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
45	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  >=  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  >=  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o  >=  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
46	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  >>  null  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  >>  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o  >>  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
47	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  [BUGGY]  null  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  [BUGGY]  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o  [BUGGY]  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
48	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  Iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    <?>)    {    if(o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
49	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  Iterator  <?>)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  <?>)  {  If(o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    <?>)    {    If(o  instanceof  Iterator  <?>)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
50	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  iterator  <?>)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    <?>)    {    if(o  instanceof  iterator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
51	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  Ilerator  <?>)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  Ilerator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    <?>)    {    if(o  instanceof  Ilerator  <?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
52	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  Iterator  >=?>)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  <?>)  {  if(o  instanceof  Iterator  >=?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    Iterator    <?>)    {    if(o  instanceof  Iterator  >=?>)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
53	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
54	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    If(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
55	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
56	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(O  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(O  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
57	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instancesof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  instancesof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
58	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  <  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  <  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  <	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
59	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
60	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
61	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
62	[BUG]  [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
64	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
66	[BUG]  [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonArray  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
67	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  int  stackSize  =  stack[stackSize  -  1];  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  1];	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
68	[BUG]  [BUGGY]  if(o  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  if(o  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  int  stackSize  =  stack[stackSize  -  2];  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  int  stackSize  =  stack[stackSize  -  2];  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack[stackSize  -  2];	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  int  stackSize  =  stack.length();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  int  stackSize  =  stack.length();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length();	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  int  stackSize  =  stack.length;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  int  stackSize  =  stack.length;  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length;	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  int  stackSize  =  stack.length  -  1;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  int  stackSize  =  stack.length  -  1;  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.length  -  1;	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
75	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonPrimitive)  {	  if(o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
76	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
77	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  JsonObject)  {	  if(o    instanceof    JsonObject)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
78	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
79	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
80	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
81	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  &&  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
82	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <  Object>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <  Object>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator  <  Object>)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	8	None	replace
83	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgumentIterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
84	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonPrimitive  ||  o  instanceof  IllegalArgument)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
85	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  Iterator)  {  [CE]  inconvertible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o.getClass()  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()  instanceof  Iterator)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  inconvertible  types	12	None	replace
86	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
87	[BUG]  [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o.getClass()!=  getClass())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
88	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  stack.length  ==  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
89	[BUG]  [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  stack.length  ==  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  stack.length  ==  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  2)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
91	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length  <  2)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  2)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  ==  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
93	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length  ==  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  ==  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
94	[BUG]  [BUGGY]  if(o  ==  JsonToken.VALUE_NULL)  {  [CE]  cannot  find  symbol  VALUE_NULL  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.VALUE_NULL)  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	17	None	replace
95	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length!=  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
96	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length!=  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length!=  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
97	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
98	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  If(o  instanceof  JsonObject)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  If(o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    If(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
99	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instancesof  JsonObject)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instancesof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instancesof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
100	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JSONObject)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JSONObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JSONObject)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
101	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  exampleof  JsonObject)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  exampleof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  exampleof  JsonObject)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
102	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
103	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
104	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
105	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
106	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.NAME)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
107	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
108	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]  instanceof  JsonPrimitive)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
109	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  [CE]  cannot  find  symbol  UNREADABLE_READER  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.UNREADABLE_READER)  {	  if(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  UNREADABLE_READER	19	None	replace
110	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
111	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonToken.END_OBJECT)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
112	[BUG]  [BUGGY]  if(o!=  null)  {  if(o!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null)  {  if(o!=  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null)    {    if(o!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
113	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null)  {  if(o  ==  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null)    {    if(o  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
114	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null)  {  if(o  >=  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null)    {    if(o  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
115	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  >>  null)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null)  {  if(o  >>  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null)    {    if(o  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
116	[BUG]  [BUGGY]  if(o!=  null)  {  If(o!=  null)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null)  {  If(o!=  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null)    {    If(o!=  null)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
117	[BUG]  [BUGGY]  if(o!=  null)  {  if(o  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null)  {  if(o  [BUGGY]  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=    null)    {    if(o  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
118	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
119	[BUG]  [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
120	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
121	[BUG]  [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||!(o  instanceof  Iterator  <?>))  {	  if(o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
122	[BUG]  [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  Iterator  <?>,  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
123	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
124	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  If(o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    If(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
125	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instancesof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instancesof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    if(o  instancesof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
126	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  <  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  <  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonPrimitive)  <	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
127	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  exampleof  JsonPrimitive)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  exampleof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    if(o  exampleof  JsonPrimitive)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
128	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  ==  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(o  instanceof  JsonPrimitive)  ==  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    if(o  instanceof  JsonPrimitive)  ==	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
129	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  iterator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  ==  null  ||  o  instanceof  iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o  ==  null  ||  o  instanceof  iterator)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
130	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  Object  o  ==  null  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  Object  o  ==  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    Object  o  ==  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
131	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o!=  null)  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	17	None	replace
132	[BUG]  [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	17	None	replace
133	[BUG]  [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.START_OBJECT)  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	17	None	replace
134	[BUG]  [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_OBJECT)  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	17	None	replace
135	[BUG]  [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [CE]  cannot  find  symbol  START_OBJECT  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  JsonToken.START_OBJECT  ||  o  ==  JsonToken.END_ARRAY)  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	17	None	replace
136	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
137	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	2	replace
138	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(o  instanceof  JsonPrimitive)  {  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  for(o  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    for(o  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  not  a  statement	5	None	add
139	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    Object  o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
140	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    Object  o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
141	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
142	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
143	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NULL)  {  [CE]  cannot  find  symbol  NULL  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NULL)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonPrimitive.NULL)  {	  if(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  NULL	19	None	replace
144	[BUG]  [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonNull)  {  [CE]  cannot  find  symbol  JsonNull  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonNull)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack[stackSize  -  2]!=  JsonNull)  {	  if(o    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  JsonNull	19	None	replace
145	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
146	[BUG]  [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o.getClass()!=  getClass())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o.getClass()!=  getClass())  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
147	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
148	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  Iterator  <?>)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
149	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
150	[BUG]  [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  ||  o  instanceof  Iterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  ||  o  instanceof  Iterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
151	[BUG]  [BUGGY]  int  stackSize  =  stack.size();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  int  stackSize  =  stack.size();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	int  stackSize  =  stack.size();	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
152	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.toString();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.toString();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.toString();	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
153	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.getClass();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o.getClass();	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
154	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o;  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.createJsonNull()  :  o;	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
155	[BUG]  [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.getClass();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.getClass();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object  stack  =(o  ==  null)?  JsonNull.UNREADABLE_READER  :  o.getClass();	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
156	[BUG]  [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  Object  o  =  peekStack();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    Object  o  =  peekStack();	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
157	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  for(o  instanceof  JsonObject)  {  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  for(o  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    for(o  instanceof  JsonObject)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
158	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
159	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  &&  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	2	replace
160	[BUG]  [BUGGY]  if(o  ==  null)  {  if(o  {  null)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)  {  if(o  {  null)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null)    {    if(o  {  null)  {	  	non-compiled	[CE]  ')'  expected	18	None	add
161	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  Iterator)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  <?>  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>  ||  o  instanceof  Iterator)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	4	None	replace
162	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  [CE]  type  JsonObject  does  not  take  parameters  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  JsonObject  <?>)  {	  if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    	non-compiled	[CE]  type  JsonObject  does  not  take  parameters	4	None	replace
163	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize  >  0)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
164	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stackSize  >  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  >  0)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
165	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stackSize  <  =  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  <  =  0)  {	  if(o    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
166	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stackSize  <  0)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
167	[BUG]  [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stackSize  <  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stackSize  <  0)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
168	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  stack.length  <  0)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
169	[BUG]  [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  stack.length  <  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  stack.length  <  0)  {	  if(o    ==    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	replace
170	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(O  instanceof  JsonPrimitive)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive)  {  if(O  instanceof  JsonPrimitive)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive)    {    if(O  instanceof  JsonPrimitive)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
171	[BUG]  [BUGGY]  Object[]  stack  =(o  ==  null)?  null  :  o.toString();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  Object[]  stack  =(o  ==  null)?  null  :  o.toString();  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	Object[]  stack  =(o  ==  null)?  null  :  o.toString();	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
172	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_OBJECT;  }	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
173	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.END_ARRAY;  }	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
174	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_OBJECT;  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.END_OBJECT;	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
175	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o!=  null)return  JsonToken.NAME;  if(o.getClass()!=  getClass())  {  return  JsonToken.VALUE_NULL;  }	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
176	[BUG]  [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null)return  JsonToken.START_OBJECT;  if(o  ==  null)return  JsonToken.END_ARRAY;  if(o.getClass()!=  getClass())  {  return  JsonToken.NAME;  }	      	non-compiled	[CE]  illegal  start  of  type	15	None	replace
177	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stackSize  >  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
178	[BUG]  [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stackSize  >  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stackSize  >  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
180	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack[stackSize  -  2]  instanceof  JsonObject)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
181	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  o.getClass()!=  getClass())  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
182	[BUG]  [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  o.getClass()!=  getClass())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.getClass()!=  getClass())  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
183	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack.length  >  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
184	[BUG]  [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stack.length  >  0)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack.length  >  0)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
185	[BUG]  [BUGGY]  if(o!=  null  &&  o.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  o.isPrimitive())  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  o.isPrimitive())  {	  if(o!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
186	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
187	[BUG]  [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o!=  null  &&  stack[stackSize  -  1]  instanceof  JsonObject)  {	  if(o!=    null)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
188	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Ilerator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Ilerator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Ilerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
189	[BUG]  [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonPrimitive    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonPrimitive  ||  o  instanceof  Iterator?)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
190	[BUG]  [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  IllegalArgumentIterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalArgumentIterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
191	[BUG]  [BUGGY]  if(o  instanceof  IllegalIterator  <?>)  {  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  IllegalIterator  <?>)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  instanceof  IllegalIterator  <?>)  {	  if(o    instanceof    Iterator    <?>)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
192	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  {  null  ||  o  instanceof  Iterator)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  Iterator)  {  if(o  {  null  ||  o  instanceof  Iterator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    ==    null    ||    o    instanceof    Iterator)    {    if(o  {  null  ||  o  instanceof  Iterator)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
193	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	add	if(o  ==  null  ||  o  instanceof  JsonNull)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
194	[BUG]  [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  ==  null  ||  o  instanceof  JsonNull)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o  ==  null  ||  o  instanceof  JsonNull)  {	  if(o    ==    null    ||    o    instanceof    Iterator)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
195	[BUG]  [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Ilerator)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject  ||  o  instanceof  Iterator)  {  if(o  instanceof  JsonObject  ||  o  instanceof  Ilerator)  {  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject    ||    o    instanceof    Iterator)    {    if(o  instanceof  JsonObject  ||  o  instanceof  Ilerator)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
196	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
197	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.END_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
198	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
199	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.NAME;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
200	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.UNREADABLE_READER;	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
201	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.START_OBJECT;	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
202	[BUG]  [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.PREFIX;  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    @Override  public  JsonToken  peek()  throws  IOException  {  if  (stackSize  ==  0)  {  return  JsonToken.END_DOCUMENT;  }  Object  o  =  peekStack();    [BUGGY]  if(o  instanceof  JsonObject)  {  if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.PREFIX;  }  [BUGGY]    boolean  isObject  =  stack[stackSize  -  2]  instanceof  JsonObject;  Iterator<?>  iterator  =  (Iterator<?>)  o;  if  (iterator.hasNext())  {  if  (isObject)  {  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  peek();  }  }  else  {  [CLASS]  JsonTreeReader  1  [METHOD]  peek  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  isObject  JsonPrimitive  primitive  Iterator  iterator  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  o  int[]  pathIndices  String[]  pathNames  Object[]  stack  int  count  offset  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	112	112	2	replace	if(o    instanceof    JsonObject)    {    if(o  instanceof  JsonObject)  <?>  (stack[stackSize  -  2])  ==  return  JsonToken.NAME;  }  else  {  push(iterator.next());  return  JsonToken.PREFIX;  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
