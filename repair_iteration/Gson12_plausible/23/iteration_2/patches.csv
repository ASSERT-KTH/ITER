bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  +  6;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  +  6;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  +  6;	  stack[stackSize++]    =    newTop    +    8;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	82	None	replace
2	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	79	None	replace
3	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	79	None	replace
4	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >=  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >=  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >=  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	79	None	replace
5	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	79	None	replace
6	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arra  [CE]  not  a  statement  [FE]                        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arra  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arra	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  not  a  statement	79	None	replace
7	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	79	None	replace
8	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack.cloneTree();  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack.cloneTree();	  stack[stackSize++]    =    path.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newStack	68	None	replace
9	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newStack[stackSize]);  [CE]  cannot  find  symbol  path  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newStack[stackSize]);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(path,  0,  newStack[stackSize]);	  stack[stackSize++]    =    path.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  path	68	None	replace
10	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  +  pathNames;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  +  pathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  +  pathNames;	  stack[stackSize++]    =    newTop    +    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
11	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  [CE]  cannot  find  symbol  newPathIndices  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	12	None	replace
12	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  pathNames.length);  [CE]  cannot  find  symbol  newStack  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  pathNames.length);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	12	None	replace
13	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  pathNames,  0,  stackSize);  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  pathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  incompatible  types	12	None	replace
14	[BUG]  [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	12	None	replace
15	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  pathIndices,  0,  stackSize);  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  pathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  pathIndices,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  incompatible  types	12	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
17	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
18	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  Stack  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  cannot  find  symbol  Stack	37	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
20	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  newTop.toString();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
22	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  newTop.toString();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
23	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  int  stackSize  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  int  stackSize  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    int  stackSize  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  incompatible  types	37	None	add
24	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  path.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  path  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  path.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  path.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  cannot  find  symbol  path	37	None	add
25	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object[]  stack  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object[]  stack  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    Object[]  stack  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  incompatible  types	37	None	add
26	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                  AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  	non-compiled	[CE]  ']'  expected	37	None	add
27	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  cannot  find  symbol  newStack  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	83	2	replace
29	[BUG]  [BUGGY]  stack[stackSize++]  =  stack.toString();  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	83	2	replace
30	[BUG]  [BUGGY]  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  top.toString();  [CE]  cannot  find  symbol  top  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  top.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  top.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	83	None	replace
31	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
32	[BUG]  [BUGGY]  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  stack.toString();  [CE]  cannot  find  symbol  newStack  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
33	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
34	[BUG]  [BUGGY]  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  Object  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Object	39	None	replace
35	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  Stack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Stack	39	None	replace
36	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack.toString();  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack.toString();  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack.toString();  Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	39	None	replace
37	[BUG]  [BUGGY]  newStack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newStack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newStack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	39	None	replace
38	[BUG]  [BUGGY]  Object[]  newTop  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object[]  newTop  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object[]  newTop  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	39	None	replace
39	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  /  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  /  2;	  stack[stackSize++]    =    newTop    -    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	33	None	replace
40	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices  -  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices  -  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices  -  2;	  stack[stackSize++]    =    newTop    -    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	33	None	replace
41	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  [CE]  cannot  find  symbol  newPathIndices  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	13	None	replace
42	[BUG]  [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	13	None	replace
43	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathIndices  -  1;  [CE]  cannot  find  symbol  newPathIndices  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathIndices  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathIndices  -  1;	  stack[stackSize++]    =    pathIndices    -    1;    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	32	None	replace
44	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices  /  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices  /  1;	  stack[stackSize++]    =    pathIndices    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	32	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices;	  stack[stackSize++]    =    pathIndices    -    1;    	compilable	  [FE]  AssertionError  	32	2	replace
46	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices;  [FE]  AssertionError  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices;	  stack[stackSize++]    =    pathIndices    -    1;    	compilable	  [FE]  AssertionError  	32	2	replace
47	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack  -  1;  [CE]  cannot  find  symbol  newStack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack  -  1;	  stack[stackSize++]    =    pathIndices    -    1;    	non-compiled	[CE]  cannot  find  symbol  newStack	32	None	replace
48	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.clone();  [CE]  cannot  find  symbol  Stack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.clone();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
49	[BUG]  [BUGGY]  Stack[stackSize++]  =  stack.cloneTree();  [CE]  cannot  find  symbol  Stack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  stack.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  stack.cloneTree();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
50	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.cloneArray();  [CE]  cannot  find  symbol  Stack  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.cloneArray();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.cloneArray();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
51	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.clonePath();  [CE]  cannot  find  symbol  Stack  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.clonePath();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.clonePath();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
52	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.cloneThree();  [CE]  cannot  find  symbol  Stack  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.cloneThree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.cloneThree();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  stack[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathIndices.length    -    1;    stack[stackSize++]  =  pathIndices.length  -  1;	  	compilable	  [FE]  AssertionError  	34	2	add
54	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  stack[stackSize++]  =  pathIndices.length  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  stack[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    stack[stackSize++]  =  pathIndices.length  -  1;	  	compilable	  [FE]  AssertionError  	34	2	add
55	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  Stack[stackSize++]  =  pathIndices.length  -  1;  [CE]  cannot  find  symbol  Stack  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  Stack[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    Stack[stackSize++]  =  pathIndices.length  -  1;	  	non-compiled	[CE]  cannot  find  symbol  Stack	34	None	add
56	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  Object[stackSize++]  =  pathIndices.length  -  1;  [CE]  cannot  find  symbol  Object  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  Object[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    Object[stackSize++]  =  pathIndices.length  -  1;	  	non-compiled	[CE]  cannot  find  symbol  Object	34	None	add
57	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int[stackSize++]  =  pathIndices.length  -  1;  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    int[stackSize++]  =  pathIndices.length  -  1;	  	non-compiled	[CE]  ']'  expected	34	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathIndices.length    -    1;    if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }	  	compilable	  [FE]  AssertionError  	34	2	add
59	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }	  	compilable	  [FE]  AssertionError  	34	2	add
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathIndices.length    -    1;    if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	34	2	add
61	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    if(stackSize  >  0)  {  stack[stackSize++]  =  pathIndices.length  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionError  	34	2	add
62	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int  stackSize++]  =  pathIndices.length  -  1;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int  stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    int  stackSize++]  =  pathIndices.length  -  1;	  	non-compiled	[CE]  ';'  expected	34	None	add
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	2	replace
64	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	2	replace
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	2	replace
66	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	2	replace
67	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	99	2	replace
68	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	99	2	replace
69	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newStack  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	99	None	replace
70	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newStack  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	99	None	replace
71	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newStack  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	99	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	99	None	replace
73	[BUG]  [BUGGY]  stack[stackSize++]  =  newPath.toString();  [CE]  cannot  find  symbol  newPath  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPath.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPath.toString();	  stack[stackSize++]    =    path.toString();    	non-compiled	[CE]  cannot  find  symbol  newPath	53	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    newTop.toString()    +    1;    stack[stackSize++]  =  newTop.toString()  +  1;	  	compilable	  [FE]  AssertionError  	54	2	add
75	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  stack[stackSize++]  =  newTop.toString()  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    stack[stackSize++]  =  newTop.toString()  +  1;	  	compilable	  [FE]  AssertionError  	54	2	add
76	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[stackSize++]  =  newTop.toString()  +  1;  [CE]  cannot  find  symbol  Object  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    Object[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Object	54	None	add
77	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Stack[stackSize++]  =  newTop.toString()  +  1;  [CE]  cannot  find  symbol  Stack  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    Stack[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Stack	54	None	add
78	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString()  +  1;  [CE]  cannot  find  symbol  newStack  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  newStack	54	None	add
79	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int  stackSize++]  =  newTop.toString()  +  1;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int  stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    int  stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  ';'  expected	54	None	add
80	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int[stackSize++]  =  newTop.toString()  +  1;  [CE]  ']'  expected  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    int[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  ']'  expected	54	None	add
81	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString()  +  1;  [CE]  cannot  find  symbol  newStack  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  newStack	54	None	add
82	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  newTop  =  newTop.toString()  +  1;  stack[stackSize++]  =  newTop.toString()  +  1;  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                  AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  newTop  =  newTop.toString()  +  1;  stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    Object[]  newTop  =  newTop.toString()  +  1;  stack[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	54	None	add
83	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  +  2;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
84	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  newTop  +  1;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  newTop  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED,  newTop  +  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  ';'  expected	63	None	replace
85	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  3;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  +  3;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
86	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(newStack,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	92	None	replace
87	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(stack,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	92	None	replace
88	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	92	None	replace
89	[BUG]  [BUGGY]  Stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	92	None	replace
90	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(null,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(null,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(null,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	92	None	replace
91	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices  +  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices  +  3;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices  +  3;	  stack[stackSize++]    =    newTop    +    3;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	2	None	replace
92	[BUG]  [BUGGY]  stack[stackSize++]  =  NON_READABLE_READER;  [CE]  cannot  find  symbol  NON_READABLE_READER  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  NON_READABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  NON_READABLE_READER;	  stack[stackSize++]    =    SENTINEL_READER;    	non-compiled	[CE]  cannot  find  symbol  NON_READABLE_READER	14	None	replace
93	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathIndices  +  1;  [CE]  cannot  find  symbol  newPathIndices  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathIndices  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathIndices  +  1;	  stack[stackSize++]    =    pathIndices    +    1;    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	45	None	replace
94	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack  +  1;  [CE]  cannot  find  symbol  newStack  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack  +  1;	  stack[stackSize++]    =    pathIndices    +    1;    	non-compiled	[CE]  cannot  find  symbol  newStack	45	None	replace
95	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices,  newPathNames  +  1;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices,  newPathNames  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices,  newPathNames  +  1;	  stack[stackSize++]    =    pathIndices    +    1;    	non-compiled	[CE]  ';'  expected	45	None	replace
96	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [CE]  incompatible  types  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  incompatible  types	57	None	replace
97	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  [CE]  incompatible  types  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  incompatible  types	57	None	replace
98	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  -  1);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	57	None	replace
99	[BUG]  [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	57	None	replace
100	[BUG]  [BUGGY]  stack[stackSize++]  =  result;  [CE]  cannot  find  symbol  result  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  result;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  result;	  stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  result	94	None	replace
101	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_SCRIPT;  [CE]  cannot  find  symbol  DEFAULT_SCRIPT  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_SCRIPT;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_SCRIPT;	  stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SCRIPT	94	None	replace
102	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_SENTINEL_CLOSED;  [CE]  cannot  find  symbol  DEFAULT_SENTINEL_CLOSED  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_SENTINEL_CLOSED;	  stack[stackSize++]    =    DEFAULT_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SENTINEL_CLOSED	15	None	replace
103	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_RESULT;  [CE]  cannot  find  symbol  DEFAULT_RESULT  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_RESULT;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_RESULT;	  stack[stackSize++]    =    DEFAULT_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_RESULT	15	None	replace
104	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  variable  result  is  already  defined  in  method  push(Object)  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  push(Object)	84	None	add
105	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  newTop  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  newTop  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object[]  newTop  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	84	None	add
106	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  [CE]  variable  result  is  already  defined  in  method  push(Object)  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  push(Object)	84	None	add
107	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  cannot  find  symbol  Stack  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  cannot  find  symbol  Stack	84	None	add
108	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  cannot  find  symbol  Object  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  cannot  find  symbol  Object	84	None	add
109	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  stack  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  stack  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object[]  stack  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  incompatible  types	84	None	add
110	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  newTop  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  newTop  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  newTop  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	84	None	add
111	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  int  stackSize  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  incompatible  types  [FE]                  AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  int  stackSize  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    int  stackSize  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  incompatible  types	84	None	add
112	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newStack,  0,  pathSize);  [CE]  cannot  find  symbol  newStack  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newStack,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newStack,  0,  pathSize);	          System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	17	None	replace
113	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);	          System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
114	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);	          System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	2	replace
115	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newStack,  0,  pathNames.length);  [CE]  cannot  find  symbol  newStack  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newStack,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newStack,  0,  pathNames.length);	          System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	17	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);	          System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	17	None	replace
117	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathIndices  +  2;  [CE]  cannot  find  symbol  newPathIndices  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathIndices  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathIndices  +  2;	  stack[stackSize++]    =    pathIndices    +    2;    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	3	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.length  +  2;	  stack[stackSize++]    =    pathIndices    +    2;    	compilable	  [FE]  AssertionError  	3	2	replace
119	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  +  2;  [FE]  AssertionError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.length  +  2;	  stack[stackSize++]    =    pathIndices    +    2;    	compilable	  [FE]  AssertionError  	3	2	replace
120	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices  *  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices  *  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices  *  2;	  stack[stackSize++]    =    pathIndices    +    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	3	None	replace
121	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices  /  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices  /  2;	  stack[stackSize++]    =    pathIndices    +    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	3	None	replace
122	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack  +  2;  [CE]  cannot  find  symbol  newStack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack  +  2;	  stack[stackSize++]    =    pathIndices    +    2;    	non-compiled	[CE]  cannot  find  symbol  newStack	3	None	replace
123	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newStack  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	97	None	replace
124	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newStack  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	97	None	replace
125	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	97	2	replace
126	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	97	2	replace
127	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	97	2	replace
128	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	97	2	replace
129	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	97	None	replace
130	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	97	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	97	None	replace
132	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathIndices  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	20	None	replace
133	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathIndices  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	20	None	replace
134	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathIndices  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	20	None	replace
135	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	20	None	replace
136	[BUG]  [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathIndices  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	20	None	replace
137	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathIndices  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathIndices,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	20	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathIndices.toString();    stack[stackSize++]  =  pathIndices.toString();	  	compilable	  [FE]  AssertionError  	46	2	add
139	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  pathIndices.toString();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  stack[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    stack[stackSize++]  =  pathIndices.toString();	  	compilable	  [FE]  AssertionError  	46	2	add
140	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  Stack[stackSize++]  =  pathIndices.toString();  [CE]  cannot  find  symbol  Stack  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  Stack[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    Stack[stackSize++]  =  pathIndices.toString();	  	non-compiled	[CE]  cannot  find  symbol  Stack	46	None	add
141	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  Object[stackSize++]  =  pathIndices.toString();  [CE]  cannot  find  symbol  Object  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  Object[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    Object[stackSize++]  =  pathIndices.toString();	  	non-compiled	[CE]  cannot  find  symbol  Object	46	None	add
142	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	46	None	add
143	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  newStack[stackSize++]  =  pathIndices.toString();  }  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  newStack[stackSize++]  =  pathIndices.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  newStack[stackSize++]  =  pathIndices.toString();  }	  	non-compiled	[CE]  cannot  find  symbol  newStack	46	None	add
144	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  int  stackSize++]  =  pathIndices.toString();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  int  stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    int  stackSize++]  =  pathIndices.toString();	  	non-compiled	[CE]  ';'  expected	46	None	add
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathIndices.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }	  	compilable	  [FE]  AssertionError  	46	2	add
146	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }	  	compilable	  [FE]  AssertionError  	46	2	add
147	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                  AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathIndices.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newStack	46	None	add
148	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	96	2	add
149	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	96	2	add
150	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  Stack	96	None	add
151	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  	compilable	  [FE]  IllegalStateException  	96	2	add
152	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);	  	compilable	  [FE]  IllegalStateException  	96	2	add
153	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  newPathNames);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  newPathNames);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  newPathNames);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	96	None	add
154	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSEED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLOSEED  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSEED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSEED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSEED	96	None	add
155	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  newStack	96	None	add
156	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	96	2	add
157	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	96	2	add
158	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  newStackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStackSize  [FE]                  IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  newStackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  newStackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  newStackSize	96	None	add
159	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames,  newStack.cloneTree();  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames,  newStack.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames,  newStack.cloneTree();	  stack[stackSize++]    =    pathNames.cloneTree();    	non-compiled	[CE]  ';'  expected	66	None	replace
160	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathNames.cloneTree();  [CE]  cannot  find  symbol  newPathNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathNames.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathNames.cloneTree();	  stack[stackSize++]    =    pathNames.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newPathNames	66	None	replace
161	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toArray(newStack[stackSize]);  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toArray(newStack[stackSize]);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toArray(newStack[stackSize]);	  stack[stackSize++]    =    pathNames.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newStack	66	None	replace
162	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
163	[BUG]  [BUGGY]  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  stack.toString();  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
164	[BUG]  [BUGGY]  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  top.toString();  [CE]  cannot  find  symbol  top  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  top.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  top.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	86	None	replace
165	[BUG]  [BUGGY]  stack[stackSize++]  =  path.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  path  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  path.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  path.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  path	86	None	replace
166	[BUG]  [BUGGY]  Stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  stack.toString();  [CE]  cannot  find  symbol  Stack  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Stack	86	None	replace
167	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.getValue();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.getValue();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.getValue();	  stack[stackSize++]    =    SENTINEL_CLOSED.toString();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
168	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	22	None	replace
169	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	22	None	replace
170	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	22	None	replace
171	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	22	None	replace
172	[BUG]  [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	22	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  [CE]  cannot  find  symbol  newPathIndices  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	19	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	19	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(paths,  0,  newPathIndices,  0,  stackSize);  [CE]  cannot  find  symbol  paths  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(paths,  0,  newPathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(paths,  0,  newPathIndices,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  paths	19	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(newStack,  0,  newPathIndices,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newStack,  0,  newPathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newStack,  0,  newPathIndices,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	19	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
178	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	2	replace
180	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	2	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
182	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
184	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
185	[BUG]  [BUGGY]  null  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  unexpected  type  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  null  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	null  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  unexpected  type	38	None	replace
186	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  Stack  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Stack	38	None	replace
187	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack.toString();  Stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack.toString();  Stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack.toString();  Stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	40	None	replace
188	[BUG]  [BUGGY]  stack[size++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  size  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[size++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[size++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  size	40	None	replace
189	[BUG]  [BUGGY]  stack[0]  =  newTop.toString();  Stack[0]  =  newTop.toString();  [CE]  cannot  find  symbol  Stack  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[0]  =  newTop.toString();  Stack[0]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[0]  =  newTop.toString();  Stack[0]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Stack	40	None	replace
190	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
191	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
192	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
193	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
194	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
195	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	98	2	add
196	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	98	2	add
197	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  Stack	98	None	add
198	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  	compilable	  [FE]  IllegalStateException  	98	2	add
199	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);	  	compilable	  [FE]  IllegalStateException  	98	2	add
200	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  ']'  expected  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  ']'  expected	98	None	add
201	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	98	2	add
202	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	98	2	add
203	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSEED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLOSEED  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSEED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSEED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSEED	98	None	add
204	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  newStack	98	None	add
205	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED	  	non-compiled	[CE]  ';'  expected	98	None	add
206	[BUG]  [BUGGY]  int[stackSize++]  =  SENTINEL_CLOSED;  [CE]  ']'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  int[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	int[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
207	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
208	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
209	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  int[stackSize++]  =  SENTINEL_CLOSED;  [CE]  ']'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  int[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  int[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
210	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ']'  expected  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
211	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathIndices,  0,  newStack  [CE]  ']'  expected  [FE]                        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathIndices,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathIndices,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.length  -  2;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
213	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.length  -  2;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
214	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathIndices.length  -  1;  [CE]  cannot  find  symbol  newPathIndices  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathIndices.length  -  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	35	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  /  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.length  /  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
216	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  /  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  /  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.length  /  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
217	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack.length  -  1;  [CE]  cannot  find  symbol  newStack  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack.length  -  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  newStack	35	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.length;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
219	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.length;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
220	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathNames.length  -  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
221	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.length  -  1;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.length  -  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
222	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	58	None	replace
223	[BUG]  [BUGGY]  Stack[stackSize++]  =  System.arraycopy(path,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  System.arraycopy(path,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  System.arraycopy(path,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	58	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    UNREADABLE_READER;    stack[stackSize++]  =  UNREADABLE_READER;	  	compilable	  [FE]  AssertionError  	10	2	add
225	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  UNREADABLE_READER;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    stack[stackSize++]  =  UNREADABLE_READER;	  	compilable	  [FE]  AssertionError  	10	2	add
226	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
227	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
228	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
229	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  Stack[stackSize++]  =  UNREADABLE_READER;  [CE]  cannot  find  symbol  Stack  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  Stack[stackSize++]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    Stack[stackSize++]  =  UNREADABLE_READER;	  	non-compiled	[CE]  cannot  find  symbol  Stack	10	None	add
230	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
231	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  pathNames[stackSize++]  =  UNREADABLE_READER;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  pathNames[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  pathNames[stackSize++]  =  UNREADABLE_READER;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
232	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]                  AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	10	None	add
233	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathNames.toString();  [CE]  cannot  find  symbol  newPathNames  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathNames.toString();	  stack[stackSize++]    =    pathNames.toString();    	non-compiled	[CE]  cannot  find  symbol  newPathNames	52	None	replace
234	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.substring(0,  stackSize);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.substring(0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.substring(0,  stackSize);	  stack[stackSize++]    =    pathNames.toString();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathNames.toString()  +  1;	  stack[stackSize++]    =    pathNames.toString();    	compilable	  [FE]  AssertionError  	52	2	replace
236	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString()  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toString()  +  1;	  stack[stackSize++]    =    pathNames.toString();    	compilable	  [FE]  AssertionError  	52	2	replace
237	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.clone();	  stack[stackSize++]    =    newTop.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	7	None	replace
238	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack.clone();  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack.clone();	  stack[stackSize++]    =    newTop.clone();    	non-compiled	[CE]  cannot  find  symbol  newStack	7	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.clone();	  stack[stackSize++]    =    newTop.clone();    	compilable	  [FE]  AssertionError  	7	2	replace
240	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.clone();  [FE]  AssertionError  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.clone();	  stack[stackSize++]    =    newTop.clone();    	compilable	  [FE]  AssertionError  	7	2	replace
241	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  [CE]  cannot  find  symbol  newPathNames  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	16	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  -  1);	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	16	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  pathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  pathNames,  0,  stackSize);	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	16	None	replace
244	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathIndices.toString();  [CE]  cannot  find  symbol  newPathIndices  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathIndices.toString();	  stack[stackSize++]    =    pathIndices.toString();    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	47	None	replace
245	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
246	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  int  stackSize++]  =  SENTINEL_CLOSED;  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  int  stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  int  stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
247	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
248	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
249	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
250	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
251	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
252	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
253	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	100	None	replace
254	[BUG]  [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	100	None	replace
255	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_READER;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_READER;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_READER;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	100	None	replace
256	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  return;  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	91	None	replace
257	[BUG]  [BUGGY]  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  return;  [CE]  cannot  find  symbol  newStack  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	non-compiled	[CE]  cannot  find  symbol  newStack	91	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	non-compiled	[CE]  cannot  find  symbol  newStack	91	None	replace
259	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  return;  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	91	None	replace
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
261	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
262	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	2	replace
263	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	2	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
265	[BUG]  [BUGGY]  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
267	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
269	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	compilable	  [FE]  AssertionError  	85	2	replace
270	[BUG]  [BUGGY]  null  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  unexpected  type  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  null  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	null  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  unexpected  type	85	None	replace
271	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    stack[stackSize++]  =  SENTINEL_CLOSED.toString();	  	compilable	  [FE]  AssertionError  	49	2	add
272	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    stack[stackSize++]  =  SENTINEL_CLOSED.toString();	  	compilable	  [FE]  AssertionError  	49	2	add
273	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  cannot  find  symbol  Stack  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    Stack[stackSize++]  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  cannot  find  symbol  Stack	49	None	add
274	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  cannot  find  symbol  Object  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    Object[stackSize++]  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  cannot  find  symbol  Object	49	None	add
275	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  int  stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  int  stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    int  stackSize++]  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  ';'  expected	49	None	add
276	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  int[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  int[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    int[stackSize++]  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  ']'  expected	49	None	add
277	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    System.arraycopy(stack[stackSize++]  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  ')'  expected	49	None	add
278	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack[stackSize++]  =  SENTINEL_CLOSED.toString());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack[stackSize++]  =  SENTINEL_CLOSED.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    System.arraycopy(stack[stackSize++]  =  SENTINEL_CLOSED.toString());	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	49	None	add
279	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	72	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	72	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	72	None	replace
282	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newPathNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  SENTINEL_CLOSED;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	72	None	replace
283	[BUG]  [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
284	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  Stack  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol  Stack	43	None	replace
285	[BUG]  [BUGGY]  ((  JsonTreeReader)stack[0]).write(newTop.toString());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)stack[0]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)stack[0]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
286	[BUG]  [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).write(newTop,  newStack.toString());  [CE]  cannot  find  symbol  newStack  [FE]                        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).write(newTop,  newStack.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)stack[stackSize++]).write(newTop,  newStack.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol  newStack	43	None	replace
287	[BUG]  [BUGGY]  ((  JsonTreeReader)newStack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  newStack  [FE]                          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)newStack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)newStack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol  newStack	43	None	replace
288	[BUG]  [BUGGY]  ((  JsonTreeReader)newTop[stackSize++]).write(newTop.toString());  [CE]  array  required,  but  Object  found  [FE]                            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)newTop[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)newTop[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  array  required,  but  Object  found	43	None	replace
289	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
290	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	75	None	replace
291	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	75	None	replace
292	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
293	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newPathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	18	None	replace
294	[BUG]  [BUGGY]  System.arraycopy(paths,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  paths  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(paths,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(paths,  0,  newPathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  paths	18	None	replace
295	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newStack,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	18	None	replace
296	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[0]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[0]  =  UNREADABLE_READER;	  stack[stackSize++]    =    UNREADABLE_READER;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
297	[BUG]  [BUGGY]  stack[0]  =  UNREADABLE_READER;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[0]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[0]  =  UNREADABLE_READER;	  stack[stackSize++]    =    UNREADABLE_READER;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	2	replace
298	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
299	[BUG]  [BUGGY]  stack[stackSize++]  =  stack.toString();  Object  newTop  =  stack[stackSize++]  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  Object  newTop  =  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  stack.toString();  Object  newTop  =  stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
300	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  method.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  method.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  method.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
301	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
302	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
303	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  pathNames.length);  [CE]  cannot  find  symbol  newStack  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  pathNames.length);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	59	None	replace
304	[BUG]  [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  Stack	59	None	replace
305	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize  -  1);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	59	None	replace
306	[BUG]  [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(stack,  0,  newStack,  0,  stackSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	73	None	replace
307	[BUG]  [BUGGY]  newTop  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	73	None	replace
308	[BUG]  [BUGGY]  newTop  =  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(newStack,  0,  newPathNames,  0,  stackSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	73	None	replace
309	[BUG]  [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  newPathNames  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize  -  1);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	73	None	replace
310	[BUG]  [BUGGY]  newTop  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	73	None	replace
311	[BUG]  [BUGGY]  newTop  =  System.arraycopy(paths,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  paths  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(paths,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(paths,  0,  newPathNames,  0,  stackSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  paths	73	None	replace
312	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  /  4;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  /  4;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  /  4;	  stack[stackSize++]    =    newTop    /    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	36	None	replace
313	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  /  3;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  /  3;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  /  3;	  stack[stackSize++]    =    newTop    /    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	36	None	replace
314	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
315	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
316	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
317	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize!=  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize!=  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize!=  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
318	[BUG]  [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Stack	25	None	replace
319	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	replace
320	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	replace
321	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	25	None	replace
322	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	25	2	replace
323	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	25	2	replace
324	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  1,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newPathNames,  1,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	90	None	replace
325	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  1,  stack.length);  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  1,  stack.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  1,  stack.length);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	90	None	replace
326	[BUG]  [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  1,  stack.length);  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  1,  stack.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stackNames,  0,  newPathNames,  1,  stack.length);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  stackNames	90	None	replace
327	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  1,  stack.length  -  1);  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  1,  stack.length  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newPathNames,  1,  stack.length  -  1);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	90	None	replace
328	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  1,  stack.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	System.arraycopy(stack,  0,  pathNames,  1,  stack.length);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	replace
329	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  pathNames,  1,  stack.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  1,  stack.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  pathNames,  1,  stack.length);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	2	replace
330	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  1,  stack.length);  [CE]  cannot  find  symbol  newPathNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  1,  stack.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newPathNames,  1,  stack.length);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	90	None	replace
331	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathNames.toString();    stack[stackSize++]  =  pathNames.toString();	  	compilable	  [FE]  AssertionError  	51	2	add
332	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  pathNames.toString();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    stack[stackSize++]  =  pathNames.toString();	  	compilable	  [FE]  AssertionError  	51	2	add
333	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  Stack[stackSize++]  =  pathNames.toString();  [CE]  cannot  find  symbol  Stack  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  Stack[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    Stack[stackSize++]  =  pathNames.toString();	  	non-compiled	[CE]  cannot  find  symbol  Stack	51	None	add
334	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  Object[stackSize++]  =  pathNames.toString();  [CE]  cannot  find  symbol  Object  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  Object[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    Object[stackSize++]  =  pathNames.toString();	  	non-compiled	[CE]  cannot  find  symbol  Object	51	None	add
335	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	51	None	add
336	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newStack	51	None	add
337	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathNames.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }	  	compilable	  [FE]  AssertionError  	51	2	add
338	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }	  	compilable	  [FE]  AssertionError  	51	2	add
339	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  newStack[stackSize++]  =  pathNames.toString();  }  [CE]  cannot  find  symbol  newStack  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  newStack[stackSize++]  =  pathNames.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    if(stackSize  >=  0)  {  stack[stackSize++]  =  pathNames.toString();  }  else  {  newStack[stackSize++]  =  pathNames.toString();  }	  	non-compiled	[CE]  cannot  find  symbol  newStack	51	None	add
340	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  int  stackSize++]  =  pathNames.toString();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  int  stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    int  stackSize++]  =  pathNames.toString();	  	non-compiled	[CE]  ';'  expected	51	None	add
341	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	24	2	add
342	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	24	2	add
343	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  Stack	24	None	add
344	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Object  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  Object	24	None	add
345	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  PENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  PENTINEL_CLOSED  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  PENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  PENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  PENTINEL_CLOSED	24	None	add
346	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLLOSED  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLLOSED	24	None	add
347	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  DENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  DENTINEL_CLOSED  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  DENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  DENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  DENTINEL_CLOSED	24	None	add
348	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSEED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLOSEED  [FE]                IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSEED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSEED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSEED	24	None	add
349	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[0]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	24	2	add
350	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[0]  =  SENTINEL_CLOSED;  stack[0]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	24	2	add
351	[BUG]  [BUGGY]  newStack[stackSize++]  =  SENTINEL_CLOSED;  newStack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newStack[stackSize++]  =  SENTINEL_CLOSED;  newStack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newStack[stackSize++]  =  SENTINEL_CLOSED;  newStack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	30	None	replace
352	[BUG]  [BUGGY]  array[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  array  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  array[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	array[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  array	30	None	replace
353	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  newStack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  newStack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED;  newStack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	30	None	replace
354	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	71	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  pathNames  =  newPathNames;	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	71	None	replace
356	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	71	None	replace
357	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathIndices.cloneTree();  [CE]  cannot  find  symbol  newPathIndices  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathIndices.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathIndices.cloneTree();	  stack[stackSize++]    =    pathIndices.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	6	None	replace
358	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices,  newStack.cloneTree();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices,  newStack.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices,  newStack.cloneTree();	  stack[stackSize++]    =    pathIndices.cloneTree();    	non-compiled	[CE]  ';'  expected	6	None	replace
359	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toArray(newStack[stackSize]);  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toArray(newStack[stackSize]);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.toArray(newStack[stackSize]);	  stack[stackSize++]    =    pathIndices.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newStack	6	None	replace
360	[BUG]  [BUGGY]  int  stackSize  =  newTop.toString();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  int  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	int  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  incompatible  types	87	None	replace
361	[BUG]  [BUGGY]  stackSize  =  newTop.toString();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  incompatible  types	87	None	replace
362	[BUG]  [BUGGY]  stackSize++;  int  stackSize  =  newTop.toString();  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stackSize++;  int  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stackSize++;  int  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  incompatible  types	87	None	replace
363	[BUG]  [BUGGY]  Object[]  newTop  =  newTop.toString();  int  stackSize  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object[]  newTop  =  newTop.toString();  int  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object[]  newTop  =  newTop.toString();  int  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	87	None	replace
364	[BUG]  [BUGGY]  Object[]  newTop  =  newTop.toString();  int  stackSize  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object[]  newTop  =  newTop.toString();  int  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object[]  newTop  =  newTop.toString();  int  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	87	None	replace
365	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathNames  +  1;  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathNames  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathNames  +  1;	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	64	None	replace
366	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathNames;	  stack[stackSize++]    =    pathNames    +    1;    	compilable	  [FE]  AssertionError  	64	2	replace
367	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames;  [FE]  AssertionError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames;	  stack[stackSize++]    =    pathNames    +    1;    	compilable	  [FE]  AssertionError  	64	2	replace
368	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames,  newPathNames  +  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames,  newPathNames  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames,  newPathNames  +  1;	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  ';'  expected	64	None	replace
369	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.length  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathNames.length  +  1;	  stack[stackSize++]    =    pathNames    +    1;    	compilable	  [FE]  AssertionError  	64	2	replace
370	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.length  +  1;  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.length  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.length  +  1;	  stack[stackSize++]    =    pathNames    +    1;    	compilable	  [FE]  AssertionError  	64	2	replace
371	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames  +  2;	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	64	None	replace
372	[BUG]  [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	23	None	replace
373	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	23	None	replace
374	[BUG]  [BUGGY]  if(pathNames  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames  ==  null)  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	23	None	replace
375	[BUG]  [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	23	None	replace
376	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
377	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
378	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
379	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
380	[BUG]  [BUGGY]  int  stackSize  =  stack.toString();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  int  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	int  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	non-compiled	[CE]  incompatible  types	61	None	replace
381	[BUG]  [BUGGY]  stackSize  =  stack.toString();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	non-compiled	[CE]  incompatible  types	61	None	replace
382	[BUG]  [BUGGY]  stackSize++;  int  stackSize  =  stack.toString();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stackSize++;  int  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stackSize++;  int  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	non-compiled	[CE]  incompatible  types	61	None	replace
383	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	Object  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	2	replace
384	[BUG]  [BUGGY]  Object  stackSize  =  stack.toString();  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	2	replace
385	[BUG]  [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Stack	26	None	replace
386	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  Stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	26	None	replace
387	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop;  Stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Stack	26	None	replace
388	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSEED;  Stack[stackSize++]  =  SENTINEL_CLOSEED;  [CE]  cannot  find  symbol  SENTINEL_CLOSEED  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSEED;  Stack[stackSize++]  =  SENTINEL_CLOSEED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSEED;  Stack[stackSize++]  =  SENTINEL_CLOSEED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSEED	26	None	replace
389	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack;  Stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	26	None	replace
390	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  newTop.cloneTree();  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  newTop.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED,  newTop.cloneTree();	  stack[stackSize++]    =    SENTINEL_CLOSED.cloneTree();    	non-compiled	[CE]  ';'  expected	5	None	replace
391	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames.cloneTree();  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames.cloneTree();	  stack[stackSize++]    =    SENTINEL_CLOSED.cloneTree();    	non-compiled	[CE]  ';'  expected	5	None	replace
392	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER.cloneTree();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER.cloneTree();	  stack[stackSize++]    =    SENTINEL_CLOSED.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
393	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
394	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
395	[BUG]  [BUGGY]  int[stackSize++]  =  newTop.toString();  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  int[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	int[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
396	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  	42	None	replace
397	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  [CE]  ']'  expected  [FE]                        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
398	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString(newTop);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString(newTop);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toString(newTop);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	56	None	replace
399	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  newPathNames);  [CE]  cannot  find  symbol  newPathNames  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  newPathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString(pathNames,  newPathNames);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	56	None	replace
400	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  newStack);  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  newStack);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString(pathNames,  newStack);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  cannot  find  symbol  newStack	56	None	replace
401	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  pathIndices);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  pathIndices);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString(pathNames,  pathIndices);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	56	None	replace
402	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  SENTINEL_CLOSED);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  SENTINEL_CLOSED);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString(pathNames,  SENTINEL_CLOSED);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	56	None	replace
403	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString(pathNames);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString(pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString(pathNames);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	56	None	replace
404	[BUG]  [BUGGY]  Stack[stackSize++]  =  pathNames.toString(newTop);  [CE]  cannot  find  symbol  Stack  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  pathNames.toString(newTop);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  pathNames.toString(newTop);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  cannot  find  symbol  Stack	56	None	replace
405	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLLOSED  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLLOSED	31	None	replace
406	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLLOSED;  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  stack[stackSize++]  =  SENTINEL_CLLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	31	None	replace
407	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
408	[BUG]  [BUGGY]  if(pathNames  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
409	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
410	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathIndices,  0,  stackSize);  pathNames  =  newPathNames;	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
411	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
412	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
413	[BUG]  [BUGGY]  if(newStack!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newStack!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newStack!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	70	None	replace
414	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
415	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
416	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
417	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >=  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >=  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >=  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
418	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathNames  -  1;  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathNames  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathNames  -  1;	  stack[stackSize++]    =    pathNames    -    1;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	80	None	replace
419	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames  /  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames  /  1;	  stack[stackSize++]    =    pathNames    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	80	None	replace
420	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames,  newPathNames  -  1;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames,  newPathNames  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames,  newPathNames  -  1;	  stack[stackSize++]    =    pathNames    -    1;    	non-compiled	[CE]  ';'  expected	80	None	replace
421	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathNames.length  -  1;  [CE]  cannot  find  symbol  newPathNames  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathNames.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathNames.length  -  1;	  stack[stackSize++]    =    pathNames    -    1;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	80	None	replace
422	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSEED;  [CE]  cannot  find  symbol  SENTINEL_CLOSEED  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSEED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSEED;	  stack[stackSize++]    =    STACK_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSEED	93	None	replace
423	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_STACK_CLOSED;  [CE]  cannot  find  symbol  DEFAULT_STACK_CLOSED  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_STACK_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_STACK_CLOSED;	  stack[stackSize++]    =    STACK_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_STACK_CLOSED	93	None	replace
424	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.newInstance();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.newInstance();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.newInstance();	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
425	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.instance.cloneTree();  [CE]  cannot  find  symbol  instance  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.instance.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.instance.cloneTree();	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  instance	9	None	replace
426	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.newCurrentTree();  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.newCurrentTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.newCurrentTree();	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
427	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(newTop);  [CE]  cannot  find  symbol  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(newTop);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findCurrentTree(newTop);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
428	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(newTop,  JsonTreeReader.class);  [CE]  cannot  find  symbol  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(newTop,  JsonTreeReader.class);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findCurrentTree(newTop,  JsonTreeReader.class);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
429	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.newInstance(JsonTreeReader.class);  [CE]  cannot  find  symbol  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.newInstance(JsonTreeReader.class);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.newInstance(JsonTreeReader.class);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
430	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.createRootTree(newTop,  JsonTreeReader.class);  [CE]  cannot  find  symbol  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.createRootTree(newTop,  JsonTreeReader.class);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.createRootTree(newTop,  JsonTreeReader.class);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
431	[BUG]  [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
432	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(false);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(false);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(false);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
433	[BUG]  [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).setAliased(false);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)stack[stackSize++]).setAliased(false);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)stack[stackSize++]).setAliased(false);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
434	[BUG]  [BUGGY]  ((  JsonTreeReader)newStack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  newStack  [FE]                          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  ((  JsonTreeReader)newStack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	((  JsonTreeReader)newStack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol  newStack	44	None	replace
435	[BUG]  [BUGGY]  stack[stackSize++]  =  stack.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  stack.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
436	[BUG]  [BUGGY]  Stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  Stack  [FE]                              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  newTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol  Stack	44	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.toString()  +  1;	  stack[stackSize++]    =    newTop.toString()    +    1;    	compilable	  [FE]  AssertionError  	55	2	replace
438	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString()  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.toString()  +  1;	  stack[stackSize++]    =    newTop.toString()    +    1;    	compilable	  [FE]  AssertionError  	55	2	replace
439	[BUG]  [BUGGY]  stack[stackSize++]  =  path.toString()  +  1;  [CE]  cannot  find  symbol  path  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  path.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  path.toString()  +  1;	  stack[stackSize++]    =    newTop.toString()    +    1;    	non-compiled	[CE]  cannot  find  symbol  path	55	None	replace
440	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	74	None	replace
441	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	74	None	replace
442	[BUG]  [BUGGY]  if(pathNames  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	74	None	replace
443	[BUG]  [BUGGY]  Object  newTop  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	62	None	replace
444	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack.toString();  Object  newTop  =  stack.toString();  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack.toString();  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack.toString();  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	62	None	replace
445	[BUG]  [BUGGY]  stack[stackSize++]  =  stack.toString();  Object  newTop  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  stack.toString();  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  stack.toString();  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	62	None	replace
446	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object  newTop  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	62	None	replace
447	[BUG]  [BUGGY]  Stack  stack[stackSize++]  =  newStack.toString();  Object  newTop  =  stack.toString();  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack  stack[stackSize++]  =  newStack.toString();  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack  stack[stackSize++]  =  newStack.toString();  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  ']'  expected	62	None	replace
448	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  Object  newTop  =  stack.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED;  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	62	None	replace
449	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathIndices,  0,  pathSize);  [CE]  cannot  find  symbol  newPathIndices  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathIndices,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathIndices,  0,  pathSize);	          System.arraycopy(pathNames,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	21	None	replace
450	[BUG]  [BUGGY]  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Object  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
451	[BUG]  [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Stack	27	None	replace
452	[BUG]  [BUGGY]  newStack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newStack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newStack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	27	None	replace
453	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_READER  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_READER;  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_READER;  Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_READER	27	None	replace
454	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop;  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Object  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop;  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop;  Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
455	[BUG]  [BUGGY]  stack[stackSize++]  =  newStack;  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newStack  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newStack;  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newStack;  Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	27	None	replace
456	[BUG]  [BUGGY]  System.arraycopy(newStack,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newStack,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newStack,  0,  newStack,  0,  stackSize);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	89	None	replace
457	[BUG]  [BUGGY]  System.arraycopy(paths,  0,  newStack,  0,  stackSize);  [CE]  cannot  find  symbol  paths  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(paths,  0,  newStack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(paths,  0,  newStack,  0,  stackSize);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  paths	89	None	replace
458	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	System.arraycopy(stack,  0,  pathIndices,  0,  stackSize);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	compilable	  [FE]  ArrayStoreException  	89	2	replace
459	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  pathIndices,  0,  stackSize);  [FE]  ArrayStoreException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  pathIndices,  0,  stackSize);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	compilable	  [FE]  ArrayStoreException  	89	2	replace
460	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  System.arraycopy(newStack,  0,  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  System.arraycopy(newStack,  0,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  System.arraycopy(newStack,  0,	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
461	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  System.arraycopy(newStack,  0,  stack  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  System.arraycopy(newStack,  0,  stack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  System.arraycopy(newStack,  0,  stack	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  ')'  expected	85	None	replace
462	[BUG]  [BUGGY]  Object  newTop  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	85	None	replace
463	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  else  {	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  ';'  expected	85	None	replace
464	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL;  [CE]  cannot  find  symbol  SENTINEL  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL;	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL	31	None	replace
465	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_LEADED;  [CE]  cannot  find  symbol  SENTINEL_LEADED  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_LEADED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_LEADED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_LEADED	31	None	replace
466	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  Object  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
467	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  Object  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
468	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
469	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
470	[BUG]  [BUGGY]  stack[stackSize++]  =  next.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  next  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  next.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  next.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol  next	43	None	replace
471	[BUG]  [BUGGY]  stack[stackSize++]  =  path.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  path  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  path.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  path.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol  path	43	None	replace
472	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
473	[BUG]  [BUGGY]  stack[stackSize++]  =  toolkit.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  toolkit  [FE]                        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  toolkit.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  toolkit.toString();  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol  toolkit	43	None	replace
474	[BUG]  [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int  stackSize  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathIndices.length    -    1;    int  stackSize  =  pathIndices.length  -  1;	  	compilable	  [FE]  AssertionError  	34	2	add
476	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int  stackSize  =  pathIndices.length  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  int  stackSize  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    int  stackSize  =  pathIndices.length  -  1;	  	compilable	  [FE]  AssertionError  	34	2	add
477	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  System.arraycopy(pathNames,  0,  stack[stackSize++]  =  pathIndices.length  -  1;  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  System.arraycopy(pathNames,  0,  stack[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    System.arraycopy(pathNames,  0,  stack[stackSize++]  =  pathIndices.length  -  1;	  	non-compiled	[CE]  ')'  expected	34	None	add
478	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  array[stackSize++]  =  pathIndices.length  -  1;  [CE]  cannot  find  symbol  array  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  array[stackSize++]  =  pathIndices.length  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    array[stackSize++]  =  pathIndices.length  -  1;	  	non-compiled	[CE]  cannot  find  symbol  array	34	None	add
479	[BUG]  [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	73	None	replace
480	[BUG]  [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  pathSize);  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(stack,  0,  newPathNames,  0,  pathSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	73	None	replace
481	[BUG]  [BUGGY]  newTop  =  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  [CE]  incompatible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  newTop  =  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	newTop  =  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);	          newTop    =    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  incompatible  types	73	None	replace
482	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  System.arraycopy(stack[stackSize++]  =  newTop.toString()  +  1;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  System.arraycopy(stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    System.arraycopy(stack[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  ')'  expected	54	None	add
483	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  stack[stackSize++]  =  newTop.toString()  +  1;  [CE]  ']'  expected  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  stack[stackSize++]  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    Object[]  stack[stackSize++]  =  newTop.toString()  +  1;	  	non-compiled	[CE]  ']'  expected	54	None	add
484	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  newTop  =  newTop.toString()  +  1;  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  newTop  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    Object[]  newTop  =  newTop.toString()  +  1;	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	54	None	add
485	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  newTop  =  stack.toString()  +  1;  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  Object[]  newTop  =  stack.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    Object[]  newTop  =  stack.toString()  +  1;	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	54	None	add
486	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int  stackSize  =  stack.toString()  +  1;  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int  stackSize  =  stack.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    int  stackSize  =  stack.toString()  +  1;	  	non-compiled	[CE]  incompatible  types	54	None	add
487	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Stack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER;  Stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Stack	26	None	replace
488	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
489	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
490	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
491	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  0);  [CE]  cannot  find  symbol  newPathNames  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  0);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  0);	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  cannot  find  symbol  newPathNames	78	None	replace
492	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
493	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  pathNames);  [CE]  cannot  find  symbol  newStack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  pathNames);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	12	None	replace
494	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  0);  [CE]  cannot  find  symbol  newStack  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  0);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  0);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	12	None	replace
495	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPath,  0,  stackSize);  [CE]  cannot  find  symbol  newPath  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPath,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPath,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPath	12	None	replace
496	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newStack,  0,  pathNames.length);  [CE]  cannot  find  symbol  newStack  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newStack,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newStack,  0,  pathNames.length);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	89	None	replace
497	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	System.arraycopy(stack,  0,  pathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
498	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  pathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	2	replace
499	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newStack,  0,  pathNames);  [CE]  cannot  find  symbol  newStack  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newStack,  0,  pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newStack,  0,  pathNames);	          System.arraycopy(stack,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	89	None	replace
500	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	18	None	replace
501	[BUG]  [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stackNames,  0,  newPathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  stackNames	18	None	replace
502	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  0,  pathSize);  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newPathNames,  0,  pathSize);	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	18	None	replace
503	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newPathNames,  0,  pathSize);  [CE]  cannot  find  symbol  path  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newPathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(path,  0,  newPathNames,  0,  pathSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  path	58	None	replace
504	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  Stack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Stack	40	None	replace
505	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  Stack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Stack	40	None	replace
506	[BUG]  [BUGGY]  stack[stackSize++]  =  top.toString();  Stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  top  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  top.toString();  Stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  top.toString();  Stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	40	None	replace
507	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toArray(new  String[stackSize]);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toArray(new  String[stackSize]);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toArray(new  String[stackSize]);	  stack[stackSize++]    =    pathNames.toString();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
508	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toArray(new  String[pathNames.size()  ]);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toArray(new  String[pathNames.size()  ]);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toArray(new  String[pathNames.size()  ]);	  stack[stackSize++]    =    pathNames.toString();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
509	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toPath();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toPath();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toPath();	  stack[stackSize++]    =    pathNames.toString();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
510	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	57	None	replace
511	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	57	None	replace
512	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  pathNames.length);  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  pathNames.length);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  incompatible  types	57	None	replace
513	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  0);  [CE]  cannot  find  symbol  newPathNames  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  0);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  0);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	57	None	replace
514	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  newStackSize);  [CE]  cannot  find  symbol  newStackSize  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  newStackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  pathNames,  0,  newStackSize);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStackSize	57	None	replace
515	[BUG]  [BUGGY]  stack[stackSize++]  =  path.toString();  Object  newTop  =  stack.toString();  [CE]  cannot  find  symbol  path  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  path.toString();  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  path.toString();  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  cannot  find  symbol  path	62	None	replace
516	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER  +  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
517	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  4;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  4;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  +  4;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
518	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  6;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  6;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  +  6;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
519	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  newTop;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  +  newTop;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  +  newTop;	  stack[stackSize++]    =    newTop    +    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
520	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  +  UNREADABLE_READER;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  +  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  +  UNREADABLE_READER;	  stack[stackSize++]    =    newTop    +    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
521	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  0);  [CE]  cannot  find  symbol  newStack  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  0);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newStack,  0,  0);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	59	None	replace
522	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames  -  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames  -  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames  -  2;	  stack[stackSize++]    =    newTop    -    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	33	None	replace
523	[BUG]  [BUGGY]  Stack[stackSize++]  =  pathNames.cloneTree();  [CE]  cannot  find  symbol  Stack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  pathNames.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  pathNames.cloneTree();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
524	[BUG]  [BUGGY]  Stack[stackSize++]  =  pathIndices.cloneTree();  [CE]  cannot  find  symbol  Stack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  pathIndices.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  pathIndices.cloneTree();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
525	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  pathSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  pathSize  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  pathSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  pathSize);  pathNames  =  newPathNames;	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  pathSize	71	None	replace
526	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
527	[BUG]  [BUGGY]  stack[stackSize++]  =  next.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  next  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  next.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  next.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol  next	44	None	replace
528	[BUG]  [BUGGY]  stack[stackSize++]  =  path.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  path  [FE]                        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  path.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  path.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol  path	44	None	replace
529	[BUG]  [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
530	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
531	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  throw  new  JsonMappingException( " ");  }  [CE]  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  throw  new  JsonMappingException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  else  {  throw  new  JsonMappingException( " ");  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  	42	None	replace
532	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ';'  expected	79	None	replace
533	[BUG]  [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	79	None	replace
534	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toArray(newPathIndices);  [CE]  cannot  find  symbol  newPathIndices  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toArray(newPathIndices);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.toArray(newPathIndices);	  stack[stackSize++]    =    pathIndices.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	6	None	replace
535	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toArray(newStack);  [CE]  cannot  find  symbol  newStack  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toArray(newStack);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.toArray(newStack);	  stack[stackSize++]    =    pathIndices.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newStack	6	None	replace
536	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  UNREADABLE_READER.toString();	  stack[stackSize++]    =    SENTINEL_CLOSED.toString();    	compilable	  [FE]  AssertionError  	50	2	replace
537	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER.toString();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER.toString();	  stack[stackSize++]    =    SENTINEL_CLOSED.toString();    	compilable	  [FE]  AssertionError  	50	2	replace
538	[BUG]  [BUGGY]  stack[stackSize++]  =  newPath.cloneTree();  [CE]  cannot  find  symbol  newPath  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPath.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPath.cloneTree();	  stack[stackSize++]    =    path.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  newPath	68	None	replace
539	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  stack,  0,  stackSize);  [CE]  cannot  find  symbol  path  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(path,  0,  stack,  0,  stackSize);	  stack[stackSize++]    =    path.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  path	68	None	replace
540	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newStack  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  newStack	97	None	replace
541	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  bad  operand  type  Reader  for  unary  operator  '!'  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  type  Reader  for  unary  operator  '!'	97	None	replace
542	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  bad  operand  type  Reader  for  unary  operator  '!'  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  type  Reader  for  unary  operator  '!'	97	None	replace
543	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	97	2	replace
544	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	97	2	replace
545	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
546	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
547	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
548	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
549	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
550	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
551	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop  *  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop  *  1;	  stack[stackSize++]    =    newTop    /    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	36	None	replace
552	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER?  UNREADABLE_READER  :  SENTINEL_CLOSED;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER?  UNREADABLE_READER  :  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER?  UNREADABLE_READER  :  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_READER;    	non-compiled	[CE]  incompatible  types	14	None	replace
553	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER?  UNREADABLE_READER  :  newTop;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER?  UNREADABLE_READER  :  newTop;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER?  UNREADABLE_READER  :  newTop;	  stack[stackSize++]    =    SENTINEL_READER;    	non-compiled	[CE]  incompatible  types	14	None	replace
554	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  	compilable	  [FE]  IllegalStateException  	24	2	add
555	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  	compilable	  [FE]  IllegalStateException  	24	2	add
556	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ')'  expected  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  	non-compiled	[CE]  ')'  expected	24	None	add
557	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ')'  expected  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  	non-compiled	[CE]  ')'  expected	24	None	add
558	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames  +  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames  +  3;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames  +  3;	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	64	None	replace
559	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toArray(newPathNames);  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toArray(newPathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toArray(newPathNames);	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	64	None	replace
560	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  pathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  pathNames.length);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	13	None	replace
561	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  	compilable	  [FE]  AssertionError  	37	2	add
562	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  	compilable	  [FE]  AssertionError  	37	2	add
563	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
564	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  newTop.toString();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  pathNames.toString();  stack[stackSize++]  =  newTop.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
565	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object[]  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object[]  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    Object[]  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	37	None	add
566	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  	non-compiled	[CE]  ')'  expected	37	None	add
567	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  1);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  1);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  1);  }	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	37	None	add
568	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  newStack  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
569	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arra  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arra  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arra	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  not  a  statement	83	None	replace
570	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  top  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	83	None	replace
571	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
572	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	83	None	replace
573	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  array  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  array	30	None	replace
574	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  array  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  array	30	None	replace
575	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
576	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
577	[BUG]  [BUGGY]  stack[stackSize++]  =  newPathNames  +  2;  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newPathNames  +  2;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newPathNames  +  2;	  stack[stackSize++]    =    pathIndices    +    2;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	3	None	replace
578	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
579	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  return;  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  pathNames,  0,  stackSize);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
580	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  return;  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newPathNames,  0,  pathNames.length);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	91	None	replace
581	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  newPathNames  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	96	None	add
582	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  UNREADABLE_READER);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  UNREADABLE_READER);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString(pathNames,  UNREADABLE_READER);	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	56	None	replace
583	[BUG]  [BUGGY]  stack[stackSize++]  =  System.cloneTree();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.cloneTree();	  stack[stackSize++]    =    nextTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
584	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames,  System.arraycopy(pathNames,  0,  stackSize);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames,  System.arraycopy(pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames,  System.arraycopy(pathNames,  0,  stackSize);	  stack[stackSize++]    =    pathNames.cloneTree();    	non-compiled	[CE]  ';'  expected	66	None	replace
585	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.copyCurrentStructure(pathNames);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.copyCurrentStructure(pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.copyCurrentStructure(pathNames);	  stack[stackSize++]    =    pathNames.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
586	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames,  System.arraycopy(pathNames,  0,  stackSize,  pathNames);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames,  System.arraycopy(pathNames,  0,  stackSize,  pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames,  System.arraycopy(pathNames,  0,  stackSize,  pathNames);	  stack[stackSize++]    =    pathNames.cloneTree();    	non-compiled	[CE]  ';'  expected	66	None	replace
587	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newPathIndices,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newPathIndices,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newPathIndices,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	19	None	replace
588	[BUG]  [BUGGY]  System.arraycopy(newPathIndices,  0,  pathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newPathIndices  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathIndices,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathIndices,  0,  pathNames,  0,  stackSize);	          System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathIndices	19	None	replace
589	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  top.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  top.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  top.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
590	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  path.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  path.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  path.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
591	[BUG]  [BUGGY]  Object  newTop  =  stack[stackSize++]  =  pathNames.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  stack[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  stack[stackSize++]  =  pathNames.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	60	None	replace
592	[BUG]  [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  1,  stackSize);  [CE]  cannot  find  symbol  stackNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stackNames,  0,  newPathNames,  1,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  stackNames	90	None	replace
593	[BUG]  [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  1,  pathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stack,  0,  newPathNames,  1,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stack,  0,  newPathNames,  1,  pathNames.length);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	90	None	replace
594	[BUG]  [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  1,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newPathNames,  0,  newPathNames,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newPathNames,  0,  newPathNames,  1,  stackSize);	          System.arraycopy(stack,    0,    newPathNames,    1,    stack.length);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	90	None	replace
595	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
596	[BUG]  [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	compilable	  [FE]  AssertionError  	38	2	replace
597	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
598	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ')'  expected	38	None	replace
599	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack[stackSize++],  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack[stackSize++],  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack[stackSize++],	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
600	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newPathNames  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	75	None	replace
601	[BUG]  [BUGGY]  Integer  stackSize  =  stack.toString();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Integer  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Integer  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	non-compiled	[CE]  incompatible  types	61	None	replace
602	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  newPathSize);  [CE]  cannot  find  symbol  path  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  newPathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  newPathSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  path	92	None	replace
603	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	92	None	replace
604	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_ENTINEL_CLOSED;  [CE]  cannot  find  symbol  DEFAULT_ENTINEL_CLOSED  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_ENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_ENTINEL_CLOSED;	  stack[stackSize++]    =    DEFAULT_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_ENTINEL_CLOSED	15	None	replace
605	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  pathSize);  [CE]  cannot  find  symbol  pathSize  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  pathSize);	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  pathSize	16	None	replace
606	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	16	None	replace
607	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  array[stackSize++]  =  SENTINEL_CLOSED.toString();  [CE]  cannot  find  symbol  array  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  array[stackSize++]  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    array[stackSize++]  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  cannot  find  symbol  array	49	None	add
608	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  int  stackSize  =  SENTINEL_CLOSED.toString();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  int  stackSize  =  SENTINEL_CLOSED.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    int  stackSize  =  SENTINEL_CLOSED.toString();	  	non-compiled	[CE]  incompatible  types	49	None	add
609	[BUG]  [BUGGY]  stack[stackSize++]  =  path;  [CE]  cannot  find  symbol  path  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  path;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  path;	  stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  path	94	None	replace
610	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_SYNTHETIC;  [CE]  cannot  find  symbol  DEFAULT_SYNTHETIC  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_SYNTHETIC;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_SYNTHETIC;	  stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SYNTHETIC	94	None	replace
611	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_NON_SYNTHETIC;  [CE]  cannot  find  symbol  DEFAULT_NON_SYNTHETIC  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_NON_SYNTHETIC;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_NON_SYNTHETIC;	  stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NON_SYNTHETIC	94	None	replace
612	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
613	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
614	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
615	[BUG]  [BUGGY]  Object  newTop  =  newTop.toString();  int  stackSize  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  newTop.toString();  int  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  newTop.toString();  int  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	87	None	replace
616	[BUG]  [BUGGY]  Object  newTop  =  newTop.toString();  stackSize  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  newTop.toString();  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  newTop.toString();  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	87	None	replace
617	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack[stackSize++]  =  pathNames.toString();  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    System.arraycopy(stack[stackSize++]  =  pathNames.toString();	  	non-compiled	[CE]  ')'  expected	51	None	add
618	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  array[stackSize++]  =  pathNames.toString();  [CE]  cannot  find  symbol  array  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  array[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    array[stackSize++]  =  pathNames.toString();	  	non-compiled	[CE]  cannot  find  symbol  array	51	None	add
619	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  int  stackSize  =  pathNames.toString();  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  int  stackSize  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    int  stackSize  =  pathNames.toString();	  	non-compiled	[CE]  incompatible  types	51	None	add
620	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack[stackSize++]  =  pathNames.toString());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack[stackSize++]  =  pathNames.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    System.arraycopy(stack[stackSize++]  =  pathNames.toString());	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	51	None	add
621	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newTop);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newTop);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  newTop);	          System.arraycopy(pathNames,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	21	None	replace
622	[BUG]  [BUGGY]  if(newTop  >=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  >=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  >=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	22	None	replace
623	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSsize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  stackSsize  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSsize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSsize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  stackSsize	98	None	add
624	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER  -  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	81	None	replace
625	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  /  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  /  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	81	None	replace
626	[BUG]  [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  stackNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(stackNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(stackNames,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  stackNames	72	None	replace
627	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(stack[stackSize++]  =  pathIndices.toString();  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(stack[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    System.arraycopy(stack[stackSize++]  =  pathIndices.toString();	  	non-compiled	[CE]  ')'  expected	46	None	add
628	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  array[stackSize++]  =  pathIndices.toString();  [CE]  cannot  find  symbol  array  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  array[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    array[stackSize++]  =  pathIndices.toString();	  	non-compiled	[CE]  cannot  find  symbol  array	46	None	add
629	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  int[stackSize++]  =  pathIndices.toString();  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  int[stackSize++]  =  pathIndices.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    int[stackSize++]  =  pathIndices.toString();	  	non-compiled	[CE]  ']'  expected	46	None	add
630	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(stack[stackSize++]  =  pathIndices.toString());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(stack[stackSize++]  =  pathIndices.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    System.arraycopy(stack[stackSize++]  =  pathIndices.toString());	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	46	None	add
631	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
632	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ']'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
633	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
634	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ']'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
635	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  Object  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Object	39	None	replace
636	[BUG]  [BUGGY]  stack[stackSize++]  =  top.toString();  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  top  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  top.toString();  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  top.toString();  Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	39	None	replace
637	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSEED.toString();  Object[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  SENTINEL_CLOSEED  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSEED.toString();  Object[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSEED.toString();  Object[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLOSEED	39	None	replace
638	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	25	2	replace
639	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	25	2	replace
640	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
641	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
642	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ')'  expected  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ')'  expected	25	None	replace
643	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack[stackSize  [CE]  ']'  expected  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack[stackSize  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack[stackSize	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	25	None	replace
644	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  bad  operand  type  Reader  for  unary  operator  '!'  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  bad  operand  type  Reader  for  unary  operator  '!'	100	None	replace
645	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
646	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  [CE]  illegal  start  of  expression  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
647	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  bad  operand  type  Reader  for  unary  operator  '!'  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  type  Reader  for  unary  operator  '!'	99	None	replace
648	[BUG]  [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  bad  operand  type  Reader  for  unary  operator  '!'  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(!UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  bad  operand  type  Reader  for  unary  operator  '!'	99	None	replace
649	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findStackPath(JsonTreeReader.class);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findStackPath(JsonTreeReader.class);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findStackPath(JsonTreeReader.class);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
650	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(JsonTreeReader.class);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(JsonTreeReader.class);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findCurrentTree(JsonTreeReader.class);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
651	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(pathNames);  [CE]  cannot  find  symbol  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findCurrentTree(pathNames);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
652	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
653	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
654	[BUG]  [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
655	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathIndices.length  -  1  +  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
656	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.length  -  1  +  1;	  stack[stackSize++]    =    pathIndices.length    -    1;    	compilable	  [FE]  AssertionError  	35	2	replace
657	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  newTop  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  newTop  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object[]  newTop  =  newTop.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	84	None	add
658	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  newTop  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  newTop  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  newTop  =  newTop.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	84	None	add
659	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();	  	non-compiled	[CE]  ']'  expected	84	None	add
660	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object[]  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	84	None	add
661	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  int  stackSize  =  newTop.toString();  Object  result  =  newTop.toString();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  int  stackSize  =  newTop.toString();  Object  result  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    int  stackSize  =  newTop.toString();  Object  result  =  newTop.toString();	  	non-compiled	[CE]  incompatible  types	84	None	add
662	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  result  =  newTop.toString();  [CE]  variable  result  is  already  defined  in  method  push(Object)  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  result  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  result  =  newTop.toString();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  push(Object)	84	None	add
663	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  newTop  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();	  	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	84	None	add
664	[BUG]  [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
665	[BUG]  [BUGGY]  if(stack!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
666	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathNames.length);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
667	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	74	None	replace
668	[BUG]  [BUGGY]  if(stack!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	74	None	replace
669	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]  =  pathNames.clone();	  stack[stackSize++]    =    newTop.clone();    	compilable	  [FE]  AssertionError  	7	2	replace
670	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.clone();  [FE]  AssertionError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.clone();	  stack[stackSize++]    =    newTop.clone();    	compilable	  [FE]  AssertionError  	7	2	replace
671	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  stack,  0,  newTop.length);  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(newStack,  0,  stack,  0,  newTop.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(newStack,  0,  stack,  0,  newTop.length);	  stack[stackSize++]    =    newTop.clone();    	non-compiled	[CE]  cannot  find  symbol  newStack	7	None	replace
672	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
673	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arra  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arra  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arra	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  not  a  statement	86	None	replace
674	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  top  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  top.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	86	None	replace
675	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
676	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  newStack  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  stack.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
677	[BUG]  [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
678	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
679	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
680	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	23	None	replace
681	[BUG]  [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack  ==  null)  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	23	None	replace
682	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack[stackSize++]  =  UNREADABLE_READER;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack[stackSize++]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    System.arraycopy(stack[stackSize++]  =  UNREADABLE_READER;	  	non-compiled	[CE]  ')'  expected	10	None	add
683	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	10	None	add
684	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }	  	compilable	  [FE]  AssertionError  	10	2	add
685	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }	  	compilable	  [FE]  AssertionError  	10	2	add
686	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newPathNames	10	None	add
687	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }	  	compilable	  [FE]  AssertionError  	10	2	add
688	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }	  	compilable	  [FE]  AssertionError  	10	2	add
689	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  ==  1)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  	non-compiled	[CE]  cannot  find  symbol  newStack	10	None	add
690	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int  stackSize  =  newTop.toString()  +  1;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString()  +  1;  int  stackSize  =  newTop.toString()  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    newTop.toString()    +    1;    int  stackSize  =  newTop.toString()  +  1;	  	non-compiled	[CE]  incompatible  types	54	None	add
691	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  Object  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Object	39	None	replace
692	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ')'  expected	39	None	replace
693	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  }  [CE]  cannot  find  symbol  Object  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  Object[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  }	  stack[stackSize++]    =    newTop.toString();    Object[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  Object	39	None	replace
694	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(stack,  0,  stack,  0,  pathIndices.toString());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(stack,  0,  stack,  0,  pathIndices.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    System.arraycopy(stack,  0,  stack,  0,  pathIndices.toString());	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	46	None	add
695	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(pathIndices,  0,  stackSize,  pathNames,  0,  stackSize);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toString();  System.arraycopy(pathIndices,  0,  stackSize,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.toString();    System.arraycopy(pathIndices,  0,  stackSize,  pathNames,  0,  stackSize);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	46	None	add
696	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  	compilable	  [FE]  IllegalStateException  	98	2	add
697	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  	compilable	  [FE]  IllegalStateException  	98	2	add
698	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  AssertionError  	98	2	add
699	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  AssertionError  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  AssertionError  	98	2	add
700	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	98	2	add
701	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  ArrayIndexOutOfBoundsException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	98	2	add
702	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize++];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize++];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	98	2	add
703	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize++];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  ArrayIndexOutOfBoundsException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize++];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize++];  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	98	2	add
704	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  System.arraycopy(pathIndices,  0,  stackSize  -  1,  pathIndices.length  -  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.length  -  1;  System.arraycopy(pathIndices,  0,  stackSize  -  1,  pathIndices.length  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathIndices.length    -    1;    System.arraycopy(pathIndices,  0,  stackSize  -  1,  pathIndices.length  -  1);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	34	None	add
705	[BUG]  [BUGGY]  if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_    	non-compiled	[CE]  ';'  expected	77	None	replace
706	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  	compilable	  [FE]  IllegalStateException  	96	2	add
707	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  	compilable	  [FE]  IllegalStateException  	96	2	add
708	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLLOSED  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLLOSED	96	None	add
709	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	96	2	add
710	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  UNREADABLE_READER;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	96	2	add
711	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  AssertionError  	96	2	add
712	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  AssertionError  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    Object[]  stack  =  new  Object[stackSize  *  2];  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  AssertionError  	96	2	add
713	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);	  	compilable	  [FE]  IllegalStateException  	96	2	add
714	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,  0,  stack,  0,  stackSize);	  	compilable	  [FE]  IllegalStateException  	96	2	add
715	[BUG]  [BUGGY]  stack[stackSize++]  =  nextTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  nextTop  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  nextTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  nextTop.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol  nextTop	44	None	replace
716	[BUG]  [BUGGY]  stack[stackSize++]  =  toolkit.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [CE]  cannot  find  symbol  toolkit  [FE]                      AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  toolkit.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  toolkit.toString();  ((  JsonTreeReader)stack[stackSize++]).setAliased(true);	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).setAliased(true);    	non-compiled	[CE]  cannot  find  symbol  toolkit	44	None	replace
717	[BUG]  [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
718	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
719	[BUG]  [BUGGY]  if(stackSize!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
720	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ']'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ']'  expected	28	None	replace
721	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop;  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop;  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop;  ((  JsonTreeReader)stack[stackSize++]).write(newTop.toString());	  stack[stackSize++]    =    newTop.toString();    ((    JsonTreeReader)stack[stackSize++]).write(newTop.toString());    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
722	[BUG]  [BUGGY]  System.arraycopy(path,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  path  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(path,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(path,  0,  newPathNames,  0,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  path	72	None	replace
723	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  paths  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  paths  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  paths  =  newPathNames;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	72	None	replace
724	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	replace
725	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	replace
726	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ')'  expected  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ')'  expected	25	None	replace
727	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(stack,  0,  newStack  [CE]  ')'  expected  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(stack,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(stack,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ')'  expected	25	None	replace
728	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	25	2	replace
729	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalStateException( " ");  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	25	2	replace
730	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathIndices,  0,  newStack  [CE]  ')'  expected  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathIndices,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathIndices,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ')'  expected	25	None	replace
731	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalArgumentException  	25	2	replace
732	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalArgumentException  	25	2	replace
733	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  >=  UNREADABLE_READER)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
734	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  stack[stackSize++]  =  UNREADABLE_READER;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  stack[stackSize++]  =  UNREADABLE_READER;  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
735	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
736	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  stack[stackSize++]  =  UNREADABLE_CLOSED;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  stack[stackSize++]  =  UNREADABLE_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    UNREADABLE_READER;    if(stackSize  <  =  count)  {  stack[stackSize++]  =  UNREADABLE_READER;  }  else  {  stack[stackSize++]  =  UNREADABLE_CLOSED;  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
737	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
738	[BUG]  [BUGGY]  if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
739	[BUG]  [BUGGY]  if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED    	non-compiled	[CE]  ';'  expected	78	None	replace
740	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathIndices.cloneTree();  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathIndices.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED,  pathIndices.cloneTree();	  stack[stackSize++]    =    SENTINEL_CLOSED.cloneTree();    	non-compiled	[CE]  ';'  expected	5	None	replace
741	[BUG]  [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  System.arraycopy(stack,  0,  newPathNames,  0,  stackSize);  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(newTop    ==    null)    {    System.arraycopy(stack,    0,    newPathIndices,    0,    stackSize);    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	20	None	replace
742	[BUG]  [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  length  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  length	38	None	replace
743	[BUG]  [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [CE]  cannot  find  symbol  length  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  length	38	None	replace
744	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  }	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	38	None	replace
745	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  newTop.toString();  }  else  {  System.arraycopy(stack,  0,  newStack	  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ')'  expected	38	None	replace
746	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  result  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  variable  result  is  already  defined  in  method  push(Object)  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  result  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  result  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  push(Object)	84	None	add
747	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  result  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [CE]  variable  result  is  already  defined  in  method  push(Object)  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object[]  result  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object[]  result  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  push(Object)	84	None	add
748	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  result  =  newTop.toString();  Object  result  =  newTop.toString();  [CE]  variable  result  is  already  defined  in  method  push(Object)  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  Object  result  =  newTop.toString();  Object  result  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    Object  result  =  newTop.toString();  Object  result  =  newTop.toString();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  push(Object)	84	None	add
749	[BUG]  [BUGGY]  stack[stackSize++]  =  STACK_CLLOSED;  [CE]  cannot  find  symbol  STACK_CLLOSED  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  STACK_CLLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  STACK_CLLOSED;	  stack[stackSize++]    =    SENTINEL_CLLOSED;    	non-compiled	[CE]  cannot  find  symbol  STACK_CLLOSED	94	None	replace
750	[BUG]  [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  incomparable  types:  int  and  Reader  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  incomparable  types:  int  and  Reader	30	None	replace
751	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  array  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  array	30	None	replace
752	[BUG]  [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  incomparable  types:  int  and  Reader  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  incomparable  types:  int  and  Reader	30	None	replace
753	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ')'  expected  [FE]                        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  array[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    array[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ')'  expected	30	None	replace
754	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
755	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
756	[BUG]  [BUGGY]  if(stackSize  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
757	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [CE]  cannot  find  symbol  newPathNames  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);	  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	100	None	replace
758	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  [CE]  cannot  find  symbol  newPathNames  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	57	None	replace
759	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  *  2);  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  *  2);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize  *  2);	  stack[stackSize++]    =    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	57	None	replace
760	[BUG]  [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  System.arraycopy(pathNames,  0,  newPathNames));  [CE]  cannot  find  symbol  newPathNames  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  newTop.toString(pathNames,  System.arraycopy(pathNames,  0,  newPathNames));  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  newTop.toString(pathNames,  System.arraycopy(pathNames,  0,  newPathNames));	  stack[stackSize++]    =    newTop.toString(pathNames);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	56	None	replace
761	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices,  pathNames  -  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices,  pathNames  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices,  pathNames  -  1;	  stack[stackSize++]    =    pathIndices    -    1;    	non-compiled	[CE]  ';'  expected	32	None	replace
762	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  Object  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
763	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ')'  expected  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ')'  expected	27	None	replace
764	[BUG]  [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  Object[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  Object  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  UNREADABLE_READER;  Object[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  UNREADABLE_READER;  Object[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
765	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  newTop;  [CE]  cannot  find  symbol  Object  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  newTop;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED;  Object[stackSize++]  =  newTop;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Object[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Object	27	None	replace
766	[BUG]  [BUGGY]  stack[stackSize++]  =  top.clone();  [CE]  cannot  find  symbol  top  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  top.clone();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  top.clone();	  stack[stackSize++]    =    newTop.clone();    	non-compiled	[CE]  cannot  find  symbol  top	7	None	replace
767	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize  -  1);  [CE]  cannot  find  symbol  newStack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize  -  1);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newStack,  0,  stackSize  -  1);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStack	12	None	replace
768	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  pathNames,  0,  stackSize);  [CE]  cannot  find  symbol  path  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  pathNames,  0,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(path,  0,  pathNames,  0,  stackSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  path	58	None	replace
769	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices.toPath();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices.toPath();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices.toPath();	  stack[stackSize++]    =    pathIndices.toString();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
770	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	79	None	replace
771	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	79	None	replace
772	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	79	None	replace
773	[BUG]  [BUGGY]  if(stackSize  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newStack  [FE]                      IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newStack	79	None	replace
774	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackS  [CE]  ')'  expected  [FE]                        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackS  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack,  0,  stackSize);  System.arraycopy(newPathNames,  0,  stackS	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    System.arraycopy(newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  ')'  expected	79	None	replace
775	[BUG]  [BUGGY]  Stack[stackSize++]  =  top.cloneTree();  [CE]  cannot  find  symbol  Stack  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  top.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  top.cloneTree();	  Stack[stackSize++]    =    newTop.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  Stack	8	None	replace
776	[BUG]  [BUGGY]  Stack[stackSize++]  =  UNREADABLE_READER;  [CE]  cannot  find  symbol  Stack  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack[stackSize++]  =  UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack[stackSize++]  =  UNREADABLE_READER;	  stack[stackSize++]    =    SENTINEL_READER;    	non-compiled	[CE]  cannot  find  symbol  Stack	14	None	replace
777	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
778	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
779	[BUG]  [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]              IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
780	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  1,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  1,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  1,  stackSize);  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	76	None	replace
781	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  pathNames  =  newPathNames;  }  [CE]  cannot  find  symbol  newPathNames  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  pathNames  =  newPathNames;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  pathNames  =  newPathNames;  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	69	None	replace
782	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathSize);  [CE]  cannot  find  symbol  newPathSize  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  newPathSize);	          System.arraycopy(pathNames,    0,    newPathIndices,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathSize	21	None	replace
783	[BUG]  [BUGGY]  Stack  stack[stackSize++]  =  newTop.toString();  Object  newTop  =  stack.toString();  [CE]  ']'  expected  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Stack  stack[stackSize++]  =  newTop.toString();  Object  newTop  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Stack  stack[stackSize++]  =  newTop.toString();  Object  newTop  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    Object    newTop    =    stack.toString();    	non-compiled	[CE]  ']'  expected	62	None	replace
784	[BUG]  [BUGGY]  char  stackSize  =  stack.toString();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  char  stackSize  =  stack.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	char  stackSize  =  stack.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    stack.toString();    	non-compiled	[CE]  incompatible  types	61	None	replace
785	[BUG]  [BUGGY]  stack[stackSize++]  =  top.toString();  [CE]  cannot  find  symbol  top  [FE]        AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  top.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  top.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  top	83	None	replace
786	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]          AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    0,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	83	None	replace
787	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(pathNames,  JsonTreeReader.class);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findCurrentTree(pathNames,  JsonTreeReader.class);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findCurrentTree(pathNames,  JsonTreeReader.class);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
788	[BUG]  [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findStackTop(pathNames);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  JsonTreeReader.findStackTop(pathNames);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  JsonTreeReader.findStackTop(pathNames);	  stack[stackSize++]    =    JsonTreeReader.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
789	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newStackSize);  [CE]  cannot  find  symbol  newStackSize  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newStackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  newStackSize);	          System.arraycopy(pathNames,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newStackSize	17	None	replace
790	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  int[stackSize++]  =  pathNames.toString();  [CE]  ']'  expected  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  int[stackSize++]  =  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    int[stackSize++]  =  pathNames.toString();	  	non-compiled	[CE]  ']'  expected	51	None	add
791	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  stack,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]    =    pathNames.toString();    System.arraycopy(stack,  0,  stack,  0,  pathNames.length);	  	compilable	  [FE]  AssertionError  	51	2	add
792	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  stack,  0,  pathNames.length);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  stack,  0,  pathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    pathNames.toString();    System.arraycopy(stack,  0,  stack,  0,  pathNames.length);	  	compilable	  [FE]  AssertionError  	51	2	add
793	[BUG]  [BUGGY]  stack[stackSize++]  =  DEFAULT_UNREADABLE_READER;  [CE]  cannot  find  symbol  DEFAULT_UNREADABLE_READER  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  DEFAULT_UNREADABLE_READER;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  DEFAULT_UNREADABLE_READER;	  stack[stackSize++]    =    UNREADABLE_READER;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_UNREADABLE_READER	11	None	replace
794	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString());  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  stack[stackSize++]  =  SENTINEL_CLOSED.toString());  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]    =    SENTINEL_CLOSED.toString();    stack[stackSize++]  =  SENTINEL_CLOSED.toString());	  	non-compiled	[CE]  ';'  expected	49	None	add
795	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  cannot  find  symbol  newPathNames  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	75	None	replace
796	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
797	[BUG]  [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack[stackSize++]  =  SENTINEL	  stack[stackSize++]    =    SENTINEL_CLOSED;    if(stackSize    ==    0)    {    stack[stackSize++]    =    SENTINEL_CLOSED;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
798	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  RENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  RENTINEL_CLOSED  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  RENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  RENTINEL_CLOSED;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	non-compiled	[CE]  cannot  find  symbol  RENTINEL_CLOSED	24	None	add
799	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	24	2	add
800	[BUG]  [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  SENTINEL_CLOSED;  stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        SENTINEL_CLOSED;        stack[stackSize++]    =    SENTINEL_CLOSED;    stack[stackSize++]  =  UNREADABLE_READER;  stack[stackSize++]  =  SENTINEL_CLOSED;	  	compilable	  [FE]  IllegalStateException  	24	2	add
801	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  pathSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	70	None	replace
802	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  newTop;  [CE]  cannot  find  symbol  Stack  [FE]          IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  newTop;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED;  Stack[stackSize++]  =  newTop;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  Stack	26	None	replace
803	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [CE]  cannot  find  symbol  SENTINEL_CLLOSED  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLLOSED;  Stack[stackSize++]  =  SENTINEL_CLOSED;	  stack[stackSize++]    =    SENTINEL_CLOSED;    Stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  cannot  find  symbol  SENTINEL_CLLOSED	26	None	replace
804	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames  -  1;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames  -  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames  -  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    -    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
805	[BUG]  [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
806	[BUG]  [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
807	[BUG]  [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  int  stackSize++]  =  SENTINEL_CLOSED;  }  else  {  System.arraycopy(pathNames,  0,  newStack	  stack[stackSize++]    =    SENTINEL_CLOSED;    int    stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	29	None	replace
808	[BUG]  [BUGGY]  stack[stackSize++]  =  System.toString();  [CE]  non-static  method  toString()  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.toString();	  stack[stackSize++]    =    path.toString();    	non-compiled	[CE]  non-static  method  toString()  cannot  be  referenced  from  a  static  context	53	None	replace
809	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	Object  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
810	[BUG]  [BUGGY]  Object  stackSize  =  newTop.toString();  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  stackSize  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  stackSize  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	2	replace
811	[BUG]  [BUGGY]  int  stackSize  =  this.newTop.toString();  [CE]  cannot  find  symbol  newTop  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  int  stackSize  =  this.newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	int  stackSize  =  this.newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newTop	87	None	replace
812	[BUG]  [BUGGY]  Object  newTop  =  newTop.toString();  [CE]  variable  newTop  is  already  defined  in  method  push(Object)  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  Object  newTop  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	Object  newTop  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    int    stackSize    =    newTop.toString();    	non-compiled	[CE]  variable  newTop  is  already  defined  in  method  push(Object)	87	None	replace
813	[BUG]  [BUGGY]  stack[stackSize++]  =  result.cloneTree();  [CE]  cannot  find  symbol  result  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  result.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  result.cloneTree();	  stack[stackSize++]    =    next.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  result	67	None	replace
814	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  [CE]  cannot  find  symbol  newPathNames  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  newPathNames.length);	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	16	None	replace
815	[BUG]  [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
816	[BUG]  [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
817	[BUG]  [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int    stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ';'  expected	41	None	replace
818	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames  ==  null?  new  String(pathNames):  pathNames.toString();  [CE]  no  suitable  constructor  found  for  String(String[])  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames  ==  null?  new  String(pathNames):  pathNames.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames  ==  null?  new  String(pathNames):  pathNames.toString();	  stack[stackSize++]    =    pathNames.toString();    	non-compiled	[CE]  no  suitable  constructor  found  for  String(String[])	52	None	replace
819	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  pathSize);  [CE]  cannot  find  symbol  newPathNames  [FE]            IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(pathIndices,  0,  newPathNames,  0,  pathSize);	  stack[stackSize++]    =    System.arraycopy(pathIndices,    0,    newPathNames,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  newPathNames	13	None	replace
820	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathSize  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  0,  newPathSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  0,  newPathSize);  pathNames  =  newPathNames;	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathSize	71	None	replace
821	[BUG]  [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  pathNames  =  newPathNames;  [CE]  cannot  find  symbol  newPathNames  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  pathNames  =  newPathNames;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(pathNames,  0,  pathNames,  1,  stackSize);  pathNames  =  newPathNames;	          System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    	non-compiled	[CE]  cannot  find  symbol  newPathNames	71	None	replace
822	[BUG]  [BUGGY]  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  return;  [CE]  cannot  find  symbol  newStack  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  return;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	System.arraycopy(newStack,  0,  pathNames,  0,  stackSize);  return;	          System.arraycopy(stack,    0,    newPathNames,    0,    stackSize);    return;    	non-compiled	[CE]  cannot  find  symbol  newStack	91	None	replace
823	[BUG]  [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  ==  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
824	[BUG]  [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                  AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >=  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
825	[BUG]  [BUGGY]  if(stackSize  >  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stackSize  >  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stackSize  >  newTop.length)  {  stack[stackSize++]  =  newTop.toString();  int[stackSize++]  =  newTop.toString();  }	  stack[stackSize++]    =    newTop.toString();    int[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  ']'  expected	42	None	replace
826	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	99	2	replace
827	[BUG]  [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	99	2	replace
828	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	2	replace
829	[BUG]  [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	2	replace
830	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	99	None	replace
831	[BUG]  [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  else  {	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	99	None	replace
832	[BUG]  [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  1,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    1,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	99	None	replace
833	[BUG]  [BUGGY]  stack[stackSize++]  =  pathIndices,  newTop.cloneTree();  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathIndices,  newTop.cloneTree();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathIndices,  newTop.cloneTree();	  stack[stackSize++]    =    pathIndices.cloneTree();    	non-compiled	[CE]  ';'  expected	6	None	replace
834	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
835	[BUG]  [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]    =    newTop.toString();    stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]        =        newTop.toString();        stack[stackSize++]    =    newTop.toString();    Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();	  	compilable	  [FE]  AssertionError  	37	2	add
836	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames,  newTop  +  1;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames,  newTop  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames,  newTop  +  1;	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  ';'  expected	64	None	replace
837	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames  *  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames  *  1;	  stack[stackSize++]    =    pathNames    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	64	None	replace
838	[BUG]  [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [CE]  cannot  find  symbol  newPathNames  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(pathNames!=  null)  {  System.arraycopy(pathNames,  0,  pathNames,  0,  stackSize);  pathNames  =  newPathNames;  }  else  {  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  }	          if(stack!=    null)    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    pathNames    =    newPathNames;    }    else    {    System.arraycopy(pathNames,    0,    newPathNames,    0,    stackSize);    }    	non-compiled	[CE]  cannot  find  symbol  newPathNames	74	None	replace
839	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	97	2	replace
840	[BUG]  [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack.length  >  0)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  IllegalStateException  	97	2	replace
841	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	add	if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	97	2	replace
842	[BUG]  [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(stack.length  <  1)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED;  }	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	97	2	replace
843	[BUG]  [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop  ==  UNREADABLE_READER)  {  stack[stackSize++]  =  SENTINEL_CLOSED;  System.arraycopy(stack,  0,  stack,  0,  stackSize);  stack[stackSize++]  =  SENTINEL_CLOSED	  stack[stackSize++]    =    SENTINEL_CLOSED;    System.arraycopy(stack,    0,    stack,    0,    stackSize);    stack[stackSize++]    =    SENTINEL_CLOSED;    	non-compiled	[CE]  ';'  expected	97	None	replace
844	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]            AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
845	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  [CE]  cannot  find  symbol  newStack  [FE]              AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  stack[stackSize++]  =  newTop.toString();	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
846	[BUG]  [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  [CE]  cannot  find  symbol  newStack  [FE]                AssertionError      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  pathNames.toString();  System.arraycopy(stack,  0,  newStack,  1,  stackSize);	  stack[stackSize++]    =    newTop.toString();    System.arraycopy(stack,    0,    newStack,    1,    stackSize);    stack[stackSize++]    =    newTop.toString();    	non-compiled	[CE]  cannot  find  symbol  newStack	86	None	replace
847	[BUG]  [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  pathSize);  [CE]  cannot  find  symbol  path  [FE]        IllegalStateException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  pathSize);  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  System.arraycopy(path,  0,  newStack,  0,  pathSize);	  stack[stackSize++]    =    System.arraycopy(path,    0,    newStack,    0,    stackSize);    	non-compiled	[CE]  cannot  find  symbol  path	92	None	replace
848	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  result.toString();  }  [CE]  cannot  find  symbol  result  [FE]    AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  }  else  {  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  cannot  find  symbol  result	85	None	replace
849	[BUG]  [BUGGY]  if(result  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [CE]  cannot  find  symbol  result  [FE]      AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(result  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(result  ==  null)  {  stack[stackSize++]  =  newTop.toString();  Object  result  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  cannot  find  symbol  result	85	None	replace
850	[BUG]  [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [CE]  cannot  find  symbol  result  [FE]        AssertionError    [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	if(newTop!=  null)  {  stack[stackSize++]  =  newTop.toString();  stack[stackSize++]  =  result.toString();  }	  stack[stackSize++]    =    newTop.toString();    Object    result    =    newTop.toString();    stack[stackSize++]    =    result.toString();    	non-compiled	[CE]  cannot  find  symbol  result	85	None	replace
851	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames  +  1;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames  +  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED,  pathNames  +  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  ';'  expected	63	None	replace
852	[BUG]  [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      Object[]  newStack  =  new  Object[stackSize  *  2];  int[]  newPathIndices  =  new  int[stackSize  *  2];  String[]  newPathNames  =  new  String[stackSize  *  2];  System.arraycopy(stack,  0,  newStack,  0,  stackSize);  System.arraycopy(pathIndices,  0,  newPathIndices,  0,  stackSize);  System.arraycopy(pathNames,  0,  newPathNames,  0,  stackSize);  stack  =  newStack;  pathIndices  =  newPathIndices;  pathNames  =  newPathNames;  }      [BUGGY]  stack[stackSize++]  =  SENTINEL_CLOSED  *  1;  [BUGGY]      }  [CLASS]  JsonTreeReader  1  [METHOD]  push  [RETURN_TYPE]  void  Object  newTop  [VARIABLES]  boolean  Reader  UNREADABLE_READER  Object  SENTINEL_CLOSED  newTop  o  result  int[]  newPathIndices  pathIndices  String[]  newPathNames  pathNames  Object[]  newStack  stack  int  count  offset  result  stackSize  	projects/Gson12/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java	1.0	291	291	2	replace	stack[stackSize++]  =  SENTINEL_CLOSED  *  1;	  stack[stackSize++]    =    SENTINEL_CLOSED    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	63	None	replace
